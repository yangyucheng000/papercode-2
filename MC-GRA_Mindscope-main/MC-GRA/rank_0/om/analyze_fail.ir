# ===============================================================================================
# The following shows the last analyze fail log message.
# ===============================================================================================

----------------------------------------------------
- Caught exception:
----------------------------------------------------
make_dict evaluator key only supports string, number, constant tensor and tuple, but got None

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/abstract/ops/prim_structures.cc:33 CheckDictKey

----------------------------------------------------
- The Traceback of Net Construct Code:
----------------------------------------------------
# 0 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589
                        return grad_(fn, weights)(*args)
                               ^
# 1 In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113
        self.victim_model.set_train(False)
        ^
# 2 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870
        if mode:
# 3 In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113
        self.victim_model.set_train(False)
        ^
# 4 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874
        self.add_flags_recursive(training=mode)
        ^
# 5 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730
        self.add_flags(**flags)
        ^
# 6 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698
        if not hasattr(self, "_func_graph_flags"):
        ^
# 7 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730
        self.add_flags(**flags)
        ^
# 8 In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700
        self._func_graph_flags.update({**flags})
                                      ^

# ===============================================================================================
# The following shows the IR when the function graphs evaluation fails to help locate the problem.
# You can search the last ------------------------> to the node which is evaluated failure.
# Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.ir to get more instructions.
# ===============================================================================================

# IR entry: @after_grad_43
# Total subgraphs: 279

# Total params: 13
# Params:
%para1_args0 : <null>
%para2_args1 : <null>
%para3_Parameter$1 : <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>  :  has_default
%para4_50591 : <Ref[Tensor[Float32]], (), ref_key=:50591>  :  has_default
%para5_85931 : <Ref[Tensor[Float32]], (), ref_key=:85931>  :  has_default
%para6_4695 : <Ref[Tensor[Float32]], (1433, 16), ref_key=:4695>  :  has_default
%para7_35688 : <Ref[Tensor[Float32]], (16, 16), ref_key=:35688>  :  has_default
%para8_gc1.bias : <Ref[Tensor[Float32]], (), ref_key=:gc1.bias>  :  has_default
%para9_gc2.bias : <Ref[Tensor[Float32]], (), ref_key=:gc2.bias>  :  has_default
%para10_gc1.weight : <Ref[Tensor[Float32]], (1433, 16), ref_key=:gc1.weight>  :  has_default
%para11_gc2.weight : <Ref[Tensor[Float32]], (16, 16), ref_key=:gc2.weight>  :  has_default
%para12_linear1.bias : <Ref[Tensor[Float32]], (7), ref_key=:linear1.bias>  :  has_default
%para13_linear1.weight : <Ref[Tensor[Float32]], (7, 16), ref_key=:linear1.weight>  :  has_default

subgraph attr:
subgraph instance: after_grad_43 : 0x56296f99f320
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:588/                    def after_grad(*args):/
subgraph @after_grad_43(%para1_args0, %para2_args1, %para3_Parameter$1, %para4_50591, %para5_85931, %para6_4695, %para7_35688, %para8_gc1.bias, %para9_gc2.bias, %para10_gc1.weight, %para11_gc2.weight, %para12_linear1.bias, %para13_linear1.weight) {
  %1(CNode_61) = MakeTuple(%para1_args0, %para2_args1)
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <Tensor[Int8], (2708)>) -> (<Tuple[List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External],Tensor[Int8]], TupleShape(ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape], (2708))>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:588/                    def after_grad(*args):/
  %2(62) = UnpackGraph(@forward_fn_63, %1)
      : (<Func, NoShape>, <Tuple[List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External],Tensor[Int8]], TupleShape(ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape], (2708))>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %3(CNode_64) = MakeTuple(%para3_Parameter$1)
      : (<Ref[Tensor[Float32]], (3665278)>) -> (<Tuple[Ref[Tensor[Float32]]], TupleShape((3665278))>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %4(62) = S_Prim_grad(%2, %3)
      : (<Func, NoShape>, <Tuple[Ref[Tensor[Float32]]], TupleShape((3665278))>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 0
  %5(62) = UnpackCall_unpack_call(%4, %1)
      : (<Func, NoShape>, <Tuple[List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External],Tensor[Int8]], TupleShape(ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape], (2708))>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @after_grad_43:62{[0]: ValueNode<UnpackGraphPrimitive> UnpackGraph, [1]: ValueNode<FuncGraph> forward_fn_63, [2]: CNode_61}
#   2: @after_grad_43:62{[0]: ValueNode<DoSignaturePrimitive> S_Prim_grad, [1]: 62, [2]: CNode_64}
#   3: @after_grad_43:62{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.65, [1]: 62, [2]: CNode_61}
#   4: @after_grad_43:CNode_66{[0]: ValueNode<Primitive> Return, [1]: 62}


subgraph attr:
core : 1
subgraph instance: UnpackCall_44 : 0x56297642f0c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
subgraph @UnpackCall_44(%para14_, %para15_) {
  %1(62) = TupleGetItem(%para15_46, I64(0))
      : (<Tuple[List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External],Tensor[Int8]], TupleShape(ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape], (2708))>, <Int64, NoShape>) -> (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %2(62) = TupleGetItem(%para15_46, I64(1))
      : (<Tuple[List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External],Tensor[Int8]], TupleShape(ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape], (2708))>, <Int64, NoShape>) -> (<Tensor[Int8], (2708)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 1
  %3(62) = %para14_45(%1, %2)
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <Tensor[Int8], (2708)>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @UnpackCall_44:62{[0]: param_45, [1]: 62, [2]: 62}
#   2: @UnpackCall_44:62{[0]: ValueNode<Primitive> Return, [1]: 62}


subgraph attr:
k_graph : 1
core : 1
subgraph instance: grad_forward_fn_47 : 0x56297640f000
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @grad_forward_fn_47 parent: [subgraph @grad_forward_fn_67](%para16_, %para17_) {
  %1(62) = $(grad_forward_fn_67):J[side_effect_propagate: I64(1)](%para-1_68)
      : (<Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/

#------------------------> 2
  %2(62) = %1(%para16_grad_forward_fn, %para17_grad_forward_fn)
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <Tensor[Int8], (2708)>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %3(62) = TupleGetItem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %4(62) = TupleGetItem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %5(62) = HyperMapPy_hyper_map[ones_like_leaf]{fn_leaf=MultitypeFuncGraph_ones_like_leaf{(NoneType), (Func), (Number), (COOTensor), (TypeType), (Tensor), (CSRTensor)}}(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %6(62) = %4(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %7(62) = TupleGetItem(%6, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %8(62) = Partial[side_effect_propagate: I64(1)](MultitypeFuncGraph_env_get{(EnvType, MapTensor), (EnvType, Tensor)}, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %9(62) = HyperMap_hyper_map(%8, %para-1_69)
      : (<null>, <Tuple[Ref[Tensor[Float32]]], TupleShape((3665278))>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %10(62) = MakeTuple(%3, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
}
# Order:
#   1: @grad_forward_fn_47:62{[0]: 62, [1]: param_grad_forward_fn, [2]: param_grad_forward_fn}
#   2: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> TupleGetItem, [1]: 62, [2]: ValueNode<Int64Imm> 0}
#   3: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> TupleGetItem, [1]: 62, [2]: ValueNode<Int64Imm> 1}
#   4: @grad_forward_fn_47:62{[0]: ValueNode<HyperMapPy> MetaFuncGraph-hyper_map[ones_like_leaf].70, [1]: 62}
#   5: @grad_forward_fn_47:62{[0]: 62, [1]: 62}
#   6: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> TupleGetItem, [1]: 62, [2]: ValueNode<Int64Imm> 0}
#   7: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> Partial, [1]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-env_get.71, [2]: 62}
#   8: @grad_forward_fn_47:62{[0]: ValueNode<HyperMap> MetaFuncGraph-hyper_map.72, [1]: 62, [2]: param_69}
#   9: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> MakeTuple, [1]: 62, [2]: 62}
#  10: @grad_forward_fn_47:62{[0]: ValueNode<Primitive> Return, [1]: 62}


subgraph attr:
defer_inline : 1
subgraph instance: forward_fn_41 : 0x56296f803a00
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @forward_fn_41 parent: [subgraph @after_grad_43](%para18_data, %para19_label) {

#------------------------> 3
  %1(CNode_74) = call @set_train_73(Bool(0))
      : (<Bool, NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113/        self.victim_model.set_train(False)/
  %2(CNode_76) = call @set_layers_75(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:128/        self.embedding.set_layers(1)/
  %3(CNode_78) = call @set_layers_77(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:130/        self.embedding.set_layers(2)/
  %4(ori_features) = S_Prim_getitem(%para18_data, I64(2))
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_adj) = S_Prim_getitem(%para18_data, I64(0))
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(modified_adj) = call @get_modified_adj_79(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(args) = S_Prim_getitem(%para18_data, I64(4))
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_80) = getattr(%7, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(modified_adj) = call @adding_noise_81(%6, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(CNode_82) = S_Prim_sub(%9, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:136/        em = self.embedding(ori_features, modified_adj-ori_adj)/
  %11(em) = call @models_mind_gcn_embedding_GCN_construct_83(%4, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:136/        em = self.embedding(ori_features, modified_adj-ori_adj)/
  %12(CNode_85) = call @dot_product_decode_84(%11)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:138/        self.adj_changes_after = self.dot_product_decode(em)/
  %13(CNode_86) = setattr[side_effect_io: Bool(1)](InterpretedObject, "adj_changes_after", %12)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:138/        self.adj_changes_after = self.dot_product_decode(em)/
  %14(adj) = S_Prim_getitem(%para18_data, I64(1))
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %15(H_A2) = call @models_mind_gcn_embedding_GCN_construct_83(%4, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:131/        H_A2 = self.embedding(ori_features, adj)/
  %16(calc2) = ClassType()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:143/        calc2 = MSELoss()/
  %17(weight_param) = S_Prim_getitem(%para18_data, I64(5))
      : (<List[Tensor[Float32]*4,External,Tuple[Float32,Int64*4,Float32*2,Int64,Float32*2],Int64,External], ListShape[(2708, 2708), (2708, 2708), (2708, 1433), (2708, 2708), NoShape, TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape, NoShape), NoShape, NoShape]>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(w8) = S_Prim_getitem(%17, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %19(CNode_87) = MakeTuple(%1, %2, %3, %13, %15, %16, %18)
      : (<null>, <null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %20(CNode_88) = StopGradient(%19)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %21(CNode_89) = getattr(%7, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %22(CNode_90) = S_Prim_equal(%21, "MSELoss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %23(CNode_91) = Cond(%22, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %24(CNode_92) = Switch(%23, @✓forward_fn_93, @✗forward_fn_94)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %25(CNode_95) = %24()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %26(CNode_97) = call @↓forward_fn_96(%25)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %27(CNode_98) = Depend[side_effect_propagate: I64(1)](%26, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %28(CNode_99) = GradAux_aux_fn(%27, Bool(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%28)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
}
# Order:
#   1: @forward_fn_41:ori_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 0}
#   2: @forward_fn_41:adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 1}
#   3: @forward_fn_41:ori_features{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 2}
#   4: @forward_fn_41:feature_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 3}
#   5: @forward_fn_41:args{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 4}
#   6: @forward_fn_41:weight_param{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 5}
#   7: @forward_fn_41:weight_supervised{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 6}
#   8: @forward_fn_41:idx_attack{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 7}
#   9: @forward_fn_41:w1{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 0}
#  10: @forward_fn_41:w2{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 1}
#  11: @forward_fn_41:w6{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 5}
#  12: @forward_fn_41:w7{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 6}
#  13: @forward_fn_41:w8{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 7}
#  14: @forward_fn_41:w9{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 8}
#  15: @forward_fn_41:w10{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 9}
#  16: @forward_fn_41:modified_adj{[0]: ValueNode<FuncGraph> get_modified_adj_79, [1]: ori_adj}
#  17: @forward_fn_41:CNode_80{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> eps}
#  18: @forward_fn_41:modified_adj{[0]: ValueNode<FuncGraph> adding_noise_81, [1]: modified_adj, [2]: CNode_80}
#  19: @forward_fn_41:adj_norm{[0]: ValueNode<FuncGraph> normalize_adj_tensor_100, [1]: modified_adj}
#  20: @forward_fn_41:CNode_74{[0]: ValueNode<FuncGraph> set_train_73, [1]: ValueNode<BoolImm> false}
#  21: @forward_fn_41:output{[0]: ValueNode<FuncGraph> models_mind_gcn_GCN_construct_101, [1]: ori_features, [2]: adj_norm}
#  22: @forward_fn_41:CNode_102{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> idx_attack, [2]: ValueNode<StringImm> self.adj_changes, [3]: ValueNode<StringImm> self._loss, [4]: ValueNode<StringImm> label, [5]: ValueNode<StringImm> output, [6]: ValueNode<StringImm> self}
#  23: @forward_fn_41:CNode_103{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: idx_attack, [2]: param_Parameter$1, [3]: ValueNode<FuncGraph> _loss_104, [4]: param_label, [5]: output, [6]: ValueNode<InterpretedObject> PythonObject(type: <class 'mindspore._extends.parse.namespace.ClassMemberNamespace'>, value: Namespace:topology_attack..<PGDAttack::140128516307792>)}
#  24: @forward_fn_41:CNode_105{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_102, [2]: CNode_103}
#  25: @forward_fn_41:origin_loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_105}
#  26: @forward_fn_41:CNode_106{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> weight_supervised, [2]: ValueNode<StringImm> origin_loss}
#  27: @forward_fn_41:CNode_107{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: weight_supervised, [2]: origin_loss}
#  28: @forward_fn_41:CNode_108{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_106, [2]: CNode_107}
#  29: @forward_fn_41:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'weight_supervised*origin_loss', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_108}
#  30: @forward_fn_41:CNode_76{[0]: ValueNode<FuncGraph> set_layers_75, [1]: ValueNode<Int64Imm> 1}
#  31: @forward_fn_41:H_A1{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_83, [1]: ori_features, [2]: adj}
#  32: @forward_fn_41:CNode_78{[0]: ValueNode<FuncGraph> set_layers_77, [1]: ValueNode<Int64Imm> 2}
#  33: @forward_fn_41:H_A2{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_83, [1]: ori_features, [2]: adj}
#  34: @forward_fn_41:Y_A{[0]: ValueNode<FuncGraph> models_mind_gcn_GCN_construct_101, [1]: ori_features, [2]: adj}
#  35: @forward_fn_41:CNode_82{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: modified_adj, [2]: ori_adj}
#  36: @forward_fn_41:em{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_83, [1]: ori_features, [2]: CNode_82}
#  37: @forward_fn_41:CNode_85{[0]: ValueNode<FuncGraph> dot_product_decode_84, [1]: em}
#  38: @forward_fn_41:CNode_86{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> adj_changes_after, [3]: CNode_85}
#  39: @forward_fn_41:modified_adj1{[0]: ValueNode<FuncGraph> get_modified_adj_after_109, [1]: ori_adj}
#  40: @forward_fn_41:calc{[0]: ValueNode<ClassType> class 'mindspore.nn.loss.loss.MSELoss'}
#  41: @forward_fn_41:calc2{[0]: ValueNode<ClassType> class 'mindspore.nn.loss.loss.MSELoss'}
#  42: @forward_fn_41:CNode_89{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#  43: @forward_fn_41:CNode_90{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_89, [2]: ValueNode<StringImm> MSELoss}
#  44: @forward_fn_41:CNode_91{[0]: ValueNode<Primitive> Cond, [1]: CNode_90, [2]: ValueNode<BoolImm> false}
#  45: @forward_fn_41:CNode_92{[0]: ValueNode<Primitive> Switch, [1]: CNode_91, [2]: ValueNode<FuncGraph> ✓forward_fn_93, [3]: ValueNode<FuncGraph> ✗forward_fn_94}
#  46: @forward_fn_41:CNode_95{[0]: CNode_92}
#  47: @forward_fn_41:CNode_97{[0]: ValueNode<FuncGraph> ↓forward_fn_96, [1]: CNode_95}
#  48: @forward_fn_41:CNode_98{[0]: ValueNode<Primitive> Depend, [1]: CNode_97, [2]: CNode_88}
#  49: @forward_fn_41:CNode_110{[0]: ValueNode<Primitive> Return, [1]: CNode_99}
#  50: @forward_fn_41:CNode_99{[0]: ValueNode<GradAux> MetaFuncGraph-aux_fn.111, [1]: CNode_98, [2]: ValueNode<BoolImm> true}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: set_train_48 : 0x562976443a30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @set_train_48 parent: [subgraph @after_grad_43](%para20_mode) {
  %1(CNode_112) = Cond(%para20_mode, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
  %2(CNode_113) = Switch(%1, @✓set_train_114, @✗set_train_49)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/

#------------------------> 4
  %3(CNode_115) = %2()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
}
# Order:
#   1: @set_train_48:CNode_112{[0]: ValueNode<Primitive> Cond, [1]: param_mode, [2]: ValueNode<BoolImm> false}
#   2: @set_train_48:CNode_113{[0]: ValueNode<Primitive> Switch, [1]: CNode_112, [2]: ValueNode<FuncGraph> ✓set_train_114, [3]: ValueNode<FuncGraph> ✗set_train_49}
#   3: @set_train_48:CNode_115{[0]: CNode_113}
#   4: @set_train_48:CNode_116{[0]: ValueNode<Primitive> Return, [1]: CNode_115}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗set_train_49 : 0x56297657bc40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @✗set_train_49 parent: [subgraph @set_train_48]() {
  %1(CNode_117) = setattr[side_effect_io: Bool(1)](InterpretedObject, "_phase", "predict")
      : (<External, NoShape>, <String, NoShape>, <String, NoShape>) -> (<Any(Tensor)[Float64], (-2)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
  %2(CNode_118) = StopGradient(%1)
      : (<Any(Tensor)[Float64], (-2)>) -> (<Any(Tensor)[Float64], (-2)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/

#------------------------> 5
  %3(CNode_119) = call @↓set_train_50()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113/        self.victim_model.set_train(False)/
  %4(CNode_120) = Depend[side_effect_propagate: I64(1)](%3, %2)
      : (<null>, <Any(Tensor)[Float64], (-2)>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
}
# Order:
#   1: @✗set_train_49:CNode_117{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _phase, [3]: ValueNode<StringImm> predict}
#   2: @✗set_train_49:CNode_121{[0]: ValueNode<Primitive> Return, [1]: CNode_120}
#   3: @✗set_train_49:CNode_119{[0]: ValueNode<FuncGraph> ↓set_train_50}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓set_train_50 : 0x56297656c090
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @↓set_train_50 parent: [subgraph @set_train_48]() {
  %1(CNode_122) = S_Prim_MakeTuple("training")
      : (<String, NoShape>) -> (<Tuple[String], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %2(CNode_123) = S_Prim_MakeTuple(%para20_mode)
      : (<Bool, NoShape>) -> (<Tuple[Bool], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %3(CNode_124) = S_Prim_make_dict(%1, %2)
      : (<Tuple[String], TupleShape(NoShape)>, <Tuple[Bool], TupleShape(NoShape)>) -> (<Dictionary[[training,],[Bool]], NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/

#------------------------> 6
  %4(CNode_125) = UnpackCall_unpack_call(@add_flags_recursive_126, %3)
      : (<Func, NoShape>, <Dictionary[[training,],[Bool]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %5(CNode_127) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
  %6(CNode_128) = Depend[side_effect_propagate: I64(1)](ClassMember, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1875/        return self/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1875/        return self/
}
# Order:
#   1: @↓set_train_50:CNode_122{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> training}
#   2: @↓set_train_50:CNode_123{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_mode}
#   3: @↓set_train_50:CNode_124{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_122, [2]: CNode_123}
#   4: @↓set_train_50:CNode_125{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.129, [1]: ValueNode<FuncGraph> add_flags_recursive_126, [2]: CNode_124}
#   5: @↓set_train_50:CNode_130{[0]: ValueNode<Primitive> Return, [1]: CNode_128}


subgraph attr:
core : 1
subgraph instance: UnpackCall_51 : 0x562976425640
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
subgraph @UnpackCall_51(%para21_, %para22_) {
  %1(CNode_125) = dict_getitem(%para22_53, "training")
      : (<Dictionary[[training,],[Bool]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %2(CNode_125) = make_keyword_arg("training", %1)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : training, value : Bool], NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/

#------------------------> 7
  %3(CNode_125) = %para21_52(%2)
      : (<Keyword[key : training, value : Bool], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
}
# Order:
#   1: @UnpackCall_51:CNode_125{[0]: param_52, [1]: CNode_125}
#   2: @UnpackCall_51:CNode_125{[0]: ValueNode<Primitive> Return, [1]: CNode_125}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: add_flags_recursive_54 : 0x562976431ae0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
subgraph @add_flags_recursive_54 parent: [subgraph @after_grad_43](%para23_flags[training]) {
  %1(CNode_131) = MakeTuple("training")
      : (<String, NoShape>) -> (<Tuple[String], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %2(CNode_132) = extract_keyword_arg("training", %para23_flags[training])
      : (<String, NoShape>, <Keyword[key : training, value : Bool], NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
  %3(CNode_133) = MakeTuple(%2)
      : (<Bool, NoShape>) -> (<Tuple[Bool], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %4(CNode_134) = make_dict(%1, %3)
      : (<Tuple[String], TupleShape(NoShape)>, <Tuple[Bool], TupleShape(NoShape)>) -> (<Dictionary[[training,],[Bool]], NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/

#------------------------> 8
  %5(CNode_135) = UnpackCall_unpack_call(@add_flags_136, %4)
      : (<Func, NoShape>, <Dictionary[[training,],[Bool]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  %6(CNode_137) = StopGradient(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %7(CNode_139) = call @↵add_flags_recursive_138(I64(0))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %8(CNode_140) = Depend[side_effect_propagate: I64(1)](%7, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
}
# Order:
#   1: @add_flags_recursive_54:CNode_135{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.141, [1]: ValueNode<FuncGraph> add_flags_136, [2]: CNode_134}
#   2: @add_flags_recursive_54:CNode_142{[0]: ValueNode<FuncGraph> cells_143}
#   3: @add_flags_recursive_54:CNode_144{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_142}
#   4: @add_flags_recursive_54:CNode_145{[0]: ValueNode<Primitive> Return, [1]: CNode_140}
#   5: @add_flags_recursive_54:CNode_139{[0]: ValueNode<FuncGraph> ↵add_flags_recursive_138, [1]: ValueNode<Int64Imm> 0}


subgraph attr:
core : 1
subgraph instance: UnpackCall_55 : 0x56296fbd6070
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
subgraph @UnpackCall_55(%para24_, %para25_) {
  %1(CNode_135) = dict_getitem(%para25_57, "training")
      : (<Dictionary[[training,],[Bool]], NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  %2(CNode_135) = make_keyword_arg("training", %1)
      : (<String, NoShape>, <Bool, NoShape>) -> (<Keyword[key : training, value : Bool], NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/

#------------------------> 9
  %3(CNode_135) = %para24_56(%2)
      : (<Keyword[key : training, value : Bool], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
}
# Order:
#   1: @UnpackCall_55:CNode_135{[0]: param_56, [1]: CNode_135}
#   2: @UnpackCall_55:CNode_135{[0]: ValueNode<Primitive> Return, [1]: CNode_135}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: add_flags_58 : 0x562975e6f880
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @add_flags_58(%para26_flags[training]) {
  %1(CNode_147) = call @hasattr_146(ClassMember, "_func_graph_flags")
      : (<External, NoShape>, <String, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %2(CNode_148) = S_Prim_logical_not(%1)
      : (<Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %3(CNode_149) = Cond(%2, Bool(0))
      : (<Bool, NoShape>, <Bool, NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %4(CNode_150) = Switch(%3, @✓add_flags_151, @✗add_flags_59)
      : (<Bool, NoShape>, <Func, NoShape>, <Func, NoShape>) -> (<Func, NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/

#------------------------> 10
  %5(CNode_152) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
}
# Order:
#   1: @add_flags_58:CNode_147{[0]: ValueNode<FuncGraph> hasattr_146, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>', [2]: ValueNode<StringImm> _func_graph_flags}
#   2: @add_flags_58:CNode_148{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_147}
#   3: @add_flags_58:CNode_149{[0]: ValueNode<Primitive> Cond, [1]: CNode_148, [2]: ValueNode<BoolImm> false}
#   4: @add_flags_58:CNode_150{[0]: ValueNode<Primitive> Switch, [1]: CNode_149, [2]: ValueNode<FuncGraph> ✓add_flags_151, [3]: ValueNode<FuncGraph> ✗add_flags_59}
#   5: @add_flags_58:CNode_152{[0]: CNode_150}
#   6: @add_flags_58:CNode_153{[0]: ValueNode<Primitive> Return, [1]: CNode_152}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗add_flags_59 : 0x56297663a560
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @✗add_flags_59 parent: [subgraph @add_flags_58]() {

#------------------------> 11
  %1(CNode_154) = call @↓add_flags_60()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
}
# Order:
#   1: @✗add_flags_59:CNode_155{[0]: ValueNode<Primitive> Return, [1]: CNode_154}
#   2: @✗add_flags_59:CNode_154{[0]: ValueNode<FuncGraph> ↓add_flags_60}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓add_flags_60 : 0x562975ea1410
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @↓add_flags_60 parent: [subgraph @add_flags_58]() {
  %1(CNode_156) = getattr(InterpretedObject, "_func_graph_flags")
      : (<External, NoShape>, <String, NoShape>) -> (<Any(Tensor)[Float64], (-2)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %2(CNode_157) = getattr(%1, "update")
      : (<Any(Tensor)[Float64], (-2)>, <String, NoShape>) -> (<Any(Tensor)[Float64], (-2)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %3(CNode_158) = S_Prim_MakeTuple(None)
      : (<None, NoShape>) -> (<Tuple[None], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %4(CNode_159) = $(add_flags_58):MakeTuple("training")
      : (<String, NoShape>) -> (<Tuple[String], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %5(CNode_160) = $(add_flags_58):extract_keyword_arg("training", %para26_flags[training])
      : (<String, NoShape>, <Keyword[key : training, value : Bool], NoShape>) -> (<Bool, NoShape>)
      #scope: (Default)
  %6(CNode_161) = $(add_flags_58):MakeTuple(%5)
      : (<Bool, NoShape>) -> (<Tuple[Bool], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %7(CNode_162) = $(add_flags_58):make_dict(%4, %6)
      : (<Tuple[String], TupleShape(NoShape)>, <Tuple[Bool], TupleShape(NoShape)>) -> (<Dictionary[[training,],[Bool]], NoShape>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %8(CNode_163) = S_Prim_MakeTuple(%7)
      : (<Dictionary[[training,],[Bool]], NoShape>) -> (<Tuple[Dictionary[[training,],[Bool]]], TupleShape(NoShape)>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/

#------------------------> 12
  %9(CNode_164) = S_Prim_make_dict(%3, %8)
      : (<Tuple[None], TupleShape(NoShape)>, <Tuple[Dictionary[[training,],[Bool]]], TupleShape(NoShape)>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %10(CNode_165) = %2(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %11(CNode_166) = getattr({"_params": {}, "_cells": {"gc1": FuncGraph[models_mind_gcn_GraphConvolution_construct_167], "gc2": FuncGraph[models_mind_gcn_GraphConvolution_construct_168], "linear1": FuncGraph[mindspore_nn_layer_basic_Dense_construct_169]}, "_params_list": {}, "_tensor_list": {}, "_primitives": {"cast": S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]]}, "_attr_synced": Bool(0), "training": Bool(0), "requires_grad": Bool(0), "pynative": Bool(0), "_param_prefix": "", "_auto_prefix": Bool(1), "_scope": None, "_phase": "predict", "_parameter_layout_dict": {}, "_parallel_parameter_name_list": (), "_parallel_parameter_merge_net_dict": {}, "_create_time": I64(1710397554607026432), "arguments_key": "0", "compile_cache": InterpretedObject, "parameter_broadcast_done": Bool(0), "_id": I64(1), "exist_names": InterpretedObject, "exist_objs": InterpretedObject, "_bprop_debug": Bool(0), "_forward_pre_hook": {}, "_forward_hook": {}, "_enable_forward_pre_hook": Bool(0), "_enable_forward_hook": Bool(0), "_enable_backward_hook": Bool(0), "_cell_backward_hook": None, "_is_recursion_hook": Bool(1), "cell_type": None, "cast": S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]], "_has_config_recompute": Bool(0), "_user_parameters": [], "_dynamic_shape_inputs": None, "saved_dynamic_shape": None, "_jit_config_dict": {}, "grad_ops_label": Bool(0), "ge_sync_data": Bool(0), "_is_check_and_refresh": Bool(1), "_amp_level": "", "nfeat": I64(1433), "hidden_sizes": [I64(16)], "nclass": I64(7), "nlayer": I64(2), "gc": [FuncGraph[models_mind_gcn_GraphConvolution_construct_167], FuncGraph[models_mind_gcn_GraphConvolution_construct_168]], "dropout": F32(0.5), "lr": F32(0.01), "idx_train": InterpretedObject, "weight_decay": F32(0.0005), "with_relu": Bool(1), "with_bias": Bool(1), "output": None, "best_model": None, "best_output": None, "adj_norm": None, "features": None, "__parse_method__": "construct", "_func_graph_flags": {"ge_sync_data": Bool(0), "training": Bool(0)}}, "update")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %12(CNode_170) = S_Prim_MakeTuple(None)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %13(CNode_171) = S_Prim_MakeTuple(%7)
      : (<Dictionary[[training,],[Bool]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %14(CNode_172) = S_Prim_make_dict(%12, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %15(CNode_173) = %11(%14)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %16(CNode_174) = UnpackCall_unpack_call(@_add_mixed_precision_flag_175, %7)
      : (<null>, <Dictionary[[training,],[Bool]], NoShape>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  %17(CNode_176) = MakeTuple(%10, %15, %16)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %18(CNode_177) = StopGradient(%17)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %19(CNode_178) = Depend[side_effect_propagate: I64(1)](ClassMember, %18)
      : (<External, NoShape>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1703/        return self/
}
# Order:
#   1: @↓add_flags_60:CNode_156{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _func_graph_flags}
#   2: @↓add_flags_60:CNode_157{[0]: ValueNode<Primitive> getattr, [1]: CNode_156, [2]: ValueNode<StringImm> update}
#   3: @↓add_flags_60:CNode_158{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<None> None}
#   4: @↓add_flags_60:CNode_163{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_162}
#   5: @↓add_flags_60:CNode_164{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_158, [2]: CNode_163}
#   6: @↓add_flags_60:CNode_165{[0]: CNode_157, [1]: CNode_164}
#   7: @↓add_flags_60:CNode_166{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ValueDictionary> {'_params': {}, '_cells': {'gc1': models_mind_gcn_GraphConvolution_construct_167, 'gc2': models_mind_gcn_GraphConvolution_construct_168, 'linear1': mindspore_nn_layer_basic_Dense_construct_169}, '_params_list': {}, '_tensor_list': {}, '_primitives': {'cast': S_Prim_Cast}, '_attr_synced': false, 'training': false, 'requires_grad': false, 'pynative': false, '_param_prefix': , '_auto_prefix': true, '_scope': None, '_phase': predict, '_parameter_layout_dict': {}, '_parallel_parameter_name_list': (), '_parallel_parameter_merge_net_dict': {}, '_create_time': 1710397554607026432, 'arguments_key': 0, 'compile_cache': PythonObject(type: <class 'set'>, value: {'train.1710397554607026432.140128514916816.0', 'predict.1710397554607026432.140128514916816.0'}), 'parameter_broadcast_done': false, '_id': 1, 'exist_names': PythonObject(type: <class 'set'>, value: set()), 'exist_objs': PythonObject(type: <class 'set'>, value: set()), '_bprop_debug': false, '_forward_pre_hook': {}, '_forward_hook': {}, '_enable_forward_pre_hook': false, '_enable_forward_hook': false, '_enable_backward_hook': false, '_cell_backward_hook': None, '_is_recursion_hook': true, 'cell_type': None, 'cast': S_Prim_Cast, '_has_config_recompute': false, '_user_parameters': [], '_dynamic_shape_inputs': None, 'saved_dynamic_shape': None, '_jit_config_dict': {}, 'grad_ops_label': false, 'ge_sync_data': false, '_is_check_and_refresh': true, '_amp_level': , 'nfeat': 1433, 'hidden_sizes': [16], 'nclass': 7, 'nlayer': 2, 'gc': [models_mind_gcn_GraphConvolution_construct_167, models_mind_gcn_GraphConvolution_construct_168], 'dropout': 0.5, 'lr': 0.01, 'idx_train': PythonObject(type: <class 'numpy.ndarray'>, value: [1729 2648  651 1180 1285 1015 1499 1277  476 2561 1654 2253 2526 1159
  207  384 2240 1585 1966 2550 2119  503 1453 1062 1424 1548 1666 1821
 2108 1999  499 2611 1413 2038 2118 2031  287 2102 2348 2064  800 1270
  811 2387 1819  793 1644  338 2442 1255 1036 1072   83  218  818 1203
  704 2270 1475 1348 1233 2276 2463 2162 1704 1600 1168 1322  957  614
 1834 1216 2264 2225 1559 1876   91 2504  622 2293  753  580  414 1716
 1364 1202 2177 1077 1198  123 1301 1410 2079  128 2679 1862 1252  577
 1549 1515 2388 1898  746 1186 2600 2192  702  159 1853 1184  817 1333
 1309  369 2339 1262 1479 2459  915 1427  574 2586 2572  367  663 1462
 1396  267  206  189 1965 1085 1877 1147 1133  917  935 1588  692 2496]), 'weight_decay': 0.0005, 'with_relu': true, 'with_bias': true, 'output': None, 'best_model': None, 'best_output': None, 'adj_norm': None, 'features': None, '__parse_method__': construct, '_func_graph_flags': {'ge_sync_data': false, 'training': false}}, [2]: ValueNode<StringImm> update}
#   8: @↓add_flags_60:CNode_170{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<None> None}
#   9: @↓add_flags_60:CNode_171{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_162}
#  10: @↓add_flags_60:CNode_172{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_170, [2]: CNode_171}
#  11: @↓add_flags_60:CNode_173{[0]: CNode_166, [1]: CNode_172}
#  12: @↓add_flags_60:CNode_174{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.179, [1]: ValueNode<FuncGraph> _add_mixed_precision_flag_175, [2]: CNode_162}
#  13: @↓add_flags_60:CNode_180{[0]: ValueNode<Primitive> Return, [1]: CNode_178}
#  14: @↓add_flags_60:CNode_181{[0]: ValueNode<Primitive> MakeTuple, [1]: ValueNode<StringImm> __py_exec_index1_getattr__, [2]: ValueNode<StringImm> __py_exec_index2_getattr__}
#  15: @↓add_flags_60:CNode_182{[0]: ValueNode<Primitive> MakeTuple, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _func_graph_flags}
#  16: @↓add_flags_60:CNode_183{[0]: ValueNode<Primitive> MakeTuple, [1]: ValueNode<StringImm> __py_exec_index1_getattr__, [2]: ValueNode<StringImm> __py_exec_index2_getattr__}
#  17: @↓add_flags_60:CNode_184{[0]: ValueNode<Primitive> MakeTuple, [1]: CNode_156, [2]: ValueNode<StringImm> update}
#  18: @↓add_flags_60:CNode_185{[0]: ValueNode<Primitive> make_dict, [1]: CNode_183, [2]: CNode_184}


# ===============================================================================================
# The total of function graphs in evaluation stack: 13/14 (Ignored 1 internal frames).
# ===============================================================================================


# ===============================================================================================
# The rest function graphs are the following:
# ===============================================================================================
subgraph attr:
subgraph instance: forward_fn_63 : 0x56296fb46930
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @forward_fn_63 parent: [subgraph @after_grad_43](%para27_data, %para28_label) {
  %1(CNode_74) = call @set_train_186(Bool(0))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113/        self.victim_model.set_train(False)/
  %2(CNode_76) = call @set_layers_187(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:128/        self.embedding.set_layers(1)/
  %3(CNode_78) = call @set_layers_188(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:130/        self.embedding.set_layers(2)/
  %4(ori_features) = S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_adj) = S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(modified_adj) = call @get_modified_adj_189(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(args) = S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_80) = getattr(%7, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(modified_adj) = call @adding_noise_190(%6, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(CNode_82) = S_Prim_sub(%9, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:136/        em = self.embedding(ori_features, modified_adj-ori_adj)/
  %11(em) = call @models_mind_gcn_embedding_GCN_construct_191(%4, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:136/        em = self.embedding(ori_features, modified_adj-ori_adj)/
  %12(CNode_85) = call @dot_product_decode_192(%11)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:138/        self.adj_changes_after = self.dot_product_decode(em)/
  %13(CNode_86) = setattr[side_effect_io: Bool(1)](InterpretedObject, "adj_changes_after", %12)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:138/        self.adj_changes_after = self.dot_product_decode(em)/
  %14(adj) = S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %15(H_A2) = call @models_mind_gcn_embedding_GCN_construct_191(%4, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:131/        H_A2 = self.embedding(ori_features, adj)/
  %16(calc2) = ClassType()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:143/        calc2 = MSELoss()/
  %17(weight_param) = S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(w8) = S_Prim_getitem(%17, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %19(CNode_87) = MakeTuple(%1, %2, %3, %13, %15, %16, %18)
      : (<null>, <null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %20(CNode_88) = StopGradient(%19)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %21(CNode_89) = getattr(%7, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %22(CNode_90) = S_Prim_equal(%21, "MSELoss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %23(CNode_91) = Cond(%22, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %24(CNode_92) = Switch(%23, @✓forward_fn_193, @✗forward_fn_194)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %25(CNode_95) = %24()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
  %26(CNode_97) = call @↓forward_fn_195(%25)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %27(CNode_98) = Depend[side_effect_propagate: I64(1)](%26, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%27)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:145/        if args.measure == "MSELoss":/
}
# Order:
#   1: @forward_fn_63:ori_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 0}
#   2: @forward_fn_63:adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 1}
#   3: @forward_fn_63:ori_features{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 2}
#   4: @forward_fn_63:feature_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 3}
#   5: @forward_fn_63:args{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 4}
#   6: @forward_fn_63:weight_param{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 5}
#   7: @forward_fn_63:weight_supervised{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 6}
#   8: @forward_fn_63:idx_attack{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_data, [2]: ValueNode<Int64Imm> 7}
#   9: @forward_fn_63:w1{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 0}
#  10: @forward_fn_63:w2{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 1}
#  11: @forward_fn_63:w6{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 5}
#  12: @forward_fn_63:w7{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 6}
#  13: @forward_fn_63:w8{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 7}
#  14: @forward_fn_63:w9{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 8}
#  15: @forward_fn_63:w10{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: weight_param, [2]: ValueNode<Int64Imm> 9}
#  16: @forward_fn_63:modified_adj{[0]: ValueNode<FuncGraph> get_modified_adj_189, [1]: ori_adj}
#  17: @forward_fn_63:CNode_80{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> eps}
#  18: @forward_fn_63:modified_adj{[0]: ValueNode<FuncGraph> adding_noise_190, [1]: modified_adj, [2]: CNode_80}
#  19: @forward_fn_63:adj_norm{[0]: ValueNode<FuncGraph> normalize_adj_tensor_196, [1]: modified_adj}
#  20: @forward_fn_63:CNode_74{[0]: ValueNode<FuncGraph> set_train_186, [1]: ValueNode<BoolImm> false}
#  21: @forward_fn_63:output{[0]: ValueNode<FuncGraph> models_mind_gcn_GCN_construct_197, [1]: ori_features, [2]: adj_norm}
#  22: @forward_fn_63:CNode_102{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> idx_attack, [2]: ValueNode<StringImm> self.adj_changes, [3]: ValueNode<StringImm> self._loss, [4]: ValueNode<StringImm> label, [5]: ValueNode<StringImm> output, [6]: ValueNode<StringImm> self}
#  23: @forward_fn_63:CNode_103{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: idx_attack, [2]: param_Parameter$1, [3]: ValueNode<FuncGraph> _loss_198, [4]: param_label, [5]: output, [6]: ValueNode<InterpretedObject> PythonObject(type: <class 'mindspore._extends.parse.namespace.ClassMemberNamespace'>, value: Namespace:topology_attack..<PGDAttack::140128516307792>)}
#  24: @forward_fn_63:CNode_105{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_102, [2]: CNode_103}
#  25: @forward_fn_63:origin_loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_105}
#  26: @forward_fn_63:CNode_106{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> weight_supervised, [2]: ValueNode<StringImm> origin_loss}
#  27: @forward_fn_63:CNode_107{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: weight_supervised, [2]: origin_loss}
#  28: @forward_fn_63:CNode_108{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_106, [2]: CNode_107}
#  29: @forward_fn_63:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'weight_supervised*origin_loss', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_108}
#  30: @forward_fn_63:CNode_76{[0]: ValueNode<FuncGraph> set_layers_187, [1]: ValueNode<Int64Imm> 1}
#  31: @forward_fn_63:H_A1{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_191, [1]: ori_features, [2]: adj}
#  32: @forward_fn_63:CNode_78{[0]: ValueNode<FuncGraph> set_layers_188, [1]: ValueNode<Int64Imm> 2}
#  33: @forward_fn_63:H_A2{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_191, [1]: ori_features, [2]: adj}
#  34: @forward_fn_63:Y_A{[0]: ValueNode<FuncGraph> models_mind_gcn_GCN_construct_197, [1]: ori_features, [2]: adj}
#  35: @forward_fn_63:CNode_82{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: modified_adj, [2]: ori_adj}
#  36: @forward_fn_63:em{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_191, [1]: ori_features, [2]: CNode_82}
#  37: @forward_fn_63:CNode_85{[0]: ValueNode<FuncGraph> dot_product_decode_192, [1]: em}
#  38: @forward_fn_63:CNode_86{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> adj_changes_after, [3]: CNode_85}
#  39: @forward_fn_63:modified_adj1{[0]: ValueNode<FuncGraph> get_modified_adj_after_199, [1]: ori_adj}
#  40: @forward_fn_63:calc{[0]: ValueNode<ClassType> class 'mindspore.nn.loss.loss.MSELoss'}
#  41: @forward_fn_63:calc2{[0]: ValueNode<ClassType> class 'mindspore.nn.loss.loss.MSELoss'}
#  42: @forward_fn_63:CNode_89{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#  43: @forward_fn_63:CNode_90{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_89, [2]: ValueNode<StringImm> MSELoss}
#  44: @forward_fn_63:CNode_91{[0]: ValueNode<Primitive> Cond, [1]: CNode_90, [2]: ValueNode<BoolImm> false}
#  45: @forward_fn_63:CNode_92{[0]: ValueNode<Primitive> Switch, [1]: CNode_91, [2]: ValueNode<FuncGraph> ✓forward_fn_193, [3]: ValueNode<FuncGraph> ✗forward_fn_194}
#  46: @forward_fn_63:CNode_95{[0]: CNode_92}
#  47: @forward_fn_63:CNode_97{[0]: ValueNode<FuncGraph> ↓forward_fn_195, [1]: CNode_95}
#  48: @forward_fn_63:CNode_98{[0]: ValueNode<Primitive> Depend, [1]: CNode_97, [2]: CNode_88}
#  49: @forward_fn_63:CNode_110{[0]: ValueNode<Primitive> Return, [1]: CNode_98}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: models_mind_gcn_embedding_GCN_construct_191 : 0x56297607f2b0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:422/    def construct(self, x, adj):/
subgraph @models_mind_gcn_embedding_GCN_construct_191 parent: [subgraph @after_grad_43](%para29_x, %para30_adj) {
  %1(CNode_201) = call @↵models_mind_gcn_embedding_GCN_construct_200(I64(0), %para29_x)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:131/        H_A2 = self.embedding(ori_features, adj)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
}
# Order:
#   1: @models_mind_gcn_embedding_GCN_construct_191:CNode_202{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_range, [1]: ValueNode<Int64Imm> 2}
#   2: @models_mind_gcn_embedding_GCN_construct_191:CNode_203{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_202}
#   3: @models_mind_gcn_embedding_GCN_construct_191:CNode_204{[0]: ValueNode<Primitive> Return, [1]: CNode_201}
#   4: @models_mind_gcn_embedding_GCN_construct_191:CNode_201{[0]: ValueNode<FuncGraph> ↵models_mind_gcn_embedding_GCN_construct_200, [1]: ValueNode<Int64Imm> 0, [2]: param_x}


subgraph attr:
subgraph instance: dot_product_decode_192 : 0x562976079fa0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:455/    def dot_product_decode(self, Z):/
subgraph @dot_product_decode_192(%para31_Z) {
  %1(CNode_205) = S_Prim_MakeTuple("axis")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:457/        Z = ops.L2Normalize(axis=1)(Z)/
  %2(CNode_206) = S_Prim_MakeTuple(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:457/        Z = ops.L2Normalize(axis=1)(Z)/
  %3(CNode_207) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:457/        Z = ops.L2Normalize(axis=1)(Z)/
  %4(CNode_208) = UnpackCall_unpack_call(ClassType, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:457/        Z = ops.L2Normalize(axis=1)(Z)/
  %5(Z) = %4(%para31_Z)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:457/        Z = ops.L2Normalize(axis=1)(Z)/
  %6(CNode_209) = getattr(%5, "t")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  %7(CNode_210) = %6()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  %8(CNode_212) = call @matmul_211(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  %9(A_pred) = call @relu_213(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  %10(CNode_214) = S_Prim_MakeTuple("row", "col", "offset")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:459/        tril_indices = ops.tril_indices(/
  %11(CNode_215) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:460/            row=self.nnodes, col=self.nnodes, offset=-1)/
  %12(CNode_216) = S_Prim_MakeTuple(I64(2708), I64(2708), %11)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:459/        tril_indices = ops.tril_indices(/
  %13(CNode_217) = S_Prim_make_dict(%10, %12)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:459/        tril_indices = ops.tril_indices(/
  %14(tril_indices) = UnpackCall_unpack_call(@tril_indices_218, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:459/        tril_indices = ops.tril_indices(/
  %15(CNode_219) = S_Prim_getitem(%14, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:461/        return A_pred[tril_indices[0], tril_indices[1]]/
  %16(CNode_220) = S_Prim_getitem(%14, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:461/        return A_pred[tril_indices[0], tril_indices[1]]/
  %17(CNode_221) = S_Prim_MakeTuple(%15, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:461/        return A_pred[tril_indices[0], tril_indices[1]]/
  %18(CNode_222) = S_Prim_getitem(%9, %17)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:461/        return A_pred[tril_indices[0], tril_indices[1]]/
  Return(%18)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:461/        return A_pred[tril_indices[0], tril_indices[1]]/
}
# Order:
#   1: @dot_product_decode_192:CNode_205{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> axis}
#   2: @dot_product_decode_192:CNode_206{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 1}
#   3: @dot_product_decode_192:CNode_207{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_205, [2]: CNode_206}
#   4: @dot_product_decode_192:CNode_208{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.223, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.nn_ops.L2Normalize', [2]: CNode_207}
#   5: @dot_product_decode_192:Z{[0]: CNode_208, [1]: param_Z}
#   6: @dot_product_decode_192:CNode_209{[0]: ValueNode<Primitive> getattr, [1]: Z, [2]: ValueNode<StringImm> t}
#   7: @dot_product_decode_192:CNode_210{[0]: CNode_209}
#   8: @dot_product_decode_192:CNode_212{[0]: ValueNode<FuncGraph> matmul_211, [1]: Z, [2]: CNode_210}
#   9: @dot_product_decode_192:A_pred{[0]: ValueNode<FuncGraph> relu_213, [1]: CNode_212}
#  10: @dot_product_decode_192:CNode_215{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#  11: @dot_product_decode_192:CNode_214{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> row, [2]: ValueNode<StringImm> col, [3]: ValueNode<StringImm> offset}
#  12: @dot_product_decode_192:CNode_216{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 2708, [2]: ValueNode<Int64Imm> 2708, [3]: CNode_215}
#  13: @dot_product_decode_192:CNode_217{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_214, [2]: CNode_216}
#  14: @dot_product_decode_192:tril_indices{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.224, [1]: ValueNode<FuncGraph> tril_indices_218, [2]: CNode_217}
#  15: @dot_product_decode_192:CNode_219{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 0}
#  16: @dot_product_decode_192:CNode_220{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 1}
#  17: @dot_product_decode_192:CNode_221{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_219, [2]: CNode_220}
#  18: @dot_product_decode_192:CNode_222{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: A_pred, [2]: CNode_221}
#  19: @dot_product_decode_192:CNode_225{[0]: ValueNode<Primitive> Return, [1]: CNode_222}


subgraph attr:
subgraph instance: adding_noise_190 : 0x562975fba8e0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:516/    def adding_noise(self, modified_adj, eps=0):/
subgraph @adding_noise_190(%para32_modified_adj, %para33_eps) {
  %1(noise) = call @randn_like_226(%para32_modified_adj)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:517/        noise = ops.randn_like(modified_adj)/
  %2(CNode_227) = S_Prim_mul(%1, %para33_eps)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:518/        modified_adj += noise*eps/
  %3(modified_adj) = S_Prim_add(%para32_modified_adj, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:518/        modified_adj += noise*eps/
  %4(CNode_228) = S_Prim_MakeTuple(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:519/        modified_adj = ops.clamp(modified_adj, max=1, min=0)/
  %5(CNode_229) = S_Prim_MakeTuple("max", "min")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:519/        modified_adj = ops.clamp(modified_adj, max=1, min=0)/
  %6(CNode_230) = S_Prim_MakeTuple(I64(1), I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:519/        modified_adj = ops.clamp(modified_adj, max=1, min=0)/
  %7(CNode_231) = S_Prim_make_dict(%5, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:519/        modified_adj = ops.clamp(modified_adj, max=1, min=0)/
  %8(modified_adj) = UnpackCall_unpack_call(@clamp_232, %4, %7)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:519/        modified_adj = ops.clamp(modified_adj, max=1, min=0)/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:520/        return modified_adj/
}
# Order:
#   1: @adding_noise_190:noise{[0]: ValueNode<FuncGraph> randn_like_226, [1]: param_modified_adj}
#   2: @adding_noise_190:CNode_227{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: noise, [2]: param_eps}
#   3: @adding_noise_190:modified_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: param_modified_adj, [2]: CNode_227}
#   4: @adding_noise_190:CNode_228{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: modified_adj}
#   5: @adding_noise_190:CNode_229{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> max, [2]: ValueNode<StringImm> min}
#   6: @adding_noise_190:CNode_230{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 1, [2]: ValueNode<Int64Imm> 0}
#   7: @adding_noise_190:CNode_231{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_229, [2]: CNode_230}
#   8: @adding_noise_190:modified_adj{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.233, [1]: ValueNode<FuncGraph> clamp_232, [2]: CNode_228, [3]: CNode_231}
#   9: @adding_noise_190:CNode_234{[0]: ValueNode<Primitive> Return, [1]: modified_adj}


subgraph attr:
subgraph instance: get_modified_adj_189 : 0x562975f90400
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:405/    def get_modified_adj(self, ori_adj):/
subgraph @get_modified_adj_189 parent: [subgraph @after_grad_43](%para34_ori_adj) {
  %1(CNode_235) = getattr(InterpretedObject, "complementary")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
  %2(CNode_236) = S_Prim_is_(%1, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
  %3(CNode_237) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
  %4(CNode_238) = Switch(%3, @✓get_modified_adj_239, @✗get_modified_adj_240)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
  %5(CNode_241) = %4()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
}
# Order:
#   1: @get_modified_adj_189:CNode_236{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: CNode_235, [2]: ValueNode<None> None}
#   2: @get_modified_adj_189:CNode_237{[0]: ValueNode<Primitive> Cond, [1]: CNode_236, [2]: ValueNode<BoolImm> false}
#   3: @get_modified_adj_189:CNode_238{[0]: ValueNode<Primitive> Switch, [1]: CNode_237, [2]: ValueNode<FuncGraph> ✓get_modified_adj_239, [3]: ValueNode<FuncGraph> ✗get_modified_adj_240}
#   4: @get_modified_adj_189:CNode_241{[0]: CNode_238}
#   5: @get_modified_adj_189:CNode_242{[0]: ValueNode<Primitive> Return, [1]: CNode_241}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: set_layers_188 : 0x5629760141e0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
subgraph @set_layers_188(%para35_nlayer) {
  %1(CNode_243) = setattr[side_effect_io: Bool(1)](InterpretedObject, "nlayer", %para35_nlayer)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:435/        self.nlayer = nlayer/
  %2(CNode_244) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  %3(CNode_245) = Depend[side_effect_propagate: I64(1)](None, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
}
# Order:
#   1: @set_layers_188:CNode_243{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.embedding_GCN'>, value: embedding_GCN<
  (emb_gc1): GraphConvolution (1433 -> 16)
  >), [2]: ValueNode<StringImm> nlayer, [3]: param_nlayer}
#   2: @set_layers_188:CNode_246{[0]: ValueNode<Primitive> Return, [1]: CNode_245}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: set_layers_187 : 0x562976015d50
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
subgraph @set_layers_187(%para36_nlayer) {
  %1(CNode_247) = setattr[side_effect_io: Bool(1)](InterpretedObject, "nlayer", %para36_nlayer)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:435/        self.nlayer = nlayer/
  %2(CNode_248) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  %3(CNode_249) = Depend[side_effect_propagate: I64(1)](None, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
}
# Order:
#   1: @set_layers_187:CNode_247{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.embedding_GCN'>, value: embedding_GCN<
  (emb_gc1): GraphConvolution (1433 -> 16)
  >), [2]: ValueNode<StringImm> nlayer, [3]: param_nlayer}
#   2: @set_layers_187:CNode_250{[0]: ValueNode<Primitive> Return, [1]: CNode_249}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: set_train_186 : 0x5629760178c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @set_train_186 parent: [subgraph @after_grad_43](%para37_mode) {
  %1(CNode_112) = Cond(%para37_mode, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
  %2(CNode_113) = Switch(%1, @✓set_train_251, @✗set_train_252)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
  %3(CNode_115) = %2()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1870/        if mode:/
}
# Order:
#   1: @set_train_186:CNode_112{[0]: ValueNode<Primitive> Cond, [1]: param_mode, [2]: ValueNode<BoolImm> false}
#   2: @set_train_186:CNode_113{[0]: ValueNode<Primitive> Switch, [1]: CNode_112, [2]: ValueNode<FuncGraph> ✓set_train_251, [3]: ValueNode<FuncGraph> ✗set_train_252}
#   3: @set_train_186:CNode_115{[0]: CNode_113}
#   4: @set_train_186:CNode_116{[0]: ValueNode<Primitive> Return, [1]: CNode_115}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: models_mind_gcn_GCN_construct_197 : 0x56296f7b6370
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @models_mind_gcn_GCN_construct_197 parent: [subgraph @after_grad_43](%para38_x, %para39_adj) {
  %1(CNode_254) = call @↵models_mind_gcn_GCN_construct_253(I64(0), %para38_x)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
}
# Order:
#   1: @models_mind_gcn_GCN_construct_197:CNode_255{[0]: ValueNode<FuncGraph> enumerate__256, [1]: CNode_257}
#   2: @models_mind_gcn_GCN_construct_197:CNode_258{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_255}
#   3: @models_mind_gcn_GCN_construct_197:CNode_259{[0]: ValueNode<Primitive> Return, [1]: CNode_254}
#   4: @models_mind_gcn_GCN_construct_197:CNode_254{[0]: ValueNode<FuncGraph> ↵models_mind_gcn_GCN_construct_253, [1]: ValueNode<Int64Imm> 0, [2]: param_x}


subgraph attr:
subgraph instance: get_modified_adj_after_199 : 0x56296fc20d60
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:422/    def get_modified_adj_after(self, ori_adj):/
subgraph @get_modified_adj_after_199(%para40_ori_adj) {
  %1(CNode_260) = getattr(InterpretedObject, "complementary_after")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
  %2(CNode_261) = S_Prim_is_(%1, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
  %3(CNode_262) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
  %4(CNode_263) = Switch(%3, @✓get_modified_adj_after_264, @✗get_modified_adj_after_265)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
  %5(CNode_266) = %4()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
}
# Order:
#   1: @get_modified_adj_after_199:CNode_261{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: CNode_260, [2]: ValueNode<None> None}
#   2: @get_modified_adj_after_199:CNode_262{[0]: ValueNode<Primitive> Cond, [1]: CNode_261, [2]: ValueNode<BoolImm> false}
#   3: @get_modified_adj_after_199:CNode_263{[0]: ValueNode<Primitive> Switch, [1]: CNode_262, [2]: ValueNode<FuncGraph> ✓get_modified_adj_after_264, [3]: ValueNode<FuncGraph> ✗get_modified_adj_after_265}
#   4: @get_modified_adj_after_199:CNode_266{[0]: CNode_263}
#   5: @get_modified_adj_after_199:CNode_267{[0]: ValueNode<Primitive> Return, [1]: CNode_266}
#   6: @get_modified_adj_after_199:CNode_268{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> '__import__('mindspore').common._jit_fallback_utils.get_local_variable(__py_exec_index0_PythonObject_0x28_type_0x3a_0x20_0x3c_class_0x20_0x27_torch_0x2e_Tensor_0x27_0x3e_0x2c_0x20_value_0x3a_0x20_tensor_0x28_0x5b_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0x20_0x2e_0x2e_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x5d_0x2c_0x20_requires_0x5f_grad_0x3d_True_0x29_0x29__)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {}), [3]: CNode_269}


subgraph attr:
subgraph instance: normalize_adj_tensor_196 : 0x56296fb738c0
# In file /root/MC-GRA_test/MC-GRA/utils.py:218/def normalize_adj_tensor(adj, sparse=False):/
subgraph @normalize_adj_tensor_196(%para41_adj, %para42_sparse) {
  %1(CNode_270) = S_Prim_MakeTuple("mx")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:237/    return Tensor(mx, dtype=mindspore.float32)/
  %2(CNode_271) = getattr(%para41_adj, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:230/    mx = adj + ops.eye(adj.shape[0])# .to(device)/
  %3(CNode_272) = S_Prim_getitem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:230/    mx = adj + ops.eye(adj.shape[0])# .to(device)/
  %4(CNode_274) = call @eye_273(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:230/    mx = adj + ops.eye(adj.shape[0])# .to(device)/
  %5(mx) = S_Prim_add(%para41_adj, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:230/    mx = adj + ops.eye(adj.shape[0])# .to(device)/
  %6(CNode_275) = getattr(%5, "sum")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:231/    rowsum = mx.sum(1)/
  %7(rowsum) = %6(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:231/    rowsum = mx.sum(1)/
  %8(CNode_276) = getattr(%7, "pow")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %9(CNode_277) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %10(CNode_278) = S_Prim_div(%9, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %11(CNode_279) = %8(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %12(CNode_280) = getattr(%11, "flatten")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %13(r_inv) = %12()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:232/    r_inv = rowsum.pow(-1/2).flatten()/
  %14(CNode_282) = call @isinf_281(%13)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:233/    r_inv[ops.isinf(r_inv)] = 0./
  %15(CNode_283) = S_Prim_setitem(%13, %14, F32(0))
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:233/    r_inv[ops.isinf(r_inv)] = 0./
  %16(r_mat_inv) = call @diag_284(%15)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:234/    r_mat_inv = ops.diag(r_inv)/
  %17(mx) = call @matmul_211(%16, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:235/    mx = r_mat_inv @ mx/
  %18(mx) = call @matmul_211(%17, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:236/    mx = mx @ r_mat_inv/
  %19(CNode_285) = S_Prim_MakeTuple(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:237/    return Tensor(mx, dtype=mindspore.float32)/
  %20(CNode_286) = S_Prim_make_dict(%1, %19)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:237/    return Tensor(mx, dtype=mindspore.float32)/
  %21(CNode_287) = PyInterpret[side_effect_io: Bool(1)](Script['Tensor(mx, dtype=mindspore.float32)'], InterpretedObject, %20)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:237/    return Tensor(mx, dtype=mindspore.float32)/
  Return(%21)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/utils.py:237/    return Tensor(mx, dtype=mindspore.float32)/
}
# Order:
#   1: @normalize_adj_tensor_196:CNode_271{[0]: ValueNode<Primitive> getattr, [1]: param_adj, [2]: ValueNode<StringImm> shape}
#   2: @normalize_adj_tensor_196:CNode_272{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_271, [2]: ValueNode<Int64Imm> 0}
#   3: @normalize_adj_tensor_196:CNode_274{[0]: ValueNode<FuncGraph> eye_273, [1]: CNode_272}
#   4: @normalize_adj_tensor_196:mx{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: param_adj, [2]: CNode_274}
#   5: @normalize_adj_tensor_196:CNode_275{[0]: ValueNode<Primitive> getattr, [1]: mx, [2]: ValueNode<StringImm> sum}
#   6: @normalize_adj_tensor_196:rowsum{[0]: CNode_275, [1]: ValueNode<Int64Imm> 1}
#   7: @normalize_adj_tensor_196:CNode_276{[0]: ValueNode<Primitive> getattr, [1]: rowsum, [2]: ValueNode<StringImm> pow}
#   8: @normalize_adj_tensor_196:CNode_277{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   9: @normalize_adj_tensor_196:CNode_278{[0]: ValueNode<DoSignaturePrimitive> S_Prim_div, [1]: CNode_277, [2]: ValueNode<Int64Imm> 2}
#  10: @normalize_adj_tensor_196:CNode_279{[0]: CNode_276, [1]: CNode_278}
#  11: @normalize_adj_tensor_196:CNode_280{[0]: ValueNode<Primitive> getattr, [1]: CNode_279, [2]: ValueNode<StringImm> flatten}
#  12: @normalize_adj_tensor_196:r_inv{[0]: CNode_280}
#  13: @normalize_adj_tensor_196:CNode_282{[0]: ValueNode<FuncGraph> isinf_281, [1]: r_inv}
#  14: @normalize_adj_tensor_196:CNode_283{[0]: ValueNode<DoSignaturePrimitive> S_Prim_setitem, [1]: r_inv, [2]: CNode_282, [3]: ValueNode<FP32Imm> 0}
#  15: @normalize_adj_tensor_196:r_mat_inv{[0]: ValueNode<FuncGraph> diag_284, [1]: CNode_283}
#  16: @normalize_adj_tensor_196:mx{[0]: ValueNode<FuncGraph> matmul_211, [1]: r_mat_inv, [2]: mx}
#  17: @normalize_adj_tensor_196:mx{[0]: ValueNode<FuncGraph> matmul_211, [1]: mx, [2]: r_mat_inv}
#  18: @normalize_adj_tensor_196:CNode_270{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> mx}
#  19: @normalize_adj_tensor_196:CNode_285{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: mx}
#  20: @normalize_adj_tensor_196:CNode_286{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_270, [2]: CNode_285}
#  21: @normalize_adj_tensor_196:CNode_287{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'Tensor(mx, dtype=mindspore.float32)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'ops': <module 'mindspore.ops' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/ops/__init__.py'>, 'Tensor': <class 'mindspore.common.tensor.Tensor'>, 'mindspore': <module 'mindspore' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/__init__.py'>}), [3]: CNode_286}
#  22: @normalize_adj_tensor_196:CNode_288{[0]: ValueNode<Primitive> Return, [1]: CNode_287}


subgraph attr:
subgraph instance: _loss_198 : 0x562975f71190
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:365/    def _loss(self, output, labels):/
subgraph @_loss_198(%para43_output, %para44_labels) {
  %1(CNode_289) = S_Prim_equal("CE", "CE")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
  %2(CNode_290) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
  %3(CNode_291) = Switch(%2, @✓_loss_292, @✗_loss_293)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
  %4(CNode_294) = %3()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
}
# Order:
#   1: @_loss_198:CNode_289{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: ValueNode<StringImm> CE, [2]: ValueNode<StringImm> CE}
#   2: @_loss_198:CNode_290{[0]: ValueNode<Primitive> Cond, [1]: CNode_289, [2]: ValueNode<BoolImm> false}
#   3: @_loss_198:CNode_291{[0]: ValueNode<Primitive> Switch, [1]: CNode_290, [2]: ValueNode<FuncGraph> ✓_loss_292, [3]: ValueNode<FuncGraph> ✗_loss_293}
#   4: @_loss_198:CNode_294{[0]: CNode_291}
#   5: @_loss_198:CNode_295{[0]: ValueNode<Primitive> Return, [1]: CNode_294}


subgraph attr:
after_block : 1
subgraph instance: ↓forward_fn_195 : 0x5629760a2710
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓forward_fn_195 parent: [subgraph @forward_fn_63](%para45_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w1) = $(forward_fn_63):S_Prim_getitem(%1, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_296) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %4(CNode_297) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %5(CNode_298) = Switch(%4, @↰↓forward_fn_299, @↱↓forward_fn_300)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %6(CNode_301) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %7(CNode_302) = Cond(%6, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %8(CNode_303) = Switch(%7, @✓↓forward_fn_304, @✗↓forward_fn_305)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %9(CNode_306) = %8()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
}
# Order:
#   1: @↓forward_fn_195:CNode_296{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w1, [2]: ValueNode<Int64Imm> 0}
#   2: @↓forward_fn_195:CNode_297{[0]: ValueNode<Primitive> Cond, [1]: CNode_296, [2]: ValueNode<BoolImm> false}
#   3: @↓forward_fn_195:CNode_298{[0]: ValueNode<Primitive> Switch, [1]: CNode_297, [2]: ValueNode<FuncGraph> ↰↓forward_fn_299, [3]: ValueNode<FuncGraph> ↱↓forward_fn_300}
#   4: @↓forward_fn_195:CNode_301{[0]: CNode_298}
#   5: @↓forward_fn_195:CNode_302{[0]: ValueNode<Primitive> Cond, [1]: CNode_301, [2]: ValueNode<BoolImm> false}
#   6: @↓forward_fn_195:CNode_303{[0]: ValueNode<Primitive> Switch, [1]: CNode_302, [2]: ValueNode<FuncGraph> ✓↓forward_fn_304, [3]: ValueNode<FuncGraph> ✗↓forward_fn_305}
#   7: @↓forward_fn_195:CNode_306{[0]: CNode_303}
#   8: @↓forward_fn_195:CNode_307{[0]: ValueNode<Primitive> Return, [1]: CNode_306}


subgraph attr:
subgraph instance: ✓forward_fn_193 : 0x5629760a1590
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓forward_fn_193() {
  %1(calc) = ClassType()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:146/            calc = MSELoss()/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:146/            calc = MSELoss()/
}
# Order:
#   1: @✓forward_fn_193:calc{[0]: ValueNode<ClassType> class 'mindspore.nn.loss.loss.MSELoss'}
#   2: @✓forward_fn_193:CNode_308{[0]: ValueNode<Primitive> Return, [1]: calc}


subgraph attr:
subgraph instance: ✗forward_fn_194 : 0x5629760922f0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗forward_fn_194 parent: [subgraph @forward_fn_63]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_309) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
  %3(CNode_310) = S_Prim_equal(%2, "KL")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
  %4(CNode_311) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
  %5(CNode_312) = Switch(%4, @✓✗forward_fn_313, @2✗forward_fn_314)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
  %6(CNode_315) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
  %7(CNode_317) = call @↓✗forward_fn_316(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
}
# Order:
#   1: @✗forward_fn_194:CNode_309{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✗forward_fn_194:CNode_310{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_309, [2]: ValueNode<StringImm> KL}
#   3: @✗forward_fn_194:CNode_311{[0]: ValueNode<Primitive> Cond, [1]: CNode_310, [2]: ValueNode<BoolImm> false}
#   4: @✗forward_fn_194:CNode_312{[0]: ValueNode<Primitive> Switch, [1]: CNode_311, [2]: ValueNode<FuncGraph> ✓✗forward_fn_313, [3]: ValueNode<FuncGraph> 2✗forward_fn_314}
#   5: @✗forward_fn_194:CNode_315{[0]: CNode_312}
#   6: @✗forward_fn_194:CNode_317{[0]: ValueNode<FuncGraph> ↓✗forward_fn_316, [1]: CNode_315}
#   7: @✗forward_fn_194:CNode_318{[0]: ValueNode<Primitive> Return, [1]: CNode_317}


subgraph attr:
subgraph instance: models_mind_gcn_GraphConvolution_construct_319 : 0x562976086bc0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @models_mind_gcn_GraphConvolution_construct_319 parent: [subgraph @after_grad_43](%para46_input, %para47_adj) {
  %1(CNode_320) = S_Prim_is_not(%para4_50591, None)
      : (<Ref[Tensor[Float32]], (), ref_key=:50591>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %2(CNode_321) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %3(CNode_322) = Switch(%2, @✓models_mind_gcn_GraphConvolution_construct_323, @✗models_mind_gcn_GraphConvolution_construct_324)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %4(CNode_325) = %3()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
}
# Order:
#   1: @models_mind_gcn_GraphConvolution_construct_319:CNode_326{[0]: ValueNode<Primitive> getattr, [1]: param_4695, [2]: ValueNode<StringImm> value}
#   2: @models_mind_gcn_GraphConvolution_construct_319:CNode_327{[0]: CNode_326}
#   3: @models_mind_gcn_GraphConvolution_construct_319:support{[0]: ValueNode<FuncGraph> mm_328, [1]: param_input, [2]: CNode_327}
#   4: @models_mind_gcn_GraphConvolution_construct_319:output{[0]: ValueNode<FuncGraph> mm_328, [1]: param_adj, [2]: support}
#   5: @models_mind_gcn_GraphConvolution_construct_319:CNode_320{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_50591, [2]: ValueNode<None> None}
#   6: @models_mind_gcn_GraphConvolution_construct_319:CNode_321{[0]: ValueNode<Primitive> Cond, [1]: CNode_320, [2]: ValueNode<BoolImm> false}
#   7: @models_mind_gcn_GraphConvolution_construct_319:CNode_322{[0]: ValueNode<Primitive> Switch, [1]: CNode_321, [2]: ValueNode<FuncGraph> ✓models_mind_gcn_GraphConvolution_construct_323, [3]: ValueNode<FuncGraph> ✗models_mind_gcn_GraphConvolution_construct_324}
#   8: @models_mind_gcn_GraphConvolution_construct_319:CNode_325{[0]: CNode_322}
#   9: @models_mind_gcn_GraphConvolution_construct_319:CNode_329{[0]: ValueNode<Primitive> Return, [1]: CNode_325}


subgraph attr:
subgraph instance: models_mind_gcn_GraphConvolution_construct_330 : 0x562976082070
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @models_mind_gcn_GraphConvolution_construct_330 parent: [subgraph @after_grad_43](%para48_input, %para49_adj) {
  %1(CNode_331) = S_Prim_is_not(%para5_85931, None)
      : (<Ref[Tensor[Float32]], (), ref_key=:85931>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %2(CNode_332) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %3(CNode_333) = Switch(%2, @✓models_mind_gcn_GraphConvolution_construct_334, @✗models_mind_gcn_GraphConvolution_construct_335)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %4(CNode_336) = %3()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
}
# Order:
#   1: @models_mind_gcn_GraphConvolution_construct_330:CNode_337{[0]: ValueNode<Primitive> getattr, [1]: param_35688, [2]: ValueNode<StringImm> value}
#   2: @models_mind_gcn_GraphConvolution_construct_330:CNode_338{[0]: CNode_337}
#   3: @models_mind_gcn_GraphConvolution_construct_330:support{[0]: ValueNode<FuncGraph> mm_328, [1]: param_input, [2]: CNode_338}
#   4: @models_mind_gcn_GraphConvolution_construct_330:output{[0]: ValueNode<FuncGraph> mm_328, [1]: param_adj, [2]: support}
#   5: @models_mind_gcn_GraphConvolution_construct_330:CNode_331{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_85931, [2]: ValueNode<None> None}
#   6: @models_mind_gcn_GraphConvolution_construct_330:CNode_332{[0]: ValueNode<Primitive> Cond, [1]: CNode_331, [2]: ValueNode<BoolImm> false}
#   7: @models_mind_gcn_GraphConvolution_construct_330:CNode_333{[0]: ValueNode<Primitive> Switch, [1]: CNode_332, [2]: ValueNode<FuncGraph> ✓models_mind_gcn_GraphConvolution_construct_334, [3]: ValueNode<FuncGraph> ✗models_mind_gcn_GraphConvolution_construct_335}
#   8: @models_mind_gcn_GraphConvolution_construct_330:CNode_336{[0]: CNode_333}
#   9: @models_mind_gcn_GraphConvolution_construct_330:CNode_339{[0]: ValueNode<Primitive> Return, [1]: CNode_336}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↵models_mind_gcn_embedding_GCN_construct_200 : 0x56297608bc10
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:422/    def construct(self, x, adj):/
subgraph @↵models_mind_gcn_embedding_GCN_construct_200 parent: [subgraph @models_mind_gcn_embedding_GCN_construct_191](%para50_, %para51_) {
  %1(CNode_202) = $(models_mind_gcn_embedding_GCN_construct_191):S_Prim_make_range(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %2(CNode_203) = $(models_mind_gcn_embedding_GCN_construct_191):S_Prim_inner_len(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %3(CNode_340) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para50_@CNode_341, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %4(CNode_342) = Switch(%3, @↻models_mind_gcn_embedding_GCN_construct_343, @↓models_mind_gcn_embedding_GCN_construct_344)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %5(CNode_345) = %4()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
}
# Order:
#   1: @↵models_mind_gcn_embedding_GCN_construct_200:CNode_340{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_341, [2]: CNode_203}
#   2: @↵models_mind_gcn_embedding_GCN_construct_200:CNode_342{[0]: ValueNode<Primitive> Switch, [1]: CNode_340, [2]: ValueNode<FuncGraph> ↻models_mind_gcn_embedding_GCN_construct_343, [3]: ValueNode<FuncGraph> ↓models_mind_gcn_embedding_GCN_construct_344}
#   3: @↵models_mind_gcn_embedding_GCN_construct_200:CNode_345{[0]: CNode_342}
#   4: @↵models_mind_gcn_embedding_GCN_construct_200:CNode_347{[0]: ValueNode<Primitive> Return, [1]: CNode_345}


subgraph attr:
subgraph instance: tril_indices_218 : 0x56296f82f000
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7447/def tril_indices(row, col, offset=0, *, dtype=mstype.int64):/
subgraph @tril_indices_218(%para52_row, %para53_col, %para54_offset, %para55_dtype) {
  %1(CNode_348) = S_Prim_MakeTuple("row", "col", "offset", "dtype")
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7492/    tril_indices_ = TrilIndices(row=row, col=col, offset=offset, dtype=dtype)/
  %2(CNode_349) = S_Prim_MakeTuple(%para52_row, %para53_col, %para54_offset, %para55_dtype)
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7492/    tril_indices_ = TrilIndices(row=row, col=col, offset=offset, dtype=dtype)/
  %3(CNode_350) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7492/    tril_indices_ = TrilIndices(row=row, col=col, offset=offset, dtype=dtype)/
  %4(tril_indices_) = UnpackCall_unpack_call(ClassType, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7492/    tril_indices_ = TrilIndices(row=row, col=col, offset=offset, dtype=dtype)/
  %5(CNode_351) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7493/    return tril_indices_()/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:7493/    return tril_indices_()/
}
# Order:
#   1: @tril_indices_218:CNode_348{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> row, [2]: ValueNode<StringImm> col, [3]: ValueNode<StringImm> offset, [4]: ValueNode<StringImm> dtype}
#   2: @tril_indices_218:CNode_349{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_row, [2]: param_col, [3]: param_offset, [4]: param_dtype}
#   3: @tril_indices_218:CNode_350{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_348, [2]: CNode_349}
#   4: @tril_indices_218:tril_indices_{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.352, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.TrilIndices', [2]: CNode_350}
#   5: @tril_indices_218:CNode_351{[0]: tril_indices_}
#   6: @tril_indices_218:CNode_353{[0]: ValueNode<Primitive> Return, [1]: CNode_351}


subgraph attr:
subgraph instance: relu_213 : 0x56296fade810
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:3420/def relu(input):/
subgraph @relu_213(%para56_input) {
  %1(CNode_355) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:3458/    relu_ = _get_cache_prim(NN_OPS.ReLU)()/
  %2(relu_) = %1()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:3458/    relu_ = _get_cache_prim(NN_OPS.ReLU)()/
  %3(CNode_356) = %2(%para56_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:3459/    return relu_(input)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:3459/    return relu_(input)/
}
# Order:
#   1: @relu_213:CNode_355{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.nn_ops.ReLU'}
#   2: @relu_213:relu_{[0]: CNode_355}
#   3: @relu_213:CNode_356{[0]: relu_, [1]: param_input}
#   4: @relu_213:CNode_357{[0]: ValueNode<Primitive> Return, [1]: CNode_356}


subgraph attr:
subgraph instance: matmul_211 : 0x56296fb18780
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @matmul_211(%para57_input, %para58_other) {
  %1(CNode_358) = S_Prim_isinstance(%para57_input, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %2(CNode_359) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %3(CNode_360) = Switch(%2, @↰matmul_361, @↱matmul_362)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %4(CNode_363) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %5(CNode_364) = S_Prim_logical_not(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %6(CNode_365) = Cond(%5, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %7(CNode_366) = Switch(%6, @✓matmul_367, @✗matmul_368)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  %8(CNode_369) = %7()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
}
# Order:
#   1: @matmul_211:CNode_358{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_input, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @matmul_211:CNode_359{[0]: ValueNode<Primitive> Cond, [1]: CNode_358, [2]: ValueNode<BoolImm> false}
#   3: @matmul_211:CNode_360{[0]: ValueNode<Primitive> Switch, [1]: CNode_359, [2]: ValueNode<FuncGraph> ↰matmul_361, [3]: ValueNode<FuncGraph> ↱matmul_362}
#   4: @matmul_211:CNode_363{[0]: CNode_360}
#   5: @matmul_211:CNode_364{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_363}
#   6: @matmul_211:CNode_365{[0]: ValueNode<Primitive> Cond, [1]: CNode_364, [2]: ValueNode<BoolImm> false}
#   7: @matmul_211:CNode_366{[0]: ValueNode<Primitive> Switch, [1]: CNode_365, [2]: ValueNode<FuncGraph> ✓matmul_367, [3]: ValueNode<FuncGraph> ✗matmul_368}
#   8: @matmul_211:CNode_369{[0]: CNode_366}
#   9: @matmul_211:CNode_370{[0]: ValueNode<Primitive> Return, [1]: CNode_369}


subgraph attr:
subgraph instance: clamp_232 : 0x562975fbe890
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:222/def clamp(input, min=None, max=None):/
subgraph @clamp_232(%para59_input, %para60_min, %para61_max) {
  %1(CNode_372) = call @clip_by_value_371(%para59_input, %para60_min, %para61_max)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
}
# Order:
#   1: @clamp_232:CNode_372{[0]: ValueNode<FuncGraph> clip_by_value_371, [1]: param_input, [2]: param_min, [3]: param_max}
#   2: @clamp_232:CNode_373{[0]: ValueNode<Primitive> Return, [1]: CNode_372}


subgraph attr:
subgraph instance: randn_like_226 : 0x562976002d80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @randn_like_226(%para62_input, %para63_seed, %para64_dtype) {
  %1(CNode_374) = S_Prim_isinstance(%para62_input, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  %2(CNode_375) = S_Prim_logical_not(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  %3(CNode_376) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  %4(CNode_377) = Switch(%3, @✓randn_like_378, @✗randn_like_379)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  %5(CNode_380) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
}
# Order:
#   1: @randn_like_226:CNode_374{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_input, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @randn_like_226:CNode_375{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_374}
#   3: @randn_like_226:CNode_376{[0]: ValueNode<Primitive> Cond, [1]: CNode_375, [2]: ValueNode<BoolImm> false}
#   4: @randn_like_226:CNode_377{[0]: ValueNode<Primitive> Switch, [1]: CNode_376, [2]: ValueNode<FuncGraph> ✓randn_like_378, [3]: ValueNode<FuncGraph> ✗randn_like_379}
#   5: @randn_like_226:CNode_380{[0]: CNode_377}
#   6: @randn_like_226:CNode_381{[0]: ValueNode<Primitive> Return, [1]: CNode_380}


subgraph attr:
subgraph instance: ✓get_modified_adj_239 : 0x562975fb7590
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:405/    def get_modified_adj(self, ori_adj):/
subgraph @✓get_modified_adj_239 parent: [subgraph @get_modified_adj_189]() {
  %1(CNode_383) = call @ones_like_382(%para34_ori_adj)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:409/            self.complementary = ops.ones_like(/
  %2(CNode_384) = call @eye_273(I64(2708))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:410/                ori_adj) - ops.eye(self.nnodes)/
  %3(CNode_385) = S_Prim_sub(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:409/            self.complementary = ops.ones_like(/
  %4(CNode_386) = setattr[side_effect_io: Bool(1)](InterpretedObject, "complementary", %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:409/            self.complementary = ops.ones_like(/
  %5(CNode_387) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:405/    def get_modified_adj(self, ori_adj):/
  %6(CNode_389) = call @↓get_modified_adj_388()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(CNode_390) = Depend[side_effect_propagate: I64(1)](%6, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:409/            self.complementary = ops.ones_like(/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:409/            self.complementary = ops.ones_like(/
}
# Order:
#   1: @✓get_modified_adj_239:CNode_383{[0]: ValueNode<FuncGraph> ones_like_382, [1]: param_ori_adj}
#   2: @✓get_modified_adj_239:CNode_384{[0]: ValueNode<FuncGraph> eye_273, [1]: ValueNode<Int64Imm> 2708}
#   3: @✓get_modified_adj_239:CNode_385{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: CNode_383, [2]: CNode_384}
#   4: @✓get_modified_adj_239:CNode_386{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> complementary, [3]: CNode_385}
#   5: @✓get_modified_adj_239:CNode_391{[0]: ValueNode<Primitive> Return, [1]: CNode_390}
#   6: @✓get_modified_adj_239:CNode_389{[0]: ValueNode<FuncGraph> ↓get_modified_adj_388}


subgraph attr:
subgraph instance: ✗get_modified_adj_240 : 0x562975f93830
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:405/    def get_modified_adj(self, ori_adj):/
subgraph @✗get_modified_adj_240 parent: [subgraph @get_modified_adj_189]() {
  %1(CNode_392) = call @↓get_modified_adj_388()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:408/        if self.complementary is None:/
}
# Order:
#   1: @✗get_modified_adj_240:CNode_393{[0]: ValueNode<Primitive> Return, [1]: CNode_392}
#   2: @✗get_modified_adj_240:CNode_392{[0]: ValueNode<FuncGraph> ↓get_modified_adj_388}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓set_train_251 : 0x562975f9d980
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @✓set_train_251 parent: [subgraph @set_train_186]() {
  %1(CNode_394) = setattr[side_effect_io: Bool(1)](InterpretedObject, "_phase", "train")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1871/            self._phase = 'train'/
  %2(CNode_395) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
  %3(CNode_397) = call @↓set_train_396()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113/        self.victim_model.set_train(False)/
  %4(CNode_398) = Depend[side_effect_propagate: I64(1)](%3, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1871/            self._phase = 'train'/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1871/            self._phase = 'train'/
}
# Order:
#   1: @✓set_train_251:CNode_394{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _phase, [3]: ValueNode<StringImm> train}
#   2: @✓set_train_251:CNode_399{[0]: ValueNode<Primitive> Return, [1]: CNode_398}
#   3: @✓set_train_251:CNode_397{[0]: ValueNode<FuncGraph> ↓set_train_396}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗set_train_252 : 0x56297601b890
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @✗set_train_252 parent: [subgraph @set_train_186]() {
  %1(CNode_117) = setattr[side_effect_io: Bool(1)](InterpretedObject, "_phase", "predict")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
  %2(CNode_118) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
  %3(CNode_119) = call @↓set_train_396()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:113/        self.victim_model.set_train(False)/
  %4(CNode_120) = Depend[side_effect_propagate: I64(1)](%3, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1873/            self._phase = 'predict'/
}
# Order:
#   1: @✗set_train_252:CNode_117{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _phase, [3]: ValueNode<StringImm> predict}
#   2: @✗set_train_252:CNode_121{[0]: ValueNode<Primitive> Return, [1]: CNode_120}
#   3: @✗set_train_252:CNode_119{[0]: ValueNode<FuncGraph> ↓set_train_396}


subgraph attr:
subgraph instance: enumerate__256 : 0x56296fb59820
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @enumerate__256(%para65_x, %para66_start) {
  %1(CNode_400) = S_Prim_MakeTuple(ClassType, ClassType, ClassType)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  %2(CNode_401) = S_Prim_isinstance(%para65_x, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  %3(CNode_402) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  %4(CNode_403) = Switch(%3, @✓enumerate__404, @✗enumerate__405)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  %5(CNode_406) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
}
# Order:
#   1: @enumerate__256:x_type{[0]: ValueNode<DoSignaturePrimitive> S_Prim_typeof, [1]: param_x}
#   2: @enumerate__256:CNode_400{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<ClassType> class 'int', [2]: ValueNode<ClassType> class 'float', [3]: ValueNode<ClassType> class 'bool'}
#   3: @enumerate__256:CNode_401{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_x, [2]: CNode_400}
#   4: @enumerate__256:CNode_402{[0]: ValueNode<Primitive> Cond, [1]: CNode_401, [2]: ValueNode<BoolImm> false}
#   5: @enumerate__256:CNode_403{[0]: ValueNode<Primitive> Switch, [1]: CNode_402, [2]: ValueNode<FuncGraph> ✓enumerate__404, [3]: ValueNode<FuncGraph> ✗enumerate__405}
#   6: @enumerate__256:CNode_406{[0]: CNode_403}
#   7: @enumerate__256:CNode_407{[0]: ValueNode<Primitive> Return, [1]: CNode_406}


subgraph attr:
training : 0
subgraph instance: models_mind_gcn_GraphConvolution_construct_408 : 0x56296fad70f0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @models_mind_gcn_GraphConvolution_construct_408 parent: [subgraph @after_grad_43](%para67_input, %para68_adj) {
  %1(CNode_409) = S_Prim_is_not(%para8_gc1.bias, None)
      : (<Ref[Tensor[Float32]], (), ref_key=:gc1.bias>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %2(CNode_410) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %3(CNode_411) = Switch(%2, @✓models_mind_gcn_GraphConvolution_construct_412, @✗models_mind_gcn_GraphConvolution_construct_413)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %4(CNode_414) = %3()
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  Return(%4)
      : (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
}
# Order:
#   1: @models_mind_gcn_GraphConvolution_construct_408:CNode_415{[0]: ValueNode<Primitive> getattr, [1]: param_gc1.weight, [2]: ValueNode<StringImm> value}
#   2: @models_mind_gcn_GraphConvolution_construct_408:CNode_416{[0]: CNode_415}
#   3: @models_mind_gcn_GraphConvolution_construct_408:support{[0]: ValueNode<FuncGraph> mm_328, [1]: param_input, [2]: CNode_416}
#   4: @models_mind_gcn_GraphConvolution_construct_408:output{[0]: ValueNode<FuncGraph> mm_328, [1]: param_adj, [2]: support}
#   5: @models_mind_gcn_GraphConvolution_construct_408:CNode_409{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_gc1.bias, [2]: ValueNode<None> None}
#   6: @models_mind_gcn_GraphConvolution_construct_408:CNode_410{[0]: ValueNode<Primitive> Cond, [1]: CNode_409, [2]: ValueNode<BoolImm> false}
#   7: @models_mind_gcn_GraphConvolution_construct_408:CNode_411{[0]: ValueNode<Primitive> Switch, [1]: CNode_410, [2]: ValueNode<FuncGraph> ✓models_mind_gcn_GraphConvolution_construct_412, [3]: ValueNode<FuncGraph> ✗models_mind_gcn_GraphConvolution_construct_413}
#   8: @models_mind_gcn_GraphConvolution_construct_408:CNode_414{[0]: CNode_411}
#   9: @models_mind_gcn_GraphConvolution_construct_408:CNode_417{[0]: ValueNode<Primitive> Return, [1]: CNode_414}


subgraph attr:
training : 0
subgraph instance: models_mind_gcn_GraphConvolution_construct_418 : 0x56296f737c20
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @models_mind_gcn_GraphConvolution_construct_418 parent: [subgraph @after_grad_43](%para69_input, %para70_adj) {
  %1(CNode_419) = S_Prim_is_not(%para9_gc2.bias, None)
      : (<Ref[Tensor[Float32]], (), ref_key=:gc2.bias>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %2(CNode_420) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %3(CNode_421) = Switch(%2, @✓models_mind_gcn_GraphConvolution_construct_422, @✗models_mind_gcn_GraphConvolution_construct_423)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  %4(CNode_424) = %3()
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
  Return(%4)
      : (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:60/        if self.bias is not None:/
}
# Order:
#   1: @models_mind_gcn_GraphConvolution_construct_418:CNode_425{[0]: ValueNode<Primitive> getattr, [1]: param_gc2.weight, [2]: ValueNode<StringImm> value}
#   2: @models_mind_gcn_GraphConvolution_construct_418:CNode_426{[0]: CNode_425}
#   3: @models_mind_gcn_GraphConvolution_construct_418:support{[0]: ValueNode<FuncGraph> mm_328, [1]: param_input, [2]: CNode_426}
#   4: @models_mind_gcn_GraphConvolution_construct_418:output{[0]: ValueNode<FuncGraph> mm_328, [1]: param_adj, [2]: support}
#   5: @models_mind_gcn_GraphConvolution_construct_418:CNode_419{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_gc2.bias, [2]: ValueNode<None> None}
#   6: @models_mind_gcn_GraphConvolution_construct_418:CNode_420{[0]: ValueNode<Primitive> Cond, [1]: CNode_419, [2]: ValueNode<BoolImm> false}
#   7: @models_mind_gcn_GraphConvolution_construct_418:CNode_421{[0]: ValueNode<Primitive> Switch, [1]: CNode_420, [2]: ValueNode<FuncGraph> ✓models_mind_gcn_GraphConvolution_construct_422, [3]: ValueNode<FuncGraph> ✗models_mind_gcn_GraphConvolution_construct_423}
#   8: @models_mind_gcn_GraphConvolution_construct_418:CNode_424{[0]: CNode_421}
#   9: @models_mind_gcn_GraphConvolution_construct_418:CNode_427{[0]: ValueNode<Primitive> Return, [1]: CNode_424}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↵models_mind_gcn_GCN_construct_253 : 0x56296fac0270
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @↵models_mind_gcn_GCN_construct_253 parent: [subgraph @models_mind_gcn_GCN_construct_197](%para71_, %para72_) {
  %1(CNode_257) = $(models_mind_gcn_GCN_construct_197):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_255) = $(models_mind_gcn_GCN_construct_197):call @enumerate__256(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %3(CNode_258) = $(models_mind_gcn_GCN_construct_197):S_Prim_inner_len(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %4(CNode_428) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para71_@CNode_429, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %5(CNode_430) = Switch(%4, @↻models_mind_gcn_GCN_construct_431, @↓models_mind_gcn_GCN_construct_432)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %6(CNode_433) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
}
# Order:
#   1: @↵models_mind_gcn_GCN_construct_253:CNode_428{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_429, [2]: CNode_258}
#   2: @↵models_mind_gcn_GCN_construct_253:CNode_430{[0]: ValueNode<Primitive> Switch, [1]: CNode_428, [2]: ValueNode<FuncGraph> ↻models_mind_gcn_GCN_construct_431, [3]: ValueNode<FuncGraph> ↓models_mind_gcn_GCN_construct_432}
#   3: @↵models_mind_gcn_GCN_construct_253:CNode_433{[0]: CNode_430}
#   4: @↵models_mind_gcn_GCN_construct_253:CNode_434{[0]: ValueNode<Primitive> Return, [1]: CNode_433}


subgraph attr:
subgraph instance: ✓get_modified_adj_after_264 : 0x562975f2f950
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:422/    def get_modified_adj_after(self, ori_adj):/
subgraph @✓get_modified_adj_after_264 parent: [subgraph @get_modified_adj_after_199]() {
  %1(CNode_435) = call @ones_like_382(%para40_ori_adj)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:425/            self.complementary_after = ops.ones_like(/
  %2(CNode_436) = call @eye_273(I64(2708))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:426/                ori_adj) - ops.eye(self.nnodes)#.to(self.device)/
  %3(CNode_437) = S_Prim_sub(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:425/            self.complementary_after = ops.ones_like(/
  %4(CNode_438) = setattr[side_effect_io: Bool(1)](InterpretedObject, "complementary_after", %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:425/            self.complementary_after = ops.ones_like(/
  %5(CNode_439) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:422/    def get_modified_adj_after(self, ori_adj):/
  %6(CNode_441) = call @↓get_modified_adj_after_440()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  %7(CNode_442) = Depend[side_effect_propagate: I64(1)](%6, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:425/            self.complementary_after = ops.ones_like(/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:425/            self.complementary_after = ops.ones_like(/
}
# Order:
#   1: @✓get_modified_adj_after_264:CNode_435{[0]: ValueNode<FuncGraph> ones_like_382, [1]: param_ori_adj}
#   2: @✓get_modified_adj_after_264:CNode_436{[0]: ValueNode<FuncGraph> eye_273, [1]: ValueNode<Int64Imm> 2708}
#   3: @✓get_modified_adj_after_264:CNode_437{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: CNode_435, [2]: CNode_436}
#   4: @✓get_modified_adj_after_264:CNode_438{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> complementary_after, [3]: CNode_437}
#   5: @✓get_modified_adj_after_264:CNode_443{[0]: ValueNode<Primitive> Return, [1]: CNode_442}
#   6: @✓get_modified_adj_after_264:CNode_441{[0]: ValueNode<FuncGraph> ↓get_modified_adj_after_440}


subgraph attr:
subgraph instance: ✗get_modified_adj_after_265 : 0x56296fa004c0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:422/    def get_modified_adj_after(self, ori_adj):/
subgraph @✗get_modified_adj_after_265 parent: [subgraph @get_modified_adj_after_199]() {
  %1(CNode_444) = call @↓get_modified_adj_after_440()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:424/        if self.complementary_after is None:/
}
# Order:
#   1: @✗get_modified_adj_after_265:CNode_445{[0]: ValueNode<Primitive> Return, [1]: CNode_444}
#   2: @✗get_modified_adj_after_265:CNode_444{[0]: ValueNode<FuncGraph> ↓get_modified_adj_after_440}


subgraph attr:
subgraph instance: diag_284 : 0x56296f5c85c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:5451/def diag(input):/
subgraph @diag_284(%para73_input) {
  %1(CNode_446) = S_Prim_Diag(%para73_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:5483/    return diag_(input)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:5483/    return diag_(input)/
}
# Order:
#   1: @diag_284:CNode_446{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Diag, [1]: param_input}
#   2: @diag_284:CNode_447{[0]: ValueNode<Primitive> Return, [1]: CNode_446}


subgraph attr:
subgraph instance: isinf_281 : 0x56296f8c0ae0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:11587/def isinf(input):/
subgraph @isinf_281(%para74_input) {
  %1(CNode_448) = S_Prim_IsInf[output_names: ["output"], input_names: ["x"]](%para74_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:11625/    return isinf_(input)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:11625/    return isinf_(input)/
}
# Order:
#   1: @isinf_281:CNode_448{[0]: ValueNode<DoSignaturePrimitive> S_Prim_IsInf, [1]: param_input}
#   2: @isinf_281:CNode_449{[0]: ValueNode<Primitive> Return, [1]: CNode_448}


subgraph attr:
subgraph instance: eye_273 : 0x56296f904f70
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @eye_273(%para75_n, %para76_m, %para77_dtype) {
  %1(CNode_450) = S_Prim_is_(%para76_m, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
  %2(CNode_451) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
  %3(CNode_452) = Switch(%2, @✓eye_453, @✗eye_454)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
  %4(CNode_455) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
  %5(CNode_457) = call @↓eye_456(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:410/                ori_adj) - ops.eye(self.nnodes)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
}
# Order:
#   1: @eye_273:CNode_450{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_m, [2]: ValueNode<None> None}
#   2: @eye_273:CNode_451{[0]: ValueNode<Primitive> Cond, [1]: CNode_450, [2]: ValueNode<BoolImm> false}
#   3: @eye_273:CNode_452{[0]: ValueNode<Primitive> Switch, [1]: CNode_451, [2]: ValueNode<FuncGraph> ✓eye_453, [3]: ValueNode<FuncGraph> ✗eye_454}
#   4: @eye_273:CNode_455{[0]: CNode_452}
#   5: @eye_273:CNode_457{[0]: ValueNode<FuncGraph> ↓eye_456, [1]: CNode_455}
#   6: @eye_273:CNode_458{[0]: ValueNode<Primitive> Return, [1]: CNode_457}


subgraph attr:
subgraph instance: ✓_loss_292 : 0x562975f8e450
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:365/    def _loss(self, output, labels):/
subgraph @✓_loss_292 parent: [subgraph @_loss_198]() {
  %1(CNode_459) = S_Prim_MakeTuple("output", "labels")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
  %2(CNode_460) = S_Prim_MakeTuple(%para43_output, %para44_labels)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
  %3(CNode_461) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
  %4(loss) = PyInterpret[side_effect_io: Bool(1)](Script['F.nll_loss(output, labels)'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
  %5(CNode_463) = call @↓_loss_462(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:368/            loss = F.nll_loss(output, labels)/
}
# Order:
#   1: @✓_loss_292:CNode_459{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> output, [2]: ValueNode<StringImm> labels}
#   2: @✓_loss_292:CNode_460{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_output, [2]: param_labels}
#   3: @✓_loss_292:CNode_461{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_459, [2]: CNode_460}
#   4: @✓_loss_292:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'F.nll_loss(output, labels)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'F': <module 'torch.nn.functional' from '/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py'>}), [3]: CNode_461}
#   5: @✓_loss_292:CNode_463{[0]: ValueNode<FuncGraph> ↓_loss_462, [1]: loss}
#   6: @✓_loss_292:CNode_464{[0]: ValueNode<Primitive> Return, [1]: CNode_463}


subgraph attr:
subgraph instance: ✗_loss_293 : 0x562975f823c0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:365/    def _loss(self, output, labels):/
subgraph @✗_loss_293() {
  %1(CNode_465) = call @↓_loss_462(I64(0))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:367/        if self.loss_type == "CE":/
}
# Order:
#   1: @✗_loss_293:CNode_465{[0]: ValueNode<FuncGraph> ↓_loss_462, [1]: ValueNode<Int64Imm> 0}
#   2: @✗_loss_293:CNode_466{[0]: ValueNode<Primitive> Return, [1]: CNode_465}


subgraph attr:
subgraph instance: ✓↓forward_fn_304 : 0x56297612b7b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓↓forward_fn_304 parent: [subgraph @↓forward_fn_195]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_467) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
  %3(CNode_468) = S_Prim_equal(%2, "KDE")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
  %4(CNode_469) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
  %5(CNode_470) = Switch(%4, @2✓↓forward_fn_471, @✗✓↓forward_fn_472)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
  %6(CNode_473) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:166/            if args.measure == "KDE":/
}
# Order:
#   1: @✓↓forward_fn_304:CNode_474{[0]: param_фcalc, [1]: feature_adj, [2]: adj_norm}
#   2: @✓↓forward_fn_304:CNode_475{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w1, [2]: CNode_474}
#   3: @✓↓forward_fn_304:CNode_476{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_475, [2]: ValueNode<Int64Imm> 1000}
#   4: @✓↓forward_fn_304:CNode_477{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c1}
#   5: @✓↓forward_fn_304:c1{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_476, [2]: CNode_477}
#   6: @✓↓forward_fn_304:CNode_467{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   7: @✓↓forward_fn_304:CNode_468{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_467, [2]: ValueNode<StringImm> KDE}
#   8: @✓↓forward_fn_304:CNode_469{[0]: ValueNode<Primitive> Cond, [1]: CNode_468, [2]: ValueNode<BoolImm> false}
#   9: @✓↓forward_fn_304:CNode_470{[0]: ValueNode<Primitive> Switch, [1]: CNode_469, [2]: ValueNode<FuncGraph> 2✓↓forward_fn_471, [3]: ValueNode<FuncGraph> ✗✓↓forward_fn_472}
#  10: @✓↓forward_fn_304:CNode_473{[0]: CNode_470}
#  11: @✓↓forward_fn_304:CNode_478{[0]: ValueNode<Primitive> Return, [1]: CNode_473}


subgraph attr:
subgraph instance: ✗↓forward_fn_305 : 0x5629760ab8f0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗↓forward_fn_305 parent: [subgraph @↓forward_fn_195]() {
  %1(CNode_106) = $(forward_fn_63):S_Prim_MakeTuple("weight_supervised", "origin_loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %2(weight_supervised) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(CNode_102) = $(forward_fn_63):S_Prim_MakeTuple("idx_attack", "self.adj_changes", "self._loss", "label", "output", "self")
      : (<null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %4(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %8(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %9(CNode_80) = $(forward_fn_63):getattr(%8, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(modified_adj) = $(forward_fn_63):call @adding_noise_190(%7, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %11(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %12(output) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%5, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  %13(CNode_103) = $(forward_fn_63):S_Prim_MakeTuple(%4, %para3_Parameter$1, @_loss_198, %para28_label, %12, InterpretedObject)
      : (<null>, <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %14(CNode_105) = $(forward_fn_63):S_Prim_make_dict(%3, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %15(origin_loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001'], InterpretedObject, %14)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %16(CNode_107) = $(forward_fn_63):S_Prim_MakeTuple(%2, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %17(CNode_108) = $(forward_fn_63):S_Prim_make_dict(%1, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %18(loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['weight_supervised*origin_loss'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %19(CNode_480) = call @2↓forward_fn_479(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
}
# Order:
#   1: @✗↓forward_fn_305:CNode_481{[0]: ValueNode<Primitive> Return, [1]: CNode_480}
#   2: @✗↓forward_fn_305:CNode_480{[0]: ValueNode<FuncGraph> 2↓forward_fn_479, [1]: loss}


subgraph attr:
subgraph instance: ↰↓forward_fn_299 : 0x5629760a9ec0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↰↓forward_fn_299 parent: [subgraph @forward_fn_63]() {
  %1(feature_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(3))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_482) = getattr(%1, "max")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %3(CNode_483) = %2()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %4(CNode_484) = getattr(%1, "min")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %5(CNode_485) = %4()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  %6(CNode_486) = S_Prim_not_equal(%3, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
}
# Order:
#   1: @↰↓forward_fn_299:CNode_482{[0]: ValueNode<Primitive> getattr, [1]: feature_adj, [2]: ValueNode<StringImm> max}
#   2: @↰↓forward_fn_299:CNode_483{[0]: CNode_482}
#   3: @↰↓forward_fn_299:CNode_484{[0]: ValueNode<Primitive> getattr, [1]: feature_adj, [2]: ValueNode<StringImm> min}
#   4: @↰↓forward_fn_299:CNode_485{[0]: CNode_484}
#   5: @↰↓forward_fn_299:CNode_486{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: CNode_483, [2]: CNode_485}
#   6: @↰↓forward_fn_299:CNode_487{[0]: ValueNode<Primitive> Return, [1]: CNode_486}


subgraph attr:
subgraph instance: ↱↓forward_fn_300 : 0x5629760a67c0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↱↓forward_fn_300 parent: [subgraph @↓forward_fn_195]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w1) = $(forward_fn_63):S_Prim_getitem(%1, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_296) = $(↓forward_fn_195):S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:163/        if w1 != 0 and feature_adj.max() != feature_adj.min():/
}
# Order:
#   1: @↱↓forward_fn_300:CNode_488{[0]: ValueNode<Primitive> Return, [1]: CNode_296}


subgraph attr:
after_block : 1
subgraph instance: ↓✗forward_fn_316 : 0x5629760a0450
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✗forward_fn_316(%para78_) {
  Return(%para78_фcalc)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:148/        elif args.measure == "KL":/
}
# Order:
#   1: @↓✗forward_fn_316:CNode_489{[0]: ValueNode<Primitive> Return, [1]: param_фcalc}


subgraph attr:
subgraph instance: ✓✗forward_fn_313 : 0x56297609b850
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓✗forward_fn_313() {
  Return(@calc_kl_490)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:149/            calc = self.calc_kl/
}
# Order:
#   1: @✓✗forward_fn_313:CNode_491{[0]: ValueNode<Primitive> Return, [1]: ValueNode<FuncGraph> calc_kl_490}


subgraph attr:
subgraph instance: 2✗forward_fn_314 : 0x562976094910
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✗forward_fn_314 parent: [subgraph @forward_fn_63]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_492) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
  %3(CNode_493) = S_Prim_equal(%2, "DP")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
  %4(CNode_494) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
  %5(CNode_495) = Switch(%4, @✓2✗forward_fn_496, @3✗forward_fn_497)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
  %6(CNode_498) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
  %7(CNode_500) = call @↓2✗forward_fn_499(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
}
# Order:
#   1: @2✗forward_fn_314:CNode_492{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @2✗forward_fn_314:CNode_493{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_492, [2]: ValueNode<StringImm> DP}
#   3: @2✗forward_fn_314:CNode_494{[0]: ValueNode<Primitive> Cond, [1]: CNode_493, [2]: ValueNode<BoolImm> false}
#   4: @2✗forward_fn_314:CNode_495{[0]: ValueNode<Primitive> Switch, [1]: CNode_494, [2]: ValueNode<FuncGraph> ✓2✗forward_fn_496, [3]: ValueNode<FuncGraph> 3✗forward_fn_497}
#   5: @2✗forward_fn_314:CNode_498{[0]: CNode_495}
#   6: @2✗forward_fn_314:CNode_500{[0]: ValueNode<FuncGraph> ↓2✗forward_fn_499, [1]: CNode_498}
#   7: @2✗forward_fn_314:CNode_501{[0]: ValueNode<Primitive> Return, [1]: CNode_500}


subgraph attr:
subgraph instance: mm_328 : 0x56296fc24ec0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/math_ops.py:85/def mm(input, mat2):/
subgraph @mm_328(%para79_input, %para80_mat2) {
  %1(CNode_502) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/math_ops.py:122/    _matmul = _get_cache_prim(ops.MatMul)()/
  %2(_matmul) = %1()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/math_ops.py:122/    _matmul = _get_cache_prim(ops.MatMul)()/
  %3(out) = %2(%para79_input, %para80_mat2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/math_ops.py:123/    out = _matmul(input, mat2)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/math_ops.py:124/    return out/
}
# Order:
#   1: @mm_328:CNode_502{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.MatMul'}
#   2: @mm_328:_matmul{[0]: CNode_502}
#   3: @mm_328:out{[0]: _matmul, [1]: param_input, [2]: param_mat2}
#   4: @mm_328:CNode_503{[0]: ValueNode<Primitive> Return, [1]: out}


subgraph attr:
subgraph instance: ✓models_mind_gcn_GraphConvolution_construct_323 : 0x56297608aa90
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✓models_mind_gcn_GraphConvolution_construct_323 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_319]() {
  %1(CNode_326) = $(models_mind_gcn_GraphConvolution_construct_319):getattr(%para6_4695, "value")
      : (<Ref[Tensor[Float32]], (1433, 16), ref_key=:4695>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_327) = $(models_mind_gcn_GraphConvolution_construct_319):%1()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_319):call @mm_328(%para46_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_319):call @mm_328(%para47_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  %5(CNode_504) = S_Prim_add(%4, %para4_50591)
      : (<null>, <Ref[Tensor[Float32]], (), ref_key=:50591>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
}
# Order:
#   1: @✓models_mind_gcn_GraphConvolution_construct_323:CNode_504{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: output, [2]: param_50591}
#   2: @✓models_mind_gcn_GraphConvolution_construct_323:CNode_505{[0]: ValueNode<Primitive> Return, [1]: CNode_504}


subgraph attr:
subgraph instance: ✗models_mind_gcn_GraphConvolution_construct_324 : 0x562976089c80
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✗models_mind_gcn_GraphConvolution_construct_324 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_319]() {
  %1(CNode_326) = $(models_mind_gcn_GraphConvolution_construct_319):getattr(%para6_4695, "value")
      : (<Ref[Tensor[Float32]], (1433, 16), ref_key=:4695>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_327) = $(models_mind_gcn_GraphConvolution_construct_319):%1()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_319):call @mm_328(%para46_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_319):call @mm_328(%para47_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:63/            return output/
}
# Order:
#   1: @✗models_mind_gcn_GraphConvolution_construct_324:CNode_506{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
subgraph instance: ✓models_mind_gcn_GraphConvolution_construct_334 : 0x562976085a40
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✓models_mind_gcn_GraphConvolution_construct_334 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_330]() {
  %1(CNode_337) = $(models_mind_gcn_GraphConvolution_construct_330):getattr(%para7_35688, "value")
      : (<Ref[Tensor[Float32]], (16, 16), ref_key=:35688>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_338) = $(models_mind_gcn_GraphConvolution_construct_330):%1()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_330):call @mm_328(%para48_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_330):call @mm_328(%para49_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  %5(CNode_507) = S_Prim_add(%4, %para5_85931)
      : (<null>, <Ref[Tensor[Float32]], (), ref_key=:85931>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
}
# Order:
#   1: @✓models_mind_gcn_GraphConvolution_construct_334:CNode_507{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: output, [2]: param_85931}
#   2: @✓models_mind_gcn_GraphConvolution_construct_334:CNode_508{[0]: ValueNode<Primitive> Return, [1]: CNode_507}


subgraph attr:
subgraph instance: ✗models_mind_gcn_GraphConvolution_construct_335 : 0x562976084d10
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✗models_mind_gcn_GraphConvolution_construct_335 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_330]() {
  %1(CNode_337) = $(models_mind_gcn_GraphConvolution_construct_330):getattr(%para7_35688, "value")
      : (<Ref[Tensor[Float32]], (16, 16), ref_key=:35688>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_338) = $(models_mind_gcn_GraphConvolution_construct_330):%1()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_330):call @mm_328(%para48_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_330):call @mm_328(%para49_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:63/            return output/
}
# Order:
#   1: @✗models_mind_gcn_GraphConvolution_construct_335:CNode_509{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↻models_mind_gcn_embedding_GCN_construct_343 : 0x56297608f0c0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:422/    def construct(self, x, adj):/
subgraph @↻models_mind_gcn_embedding_GCN_construct_343 parent: [subgraph @↵models_mind_gcn_embedding_GCN_construct_200]() {
  %1(CNode_341) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para50_@CNode_341, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %2(CNode_510) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:422/    def construct(self, x, adj):/
  %3(CNode_511) = $(models_mind_gcn_embedding_GCN_construct_191):MakeTuple(@models_mind_gcn_GraphConvolution_construct_319, @models_mind_gcn_GraphConvolution_construct_330)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:425/            layer = self.emb_gc[i]/
  %4(CNode_202) = $(models_mind_gcn_embedding_GCN_construct_191):S_Prim_make_range(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %5(CNode_513) = call @ms_iter_512(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %6(i) = S_Prim_getitem(%5, %para50_@CNode_341)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  %7(layer) = S_Prim_getitem(%3, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:425/            layer = self.emb_gc[i]/
  %8(CNode_514) = %7(%para51_фx, %para30_adj)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:426/            x = ops.relu(layer(x, adj))/
  %9(x) = call @relu_213(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:426/            x = ops.relu(layer(x, adj))/
  %10(CNode_515) = call @↵models_mind_gcn_embedding_GCN_construct_200(%1, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:131/        H_A2 = self.embedding(ori_features, adj)/
  %11(CNode_516) = Depend[side_effect_propagate: I64(1)](%10, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:423/        for i in range(self.nlayer):/
}
# Order:
#   1: @↻models_mind_gcn_embedding_GCN_construct_343:CNode_513{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_202}
#   2: @↻models_mind_gcn_embedding_GCN_construct_343:i{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_513, [2]: param_@CNode_341}
#   3: @↻models_mind_gcn_embedding_GCN_construct_343:CNode_341{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_341, [2]: ValueNode<Int64Imm> 1}
#   4: @↻models_mind_gcn_embedding_GCN_construct_343:layer{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_511, [2]: i}
#   5: @↻models_mind_gcn_embedding_GCN_construct_343:CNode_514{[0]: layer, [1]: param_фx, [2]: param_adj}
#   6: @↻models_mind_gcn_embedding_GCN_construct_343:x{[0]: ValueNode<FuncGraph> relu_213, [1]: CNode_514}
#   7: @↻models_mind_gcn_embedding_GCN_construct_343:CNode_517{[0]: ValueNode<Primitive> Return, [1]: CNode_516}
#   8: @↻models_mind_gcn_embedding_GCN_construct_343:CNode_515{[0]: ValueNode<FuncGraph> ↵models_mind_gcn_embedding_GCN_construct_200, [1]: CNode_341, [2]: x}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↓models_mind_gcn_embedding_GCN_construct_344 : 0x56297608e160
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:422/    def construct(self, x, adj):/
subgraph @↓models_mind_gcn_embedding_GCN_construct_344 parent: [subgraph @↵models_mind_gcn_embedding_GCN_construct_200]() {
  Return(%para51_фx)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:427/        return x/
}
# Order:
#   1: @↓models_mind_gcn_embedding_GCN_construct_344:CNode_518{[0]: ValueNode<Primitive> Return, [1]: param_фx}


subgraph attr:
subgraph instance: _get_cache_prim_354 : 0x56296f983010
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:35/def _get_cache_prim(cls: Primitive) -> Primitive:/
subgraph @_get_cache_prim_354(%para81_cls) {
  %1(CNode_520) = call @✓_get_cache_prim_519()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:88/    if _is_need_compile(_temp_func): # @jit.cond: True/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:88/    if _is_need_compile(_temp_func): # @jit.cond: True/
}
# Order:
#   1: @_get_cache_prim_354:CNode_520{[0]: ValueNode<FuncGraph> ✓_get_cache_prim_519}
#   2: @_get_cache_prim_354:CNode_521{[0]: ValueNode<Primitive> Return, [1]: CNode_520}


subgraph attr:
subgraph instance: ✓matmul_367 : 0x56296f9059b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✓matmul_367() {
  %1(CNode_522) = raise[side_effect_io: Bool(1)]("TypeError", "For matmul op, inputs must be all tensors.", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9660/        raise TypeError("For matmul op, inputs must be all tensors.")/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9660/        raise TypeError("For matmul op, inputs must be all tensors.")/
}
# Order:
#   1: @✓matmul_367:CNode_522{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: ValueNode<StringImm> For matmul op, inputs must be all tensors., [3]: ValueNode<StringImm> None}
#   2: @✓matmul_367:CNode_523{[0]: ValueNode<Primitive> Return, [1]: CNode_522}


subgraph attr:
subgraph instance: ✗matmul_368 : 0x56296f89ec10
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✗matmul_368 parent: [subgraph @matmul_211]() {
  %1(CNode_525) = call @↓matmul_524()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
}
# Order:
#   1: @✗matmul_368:CNode_525{[0]: ValueNode<FuncGraph> ↓matmul_524}
#   2: @✗matmul_368:CNode_526{[0]: ValueNode<Primitive> Return, [1]: CNode_525}


subgraph attr:
subgraph instance: ↰matmul_361 : 0x562975f1dc80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↰matmul_361 parent: [subgraph @matmul_211]() {
  %1(CNode_527) = S_Prim_isinstance(%para58_other, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
}
# Order:
#   1: @↰matmul_361:CNode_527{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_other, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @↰matmul_361:CNode_528{[0]: ValueNode<Primitive> Return, [1]: CNode_527}


subgraph attr:
subgraph instance: ↱matmul_362 : 0x56296fb16fb0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↱matmul_362 parent: [subgraph @matmul_211]() {
  %1(CNode_358) = $(matmul_211):S_Prim_isinstance(%para57_input, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9659/    if not (isinstance(input, Tensor) and isinstance(other, Tensor)):/
}
# Order:
#   1: @↱matmul_362:CNode_529{[0]: ValueNode<Primitive> Return, [1]: CNode_358}


subgraph attr:
subgraph instance: clip_by_value_371 : 0x562975fc1340
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @clip_by_value_371(%para82_x, %para83_clip_value_min, %para84_clip_value_max) {
  %1(CNode_530) = S_Prim_is_(%para83_clip_value_min, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %2(CNode_531) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %3(CNode_532) = Switch(%2, @↰clip_by_value_533, @↱clip_by_value_534)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %4(CNode_535) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %5(CNode_536) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %6(CNode_537) = Switch(%5, @✓clip_by_value_538, @✗clip_by_value_539)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  %7(CNode_540) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
}
# Order:
#   1: @clip_by_value_371:CNode_530{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_clip_value_min, [2]: ValueNode<None> None}
#   2: @clip_by_value_371:CNode_531{[0]: ValueNode<Primitive> Cond, [1]: CNode_530, [2]: ValueNode<BoolImm> false}
#   3: @clip_by_value_371:CNode_532{[0]: ValueNode<Primitive> Switch, [1]: CNode_531, [2]: ValueNode<FuncGraph> ↰clip_by_value_533, [3]: ValueNode<FuncGraph> ↱clip_by_value_534}
#   4: @clip_by_value_371:CNode_535{[0]: CNode_532}
#   5: @clip_by_value_371:CNode_536{[0]: ValueNode<Primitive> Cond, [1]: CNode_535, [2]: ValueNode<BoolImm> false}
#   6: @clip_by_value_371:CNode_537{[0]: ValueNode<Primitive> Switch, [1]: CNode_536, [2]: ValueNode<FuncGraph> ✓clip_by_value_538, [3]: ValueNode<FuncGraph> ✗clip_by_value_539}
#   7: @clip_by_value_371:CNode_540{[0]: CNode_537}
#   8: @clip_by_value_371:CNode_541{[0]: ValueNode<Primitive> Return, [1]: CNode_540}


subgraph attr:
subgraph instance: ✓randn_like_378 : 0x562976012360
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✓randn_like_378 parent: [subgraph @randn_like_226]() {
  %1(CNode_542) = S_Prim_MakeTuple("input")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
  %2(CNode_543) = S_Prim_MakeTuple(%para62_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
  %3(CNode_544) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
  %4(CNode_545) = PyInterpret[side_effect_io: Bool(1)](Script['f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}"'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
  %5(CNode_546) = raise[side_effect_io: Bool(1)]("TypeError", %4, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1062/        raise TypeError(f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}")/
}
# Order:
#   1: @✓randn_like_378:CNode_542{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> input}
#   2: @✓randn_like_378:CNode_543{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_input}
#   3: @✓randn_like_378:CNode_544{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_542, [2]: CNode_543}
#   4: @✓randn_like_378:CNode_545{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'f"For 'randn_like', the 'input' must be a Tensor, but got {type(input)}"', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'isinstance': <built-in function isinstance>, 'Tensor': <class 'mindspore.common.tensor.Tensor'>, 'type': <class 'type'>}), [3]: CNode_544}
#   5: @✓randn_like_378:CNode_546{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: CNode_545, [3]: ValueNode<StringImm> None}
#   6: @✓randn_like_378:CNode_547{[0]: ValueNode<Primitive> Return, [1]: CNode_546}


subgraph attr:
subgraph instance: ✗randn_like_379 : 0x562976005d00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✗randn_like_379 parent: [subgraph @randn_like_226]() {
  %1(CNode_549) = call @↓randn_like_548()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1061/    if not isinstance(input, Tensor):/
}
# Order:
#   1: @✗randn_like_379:CNode_549{[0]: ValueNode<FuncGraph> ↓randn_like_548}
#   2: @✗randn_like_379:CNode_550{[0]: ValueNode<Primitive> Return, [1]: CNode_549}


subgraph attr:
subgraph instance: ones_like_382 : 0x56296fbecd80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:967/def ones_like(input, *, dtype=None):/
subgraph @ones_like_382(%para85_input, %para86_dtype) {
  %1(CNode_551) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:996/    ones_like_op = _get_cache_prim(P.OnesLike)()/
  %2(ones_like_op) = %1()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:996/    ones_like_op = _get_cache_prim(P.OnesLike)()/
  %3(output) = %2(%para85_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:997/    output = ones_like_op(input)/
  %4(CNode_552) = S_Prim_is_(%para86_dtype, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
  %5(CNode_553) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
  %6(CNode_554) = Switch(%5, @↰ones_like_555, @↱ones_like_556)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
  %7(_dtype) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
  %8(output) = S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]](%3, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:999/    output = cast_(output, _dtype)/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1000/    return output/
}
# Order:
#   1: @ones_like_382:CNode_551{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.OnesLike'}
#   2: @ones_like_382:ones_like_op{[0]: CNode_551}
#   3: @ones_like_382:output{[0]: ones_like_op, [1]: param_input}
#   4: @ones_like_382:CNode_552{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_dtype, [2]: ValueNode<None> None}
#   5: @ones_like_382:CNode_553{[0]: ValueNode<Primitive> Cond, [1]: CNode_552, [2]: ValueNode<BoolImm> false}
#   6: @ones_like_382:CNode_554{[0]: ValueNode<Primitive> Switch, [1]: CNode_553, [2]: ValueNode<FuncGraph> ↰ones_like_555, [3]: ValueNode<FuncGraph> ↱ones_like_556}
#   7: @ones_like_382:_dtype{[0]: CNode_554}
#   8: @ones_like_382:output{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Cast, [1]: output, [2]: _dtype}
#   9: @ones_like_382:CNode_557{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
after_block : 1
subgraph instance: ↓get_modified_adj_388 : 0x562975fb25d0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:405/    def get_modified_adj(self, ori_adj):/
subgraph @↓get_modified_adj_388 parent: [subgraph @get_modified_adj_189]() {
  %1(CNode_558) = getattr(InterpretedObject, "complementary")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:418/        modified_adj = self.complementary * m + ori_adj/
  %2(CNode_559) = S_Prim_MakeTuple(I64(2708), I64(2708))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  %3(m) = call @zeros_560(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  %4(CNode_561) = S_Prim_MakeTuple("row", "col", "offset")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:413/        tril_indices = ops.tril_indices(/
  %5(CNode_562) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:414/            row=self.nnodes, col=self.nnodes, offset=-1)/
  %6(CNode_563) = S_Prim_MakeTuple(I64(2708), I64(2708), %5)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:413/        tril_indices = ops.tril_indices(/
  %7(CNode_564) = S_Prim_make_dict(%4, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:413/        tril_indices = ops.tril_indices(/
  %8(tril_indices) = UnpackCall_unpack_call(@tril_indices_218, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:413/        tril_indices = ops.tril_indices(/
  %9(CNode_565) = S_Prim_getitem(%8, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:415/        m[tril_indices[0], tril_indices[1]] = self.adj_changes/
  %10(CNode_566) = S_Prim_getitem(%8, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:415/        m[tril_indices[0], tril_indices[1]] = self.adj_changes/
  %11(CNode_567) = S_Prim_MakeTuple(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:415/        m[tril_indices[0], tril_indices[1]] = self.adj_changes/
  %12(CNode_568) = S_Prim_setitem(%3, %11, %para3_Parameter$1)
      : (<null>, <null>, <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:415/        m[tril_indices[0], tril_indices[1]] = self.adj_changes/
  %13(CNode_569) = getattr(%12, "t")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:416/        m = m + m.t()/
  %14(CNode_570) = %13()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:416/        m = m + m.t()/
  %15(m) = S_Prim_add(%12, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:416/        m = m + m.t()/
  %16(CNode_571) = S_Prim_mul(%1, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:418/        modified_adj = self.complementary * m + ori_adj/
  %17(modified_adj) = S_Prim_add(%16, %para34_ori_adj)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:418/        modified_adj = self.complementary * m + ori_adj/
  Return(%17)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:420/        return modified_adj/
}
# Order:
#   1: @↓get_modified_adj_388:CNode_559{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 2708, [2]: ValueNode<Int64Imm> 2708}
#   2: @↓get_modified_adj_388:m{[0]: ValueNode<FuncGraph> zeros_560, [1]: CNode_559}
#   3: @↓get_modified_adj_388:CNode_562{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   4: @↓get_modified_adj_388:CNode_561{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> row, [2]: ValueNode<StringImm> col, [3]: ValueNode<StringImm> offset}
#   5: @↓get_modified_adj_388:CNode_563{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 2708, [2]: ValueNode<Int64Imm> 2708, [3]: CNode_562}
#   6: @↓get_modified_adj_388:CNode_564{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_561, [2]: CNode_563}
#   7: @↓get_modified_adj_388:tril_indices{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.572, [1]: ValueNode<FuncGraph> tril_indices_218, [2]: CNode_564}
#   8: @↓get_modified_adj_388:CNode_565{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 0}
#   9: @↓get_modified_adj_388:CNode_566{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 1}
#  10: @↓get_modified_adj_388:CNode_567{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_565, [2]: CNode_566}
#  11: @↓get_modified_adj_388:CNode_568{[0]: ValueNode<DoSignaturePrimitive> S_Prim_setitem, [1]: m, [2]: CNode_567, [3]: param_Parameter$1}
#  12: @↓get_modified_adj_388:CNode_569{[0]: ValueNode<Primitive> getattr, [1]: CNode_568, [2]: ValueNode<StringImm> t}
#  13: @↓get_modified_adj_388:CNode_570{[0]: CNode_569}
#  14: @↓get_modified_adj_388:m{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: CNode_568, [2]: CNode_570}
#  15: @↓get_modified_adj_388:CNode_558{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> complementary}
#  16: @↓get_modified_adj_388:CNode_571{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_558, [2]: m}
#  17: @↓get_modified_adj_388:modified_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: CNode_571, [2]: param_ori_adj}
#  18: @↓get_modified_adj_388:CNode_573{[0]: ValueNode<Primitive> Return, [1]: modified_adj}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓set_train_396 : 0x56297601eff0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
subgraph @↓set_train_396 parent: [subgraph @set_train_186]() {
  %1(CNode_122) = S_Prim_MakeTuple("training")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %2(CNode_123) = S_Prim_MakeTuple(%para37_mode)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %3(CNode_124) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %4(CNode_125) = UnpackCall_unpack_call(@add_flags_recursive_574, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %5(CNode_127) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1848/    def set_train(self, mode=True):/
  %6(CNode_128) = Depend[side_effect_propagate: I64(1)](ClassMember, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1875/        return self/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1875/        return self/
}
# Order:
#   1: @↓set_train_396:CNode_122{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> training}
#   2: @↓set_train_396:CNode_123{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_mode}
#   3: @↓set_train_396:CNode_124{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_122, [2]: CNode_123}
#   4: @↓set_train_396:CNode_125{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.129, [1]: ValueNode<FuncGraph> add_flags_recursive_574, [2]: CNode_124}
#   5: @↓set_train_396:CNode_130{[0]: ValueNode<Primitive> Return, [1]: CNode_128}


subgraph attr:
subgraph instance: ✓enumerate__404 : 0x56296f7ff360
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @✓enumerate__404 parent: [subgraph @enumerate__256]() {
  %1(CNode_575) = S_Prim_MakeTuple("x")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
  %2(CNode_576) = S_Prim_MakeTuple(%para65_x)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
  %3(CNode_577) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
  %4(CNode_578) = PyInterpret[side_effect_io: Bool(1)](Script['f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}."'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
  %5(CNode_579) = raise[side_effect_io: Bool(1)]("TypeError", %4, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2833/        raise TypeError(f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}.")/
}
# Order:
#   1: @✓enumerate__404:CNode_575{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> x}
#   2: @✓enumerate__404:CNode_576{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_x}
#   3: @✓enumerate__404:CNode_577{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_575, [2]: CNode_576}
#   4: @✓enumerate__404:CNode_578{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'f"For 'enumerate', the 'first input' should be tuple or list or tensor, but got {type(x)}."', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'F': <module 'mindspore.ops.functional' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/ops/functional.py'>, 'isinstance': <built-in function isinstance>, 'int': <class 'int'>, 'float': <class 'float'>, 'bool': <class 'bool'>, 'type': <class 'type'>}), [3]: CNode_577}
#   5: @✓enumerate__404:CNode_579{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: CNode_578, [3]: ValueNode<StringImm> None}
#   6: @✓enumerate__404:CNode_580{[0]: ValueNode<Primitive> Return, [1]: CNode_579}


subgraph attr:
subgraph instance: ✗enumerate__405 : 0x56296f56aea0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @✗enumerate__405 parent: [subgraph @enumerate__256]() {
  %1(CNode_582) = call @↓enumerate__581()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2832/    if isinstance(x, (int, float, bool)):/
}
# Order:
#   1: @✗enumerate__405:CNode_582{[0]: ValueNode<FuncGraph> ↓enumerate__581}
#   2: @✗enumerate__405:CNode_583{[0]: ValueNode<Primitive> Return, [1]: CNode_582}


subgraph attr:
training : 0
subgraph instance: ✓models_mind_gcn_GraphConvolution_construct_412 : 0x56296faf3490
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✓models_mind_gcn_GraphConvolution_construct_412 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_408]() {
  %1(CNode_415) = $(models_mind_gcn_GraphConvolution_construct_408):getattr(%para10_gc1.weight, "value")
      : (<Ref[Tensor[Float32]], (1433, 16), ref_key=:gc1.weight>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_416) = $(models_mind_gcn_GraphConvolution_construct_408):%1()
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_408):call @mm_328(%para67_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_408):call @mm_328(%para68_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  %5(CNode_584) = S_Prim_add(%4, %para8_gc1.bias)
      : (<null>, <Ref[Tensor[Float32]], (), ref_key=:gc1.bias>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
  Return(%5)
      : (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
}
# Order:
#   1: @✓models_mind_gcn_GraphConvolution_construct_412:CNode_584{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: output, [2]: param_gc1.bias}
#   2: @✓models_mind_gcn_GraphConvolution_construct_412:CNode_585{[0]: ValueNode<Primitive> Return, [1]: CNode_584}


subgraph attr:
training : 0
subgraph instance: ✗models_mind_gcn_GraphConvolution_construct_413 : 0x56296f872bc0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✗models_mind_gcn_GraphConvolution_construct_413 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_408]() {
  %1(CNode_415) = $(models_mind_gcn_GraphConvolution_construct_408):getattr(%para10_gc1.weight, "value")
      : (<Ref[Tensor[Float32]], (1433, 16), ref_key=:gc1.weight>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_416) = $(models_mind_gcn_GraphConvolution_construct_408):%1()
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_408):call @mm_328(%para67_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_408):call @mm_328(%para68_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  Return(%4)
      : (<null>)
      #scope: (Default/gc1-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:63/            return output/
}
# Order:
#   1: @✗models_mind_gcn_GraphConvolution_construct_413:CNode_586{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
training : 0
subgraph instance: ✓models_mind_gcn_GraphConvolution_construct_422 : 0x56296fb67da0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✓models_mind_gcn_GraphConvolution_construct_422 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_418]() {
  %1(CNode_425) = $(models_mind_gcn_GraphConvolution_construct_418):getattr(%para11_gc2.weight, "value")
      : (<Ref[Tensor[Float32]], (16, 16), ref_key=:gc2.weight>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_426) = $(models_mind_gcn_GraphConvolution_construct_418):%1()
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_418):call @mm_328(%para69_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_418):call @mm_328(%para70_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  %5(CNode_587) = S_Prim_add(%4, %para9_gc2.bias)
      : (<null>, <Ref[Tensor[Float32]], (), ref_key=:gc2.bias>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
  Return(%5)
      : (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:61/            return output + self.bias/
}
# Order:
#   1: @✓models_mind_gcn_GraphConvolution_construct_422:CNode_587{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: output, [2]: param_gc2.bias}
#   2: @✓models_mind_gcn_GraphConvolution_construct_422:CNode_588{[0]: ValueNode<Primitive> Return, [1]: CNode_587}


subgraph attr:
training : 0
subgraph instance: ✗models_mind_gcn_GraphConvolution_construct_423 : 0x56296f98ccf0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:51/    def construct(self, input, adj):/
subgraph @✗models_mind_gcn_GraphConvolution_construct_423 parent: [subgraph @models_mind_gcn_GraphConvolution_construct_418]() {
  %1(CNode_425) = $(models_mind_gcn_GraphConvolution_construct_418):getattr(%para11_gc2.weight, "value")
      : (<Ref[Tensor[Float32]], (16, 16), ref_key=:gc2.weight>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %2(CNode_426) = $(models_mind_gcn_GraphConvolution_construct_418):%1()
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %3(support) = $(models_mind_gcn_GraphConvolution_construct_418):call @mm_328(%para69_input, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:58/        support = ops.mm(input, self.weight.value())/
  %4(output) = $(models_mind_gcn_GraphConvolution_construct_418):call @mm_328(%para70_adj, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:59/        output = ops.mm(adj, support)/
  Return(%4)
      : (<null>)
      #scope: (Default/gc2-GraphConvolution)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:63/            return output/
}
# Order:
#   1: @✗models_mind_gcn_GraphConvolution_construct_423:CNode_589{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↻models_mind_gcn_GCN_construct_431 : 0x562975f31ad0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @↻models_mind_gcn_GCN_construct_431 parent: [subgraph @↵models_mind_gcn_GCN_construct_253]() {
  %1(CNode_429) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para71_@CNode_429, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_590) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
  %3(CNode_592) = call @✓↻models_mind_gcn_GCN_construct_591()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:156/            if self.with_relu:/
  %4(CNode_593) = Depend[side_effect_propagate: I64(1)](%3, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:156/            if self.with_relu:/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:156/            if self.with_relu:/
}
# Order:
#   1: @↻models_mind_gcn_GCN_construct_431:CNode_594{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_255}
#   2: @↻models_mind_gcn_GCN_construct_431:CNode_595{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_594, [2]: param_@CNode_429}
#   3: @↻models_mind_gcn_GCN_construct_431:i{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_595, [2]: ValueNode<Int64Imm> 0}
#   4: @↻models_mind_gcn_GCN_construct_431:layer{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_595, [2]: ValueNode<Int64Imm> 1}
#   5: @↻models_mind_gcn_GCN_construct_431:CNode_429{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_429, [2]: ValueNode<Int64Imm> 1}
#   6: @↻models_mind_gcn_GCN_construct_431:CNode_592{[0]: ValueNode<FuncGraph> ✓↻models_mind_gcn_GCN_construct_591}
#   7: @↻models_mind_gcn_GCN_construct_431:CNode_596{[0]: ValueNode<Primitive> Return, [1]: CNode_593}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↓models_mind_gcn_GCN_construct_432 : 0x56296f7ddd10
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @↓models_mind_gcn_GCN_construct_432 parent: [subgraph @↵models_mind_gcn_GCN_construct_253]() {
  %1(x) = call @mindspore_nn_layer_basic_Dense_construct_597(%para72_фx)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:164/        x = self.linear1(x)/
  %2(CNode_598) = S_Prim_MakeTuple(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
  %3(CNode_599) = S_Prim_MakeTuple("axis")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
  %4(CNode_600) = S_Prim_MakeTuple(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
  %5(CNode_601) = S_Prim_make_dict(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
  %6(CNode_602) = UnpackCall_unpack_call(@log_softmax_603, %2, %5)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:165/        return ops.log_softmax(x, axis=1)/
}
# Order:
#   1: @↓models_mind_gcn_GCN_construct_432:x{[0]: ValueNode<FuncGraph> mindspore_nn_layer_basic_Dense_construct_597, [1]: param_фx}
#   2: @↓models_mind_gcn_GCN_construct_432:CNode_598{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: x}
#   3: @↓models_mind_gcn_GCN_construct_432:CNode_599{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> axis}
#   4: @↓models_mind_gcn_GCN_construct_432:CNode_600{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 1}
#   5: @↓models_mind_gcn_GCN_construct_432:CNode_601{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_599, [2]: CNode_600}
#   6: @↓models_mind_gcn_GCN_construct_432:CNode_602{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.604, [1]: ValueNode<FuncGraph> log_softmax_603, [2]: CNode_598, [3]: CNode_601}
#   7: @↓models_mind_gcn_GCN_construct_432:CNode_605{[0]: ValueNode<Primitive> Return, [1]: CNode_602}


subgraph attr:
after_block : 1
subgraph instance: ↓get_modified_adj_after_440 : 0x56296fb2e030
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:422/    def get_modified_adj_after(self, ori_adj):/
subgraph @↓get_modified_adj_after_440 parent: [subgraph @get_modified_adj_after_199]() {
  %1(CNode_606) = getattr(InterpretedObject, "complementary_after")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:434/        modified_adj = self.complementary_after * m + ori_adj/
  %2(CNode_607) = S_Prim_MakeTuple(I64(2708), I64(2708))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:428/        m = ops.zeros((self.nnodes, self.nnodes))#.to(self.device)/
  %3(m) = call @zeros_560(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:428/        m = ops.zeros((self.nnodes, self.nnodes))#.to(self.device)/
  %4(CNode_608) = S_Prim_MakeTuple("row", "col", "offset")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:429/        tril_indices = ops.tril_indices(/
  %5(CNode_609) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:430/            row=self.nnodes, col=self.nnodes, offset=-1)/
  %6(CNode_610) = S_Prim_MakeTuple(I64(2708), I64(2708), %5)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:429/        tril_indices = ops.tril_indices(/
  %7(CNode_611) = S_Prim_make_dict(%4, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:429/        tril_indices = ops.tril_indices(/
  %8(tril_indices) = UnpackCall_unpack_call(@tril_indices_218, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:429/        tril_indices = ops.tril_indices(/
  %9(CNode_612) = S_Prim_getitem(%8, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %10(CNode_613) = S_Prim_getitem(%8, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %11(CNode_614) = S_Prim_MakeTuple(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %12(CNode_269) = $(get_modified_adj_after_199):make_dict(("__py_exec_index0_PythonObject_0x28_type_0x3a_0x20_0x3c_class_0x20_0x27_torch_0x2e_Tensor_0x27_0x3e_0x2c_0x20_value_0x3a_0x20_tensor_0x28_0x5b_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0x20_0x2e_0x2e_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x5d_0x2c_0x20_requires_0x5f_grad_0x3d_True_0x29_0x29__"), ("__py_exec_index0_PythonObject_0x28_type_0x3a_0x20_0x3c_class_0x20_0x27_torch_0x2e_Tensor_0x27_0x3e_0x2c_0x20_value_0x3a_0x20_tensor_0x28_0x5b_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0x20_0x2e_0x2e_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x5d_0x2c_0x20_requires_0x5f_grad_0x3d_True_0x29_0x29__"))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %13(CNode_268) = $(get_modified_adj_after_199):PyInterpret[side_effect_io: Bool(1)](Script['__import__('mindspore').common._jit_fallback_utils.get_local_variable(__py_exec_index0_PythonObject_0x28_type_0x3a_0x20_0x3c_class_0x20_0x27_torch_0x2e_Tensor_0x27_0x3e_0x2c_0x20_value_0x3a_0x20_tensor_0x28_0x5b_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0x20_0x2e_0x2e_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x2c_0x20_0_0x2e_0x5d_0x2c_0x20_requires_0x5f_grad_0x3d_True_0x29_0x29__)'], InterpretedObject, %12)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %14(CNode_615) = S_Prim_setitem(%3, %11, %13)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:431/        m[tril_indices[0], tril_indices[1]] = self.adj_changes_after/
  %15(CNode_616) = getattr(%14, "t")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:432/        m = m + m.t()/
  %16(CNode_617) = %15()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:432/        m = m + m.t()/
  %17(m) = S_Prim_add(%14, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:432/        m = m + m.t()/
  %18(CNode_618) = S_Prim_mul(%1, %17)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:434/        modified_adj = self.complementary_after * m + ori_adj/
  %19(modified_adj) = S_Prim_add(%18, %para40_ori_adj)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:434/        modified_adj = self.complementary_after * m + ori_adj/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:436/        return modified_adj/
}
# Order:
#   1: @↓get_modified_adj_after_440:CNode_607{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 2708, [2]: ValueNode<Int64Imm> 2708}
#   2: @↓get_modified_adj_after_440:m{[0]: ValueNode<FuncGraph> zeros_560, [1]: CNode_607}
#   3: @↓get_modified_adj_after_440:CNode_609{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   4: @↓get_modified_adj_after_440:CNode_608{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> row, [2]: ValueNode<StringImm> col, [3]: ValueNode<StringImm> offset}
#   5: @↓get_modified_adj_after_440:CNode_610{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<Int64Imm> 2708, [2]: ValueNode<Int64Imm> 2708, [3]: CNode_609}
#   6: @↓get_modified_adj_after_440:CNode_611{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_608, [2]: CNode_610}
#   7: @↓get_modified_adj_after_440:tril_indices{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.619, [1]: ValueNode<FuncGraph> tril_indices_218, [2]: CNode_611}
#   8: @↓get_modified_adj_after_440:CNode_612{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 0}
#   9: @↓get_modified_adj_after_440:CNode_613{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: tril_indices, [2]: ValueNode<Int64Imm> 1}
#  10: @↓get_modified_adj_after_440:CNode_614{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_612, [2]: CNode_613}
#  11: @↓get_modified_adj_after_440:CNode_615{[0]: ValueNode<DoSignaturePrimitive> S_Prim_setitem, [1]: m, [2]: CNode_614, [3]: CNode_268}
#  12: @↓get_modified_adj_after_440:CNode_616{[0]: ValueNode<Primitive> getattr, [1]: CNode_615, [2]: ValueNode<StringImm> t}
#  13: @↓get_modified_adj_after_440:CNode_617{[0]: CNode_616}
#  14: @↓get_modified_adj_after_440:m{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: CNode_615, [2]: CNode_617}
#  15: @↓get_modified_adj_after_440:CNode_606{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'topology_attack.PGDAttack'>, value: PGDAttack()), [2]: ValueNode<StringImm> complementary_after}
#  16: @↓get_modified_adj_after_440:CNode_618{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_606, [2]: m}
#  17: @↓get_modified_adj_after_440:modified_adj{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: CNode_618, [2]: param_ori_adj}
#  18: @↓get_modified_adj_after_440:CNode_620{[0]: ValueNode<Primitive> Return, [1]: modified_adj}


subgraph attr:
after_block : 1
subgraph instance: ↓eye_456 : 0x562975eb6b40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @↓eye_456 parent: [subgraph @eye_273](%para87_) {
  %1(CNode_621) = S_Prim_is_(%para77_dtype, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
  %2(CNode_622) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
  %3(CNode_623) = Switch(%2, @✓↓eye_624, @✗↓eye_625)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
  %4(CNode_626) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
  %5(CNode_628) = call @2↓eye_627(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:410/                ori_adj) - ops.eye(self.nnodes)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
}
# Order:
#   1: @↓eye_456:CNode_621{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_dtype, [2]: ValueNode<None> None}
#   2: @↓eye_456:CNode_622{[0]: ValueNode<Primitive> Cond, [1]: CNode_621, [2]: ValueNode<BoolImm> false}
#   3: @↓eye_456:CNode_623{[0]: ValueNode<Primitive> Switch, [1]: CNode_622, [2]: ValueNode<FuncGraph> ✓↓eye_624, [3]: ValueNode<FuncGraph> ✗↓eye_625}
#   4: @↓eye_456:CNode_626{[0]: CNode_623}
#   5: @↓eye_456:CNode_628{[0]: ValueNode<FuncGraph> 2↓eye_627, [1]: CNode_626}
#   6: @↓eye_456:CNode_629{[0]: ValueNode<Primitive> Return, [1]: CNode_628}


subgraph attr:
subgraph instance: ✓eye_453 : 0x56296f95a1e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @✓eye_453 parent: [subgraph @eye_273]() {
  Return(%para75_m)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:358/        m = n/
}
# Order:
#   1: @✓eye_453:CNode_630{[0]: ValueNode<Primitive> Return, [1]: param_m}


subgraph attr:
subgraph instance: ✗eye_454 : 0x562975edc120
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @✗eye_454 parent: [subgraph @eye_273]() {
  Return(%para76_m)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:357/    if m is None:/
}
# Order:
#   1: @✗eye_454:CNode_631{[0]: ValueNode<Primitive> Return, [1]: param_m}


subgraph attr:
after_block : 1
subgraph instance: ↓_loss_462 : 0x562975f8d190
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:365/    def _loss(self, output, labels):/
subgraph @↓_loss_462(%para88_) {
  Return(%para88_фloss)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:376/        return loss/
}
# Order:
#   1: @↓_loss_462:CNode_632{[0]: ValueNode<Primitive> Return, [1]: param_фloss}


subgraph attr:
subgraph instance: 2✓↓forward_fn_471 : 0x562976147990
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✓↓forward_fn_471 parent: [subgraph @✓↓forward_fn_304]() {
  %1(CNode_633) = S_Prim_MakeTuple("c1", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:167/                loss += c1[0]/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w1) = $(forward_fn_63):S_Prim_getitem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(feature_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(3))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_80) = $(forward_fn_63):getattr(%7, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(modified_adj) = $(forward_fn_63):call @adding_noise_190(%6, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %11(CNode_474) = $(✓↓forward_fn_304):%para45_фcalc(%4, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %12(CNode_475) = $(✓↓forward_fn_304):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %13(CNode_476) = $(✓↓forward_fn_304):S_Prim_mul(%12, I64(1000))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %14(CNode_477) = $(✓↓forward_fn_304):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c1")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:165/                Align_Parameter_Cora["c1"]/
  %15(c1) = $(✓↓forward_fn_304):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %16(CNode_106) = $(forward_fn_63):S_Prim_MakeTuple("weight_supervised", "origin_loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %17(weight_supervised) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(CNode_102) = $(forward_fn_63):S_Prim_MakeTuple("idx_attack", "self.adj_changes", "self._loss", "label", "output", "self")
      : (<null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %19(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %20(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %21(output) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%20, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  %22(CNode_103) = $(forward_fn_63):S_Prim_MakeTuple(%19, %para3_Parameter$1, @_loss_198, %para28_label, %21, InterpretedObject)
      : (<null>, <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %23(CNode_105) = $(forward_fn_63):S_Prim_make_dict(%18, %22)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %24(origin_loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001'], InterpretedObject, %23)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %25(CNode_107) = $(forward_fn_63):S_Prim_MakeTuple(%17, %24)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %26(CNode_108) = $(forward_fn_63):S_Prim_make_dict(%16, %25)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %27(loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['weight_supervised*origin_loss'], InterpretedObject, %26)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %28(CNode_634) = S_Prim_MakeTuple(%15, %27)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:167/                loss += c1[0]/
  %29(CNode_635) = S_Prim_make_dict(%1, %28)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:167/                loss += c1[0]/
  %30(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c1[0]'], InterpretedObject, %29)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:167/                loss += c1[0]/
  %31(CNode_637) = call @↓✓↓forward_fn_636(%30)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%31)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:167/                loss += c1[0]/
}
# Order:
#   1: @2✓↓forward_fn_471:CNode_633{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c1, [2]: ValueNode<StringImm> loss}
#   2: @2✓↓forward_fn_471:CNode_634{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c1, [2]: loss}
#   3: @2✓↓forward_fn_471:CNode_635{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_633, [2]: CNode_634}
#   4: @2✓↓forward_fn_471:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c1[0]', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_635}
#   5: @2✓↓forward_fn_471:CNode_638{[0]: ValueNode<Primitive> Return, [1]: CNode_637}
#   6: @2✓↓forward_fn_471:CNode_637{[0]: ValueNode<FuncGraph> ↓✓↓forward_fn_636, [1]: loss}


subgraph attr:
subgraph instance: ✗✓↓forward_fn_472 : 0x56297612f060
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗✓↓forward_fn_472 parent: [subgraph @✓↓forward_fn_304]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_639) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
  %3(CNode_640) = S_Prim_equal(%2, "HSIC")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
  %4(CNode_641) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
  %5(CNode_642) = Switch(%4, @✓✗✓↓forward_fn_643, @2✗✓↓forward_fn_644)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
  %6(CNode_645) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
}
# Order:
#   1: @✗✓↓forward_fn_472:CNode_639{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✗✓↓forward_fn_472:CNode_640{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_639, [2]: ValueNode<StringImm> HSIC}
#   3: @✗✓↓forward_fn_472:CNode_641{[0]: ValueNode<Primitive> Cond, [1]: CNode_640, [2]: ValueNode<BoolImm> false}
#   4: @✗✓↓forward_fn_472:CNode_642{[0]: ValueNode<Primitive> Switch, [1]: CNode_641, [2]: ValueNode<FuncGraph> ✓✗✓↓forward_fn_643, [3]: ValueNode<FuncGraph> 2✗✓↓forward_fn_644}
#   5: @✗✓↓forward_fn_472:CNode_645{[0]: CNode_642}
#   6: @✗✓↓forward_fn_472:CNode_646{[0]: ValueNode<Primitive> Return, [1]: CNode_645}


subgraph attr:
after_block : 1
subgraph instance: 2↓forward_fn_479 : 0x5629760adf30
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2↓forward_fn_479 parent: [subgraph @↓forward_fn_195](%para89_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w2) = $(forward_fn_63):S_Prim_getitem(%1, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_647) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
  %4(CNode_648) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
  %5(CNode_649) = Switch(%4, @✓2↓forward_fn_650, @✗2↓forward_fn_651)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
  %6(CNode_652) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
  %7(CNode_654) = call @3↓forward_fn_653(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
}
# Order:
#   1: @2↓forward_fn_479:CNode_647{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w2, [2]: ValueNode<Int64Imm> 0}
#   2: @2↓forward_fn_479:CNode_648{[0]: ValueNode<Primitive> Cond, [1]: CNode_647, [2]: ValueNode<BoolImm> false}
#   3: @2↓forward_fn_479:CNode_649{[0]: ValueNode<Primitive> Switch, [1]: CNode_648, [2]: ValueNode<FuncGraph> ✓2↓forward_fn_650, [3]: ValueNode<FuncGraph> ✗2↓forward_fn_651}
#   4: @2↓forward_fn_479:CNode_652{[0]: CNode_649}
#   5: @2↓forward_fn_479:CNode_654{[0]: ValueNode<FuncGraph> 3↓forward_fn_653, [1]: CNode_652}
#   6: @2↓forward_fn_479:CNode_655{[0]: ValueNode<Primitive> Return, [1]: CNode_654}


subgraph attr:
subgraph instance: calc_kl_490 : 0x56297609c810
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:525/    def calc_kl(self, X, Y):/
subgraph @calc_kl_490(%para90_X, %para91_Y) {
  %1(CNode_656) = S_Prim_MakeTuple("reduction")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:528/        kl = KLDivLoss(reduction="batchmean")/
  %2(CNode_657) = S_Prim_MakeTuple("batchmean")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:528/        kl = KLDivLoss(reduction="batchmean")/
  %3(CNode_658) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:528/        kl = KLDivLoss(reduction="batchmean")/
  %4(kl) = UnpackCall_unpack_call(ClassType, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:528/        kl = KLDivLoss(reduction="batchmean")/
  %5(CNode_659) = S_Prim_MakeTuple("Y")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:527/        Y = F.log_softmax(Y)/
  %6(CNode_660) = S_Prim_MakeTuple(%para91_Y)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:527/        Y = F.log_softmax(Y)/
  %7(CNode_661) = S_Prim_make_dict(%5, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:527/        Y = F.log_softmax(Y)/
  %8(Y) = PyInterpret[side_effect_io: Bool(1)](Script['F.log_softmax(Y)'], InterpretedObject, %7)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:527/        Y = F.log_softmax(Y)/
  %9(CNode_662) = S_Prim_MakeTuple("X")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:526/        X = F.softmax(X)/
  %10(CNode_663) = S_Prim_MakeTuple(%para90_X)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:526/        X = F.softmax(X)/
  %11(CNode_664) = S_Prim_make_dict(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:526/        X = F.softmax(X)/
  %12(X) = PyInterpret[side_effect_io: Bool(1)](Script['F.softmax(X)'], InterpretedObject, %11)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:526/        X = F.softmax(X)/
  %13(CNode_665) = %4(%8, %12)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:529/        return kl(Y, X)/
  Return(%13)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:529/        return kl(Y, X)/
}
# Order:
#   1: @calc_kl_490:CNode_662{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> X}
#   2: @calc_kl_490:CNode_663{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_X}
#   3: @calc_kl_490:CNode_664{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_662, [2]: CNode_663}
#   4: @calc_kl_490:X{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'F.softmax(X)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'F': <module 'torch.nn.functional' from '/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py'>}), [3]: CNode_664}
#   5: @calc_kl_490:CNode_659{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> Y}
#   6: @calc_kl_490:CNode_660{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_Y}
#   7: @calc_kl_490:CNode_661{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_659, [2]: CNode_660}
#   8: @calc_kl_490:Y{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'F.log_softmax(Y)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'F': <module 'torch.nn.functional' from '/root/miniconda3/lib/python3.8/site-packages/torch/nn/functional.py'>}), [3]: CNode_661}
#   9: @calc_kl_490:CNode_656{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> reduction}
#  10: @calc_kl_490:CNode_657{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> batchmean}
#  11: @calc_kl_490:CNode_658{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_656, [2]: CNode_657}
#  12: @calc_kl_490:kl{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.666, [1]: ValueNode<ClassType> class 'torch.nn.modules.loss.KLDivLoss', [2]: CNode_658}
#  13: @calc_kl_490:CNode_665{[0]: kl, [1]: Y, [2]: X}
#  14: @calc_kl_490:CNode_667{[0]: ValueNode<Primitive> Return, [1]: CNode_665}


subgraph attr:
after_block : 1
subgraph instance: ↓2✗forward_fn_499 : 0x56297609a710
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓2✗forward_fn_499(%para92_) {
  Return(%para92_фcalc)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
}
# Order:
#   1: @↓2✗forward_fn_499:CNode_668{[0]: ValueNode<Primitive> Return, [1]: param_фcalc}


subgraph attr:
subgraph instance: ✓2✗forward_fn_496 : 0x5629760978a0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓2✗forward_fn_496() {
  Return(@dot_product_669)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:159/            calc = self.dot_product/
}
# Order:
#   1: @✓2✗forward_fn_496:CNode_670{[0]: ValueNode<Primitive> Return, [1]: ValueNode<FuncGraph> dot_product_669}


subgraph attr:
subgraph instance: 3✗forward_fn_497 : 0x562976096a90
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @3✗forward_fn_497 parent: [subgraph @forward_fn_63]() {
  %1(calc) = $(forward_fn_63):ClassType()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:142/        calc = MSELoss() # CKA.linear_HSIC/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:158/        elif args.measure == "DP":/
}
# Order:
#   1: @3✗forward_fn_497:CNode_671{[0]: ValueNode<Primitive> Return, [1]: calc}


subgraph attr:
subgraph instance: ms_iter_512 : 0x56296f9de8b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2345/def ms_iter(xs):/
subgraph @ms_iter_512(%para93_xs) {
  %1(CNode_672) = getattr(%para93_xs, "__ms_iter__")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2347/    return xs.__ms_iter__/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2347/    return xs.__ms_iter__/
}
# Order:
#   1: @ms_iter_512:CNode_672{[0]: ValueNode<Primitive> getattr, [1]: param_xs, [2]: ValueNode<StringImm> __ms_iter__}
#   2: @ms_iter_512:CNode_673{[0]: ValueNode<Primitive> Return, [1]: CNode_672}


subgraph attr:
subgraph instance: ✓_get_cache_prim_519 : 0x56296faa3f70
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:35/def _get_cache_prim(cls: Primitive) -> Primitive:/
subgraph @✓_get_cache_prim_519 parent: [subgraph @_get_cache_prim_354]() {
  Return(@_new_prim_for_graph_674)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:89/        return _new_prim_for_graph/
}
# Order:
#   1: @✓_get_cache_prim_519:CNode_675{[0]: ValueNode<Primitive> Return, [1]: ValueNode<FuncGraph> _new_prim_for_graph_674}


subgraph attr:
after_block : 1
subgraph instance: ↓matmul_524 : 0x56296f890f30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↓matmul_524 parent: [subgraph @matmul_211]() {
  %1(CNode_676) = S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %2(CNode_677) = S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %3(CNode_678) = S_Prim_MakeTuple(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %4(input_rank) = S_Prim_getitem(%3, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %5(CNode_679) = S_Prim_equal(%4, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %6(CNode_680) = Cond(%5, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %7(CNode_681) = Switch(%6, @↰↓matmul_682, @↱↓matmul_683)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %8(CNode_684) = %7()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %9(CNode_685) = Cond(%8, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %10(CNode_686) = Switch(%9, @✓↓matmul_687, @✗↓matmul_688)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  %11(CNode_689) = %10()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
}
# Order:
#   1: @↓matmul_524:CNode_676{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: param_input}
#   2: @↓matmul_524:CNode_677{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: param_other}
#   3: @↓matmul_524:CNode_678{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_676, [2]: CNode_677}
#   4: @↓matmul_524:input_rank{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_678, [2]: ValueNode<Int64Imm> 0}
#   5: @↓matmul_524:other_rank{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_678, [2]: ValueNode<Int64Imm> 1}
#   6: @↓matmul_524:CNode_679{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: input_rank, [2]: ValueNode<Int64Imm> 2}
#   7: @↓matmul_524:CNode_680{[0]: ValueNode<Primitive> Cond, [1]: CNode_679, [2]: ValueNode<BoolImm> false}
#   8: @↓matmul_524:CNode_681{[0]: ValueNode<Primitive> Switch, [1]: CNode_680, [2]: ValueNode<FuncGraph> ↰↓matmul_682, [3]: ValueNode<FuncGraph> ↱↓matmul_683}
#   9: @↓matmul_524:CNode_684{[0]: CNode_681}
#  10: @↓matmul_524:CNode_685{[0]: ValueNode<Primitive> Cond, [1]: CNode_684, [2]: ValueNode<BoolImm> false}
#  11: @↓matmul_524:CNode_686{[0]: ValueNode<Primitive> Switch, [1]: CNode_685, [2]: ValueNode<FuncGraph> ✓↓matmul_687, [3]: ValueNode<FuncGraph> ✗↓matmul_688}
#  12: @↓matmul_524:CNode_689{[0]: CNode_686}
#  13: @↓matmul_524:CNode_690{[0]: ValueNode<Primitive> Return, [1]: CNode_689}


subgraph attr:
subgraph instance: ✓clip_by_value_538 : 0x562976001bb0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓clip_by_value_538() {
  %1(CNode_691) = raise[side_effect_io: Bool(1)]("ValueError", "For 'clip_by_value', at least one of 'clip_value_min' or 'clip_value_max' must not be None", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:198/        raise ValueError("For 'clip_by_value', at least one of "/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:198/        raise ValueError("For 'clip_by_value', at least one of "/
}
# Order:
#   1: @✓clip_by_value_538:CNode_691{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> ValueError, [2]: ValueNode<StringImm> For 'clip_by_value', at least one of 'clip_value_min' or 'clip_value_max' must not be None, [3]: ValueNode<StringImm> None}
#   2: @✓clip_by_value_538:CNode_692{[0]: ValueNode<Primitive> Return, [1]: CNode_691}


subgraph attr:
subgraph instance: ✗clip_by_value_539 : 0x562975fc7550
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗clip_by_value_539 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_694) = call @↓clip_by_value_693()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
}
# Order:
#   1: @✗clip_by_value_539:CNode_694{[0]: ValueNode<FuncGraph> ↓clip_by_value_693}
#   2: @✗clip_by_value_539:CNode_695{[0]: ValueNode<Primitive> Return, [1]: CNode_694}


subgraph attr:
subgraph instance: ↰clip_by_value_533 : 0x562975fc6530
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @↰clip_by_value_533 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_696) = S_Prim_is_(%para84_clip_value_max, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
}
# Order:
#   1: @↰clip_by_value_533:CNode_696{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_clip_value_max, [2]: ValueNode<None> None}
#   2: @↰clip_by_value_533:CNode_697{[0]: ValueNode<Primitive> Return, [1]: CNode_696}


subgraph attr:
subgraph instance: ↱clip_by_value_534 : 0x562975fc5d00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @↱clip_by_value_534 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_530) = $(clip_by_value_371):S_Prim_is_(%para83_clip_value_min, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:197/    if clip_value_min is None and clip_value_max is None:/
}
# Order:
#   1: @↱clip_by_value_534:CNode_698{[0]: ValueNode<Primitive> Return, [1]: CNode_530}


subgraph attr:
after_block : 1
subgraph instance: ↓randn_like_548 : 0x562976007190
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @↓randn_like_548 parent: [subgraph @randn_like_226]() {
  %1(CNode_699) = S_Prim_is_(%para64_dtype, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
  %2(CNode_700) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
  %3(CNode_701) = Switch(%2, @✓↓randn_like_702, @✗↓randn_like_703)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
  %4(CNode_704) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
  %5(CNode_706) = call @2↓randn_like_705(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:517/        noise = ops.randn_like(modified_adj)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
}
# Order:
#   1: @↓randn_like_548:CNode_699{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_dtype, [2]: ValueNode<None> None}
#   2: @↓randn_like_548:CNode_700{[0]: ValueNode<Primitive> Cond, [1]: CNode_699, [2]: ValueNode<BoolImm> false}
#   3: @↓randn_like_548:CNode_701{[0]: ValueNode<Primitive> Switch, [1]: CNode_700, [2]: ValueNode<FuncGraph> ✓↓randn_like_702, [3]: ValueNode<FuncGraph> ✗↓randn_like_703}
#   4: @↓randn_like_548:CNode_704{[0]: CNode_701}
#   5: @↓randn_like_548:CNode_706{[0]: ValueNode<FuncGraph> 2↓randn_like_705, [1]: CNode_704}
#   6: @↓randn_like_548:CNode_707{[0]: ValueNode<Primitive> Return, [1]: CNode_706}


subgraph attr:
subgraph instance: ↰ones_like_555 : 0x56296f8cde30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
subgraph @↰ones_like_555 parent: [subgraph @ones_like_382]() {
  %1(CNode_708) = getattr(%para85_input, "dtype")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
}
# Order:
#   1: @↰ones_like_555:CNode_708{[0]: ValueNode<Primitive> getattr, [1]: param_input, [2]: ValueNode<StringImm> dtype}
#   2: @↰ones_like_555:CNode_709{[0]: ValueNode<Primitive> Return, [1]: CNode_708}


subgraph attr:
subgraph instance: ↱ones_like_556 : 0x56296fc4b970
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
subgraph @↱ones_like_556 parent: [subgraph @ones_like_382]() {
  Return(%para86_dtype)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:998/    _dtype = input.dtype if dtype is None else dtype/
}
# Order:
#   1: @↱ones_like_556:CNode_710{[0]: ValueNode<Primitive> Return, [1]: param_dtype}


subgraph attr:
subgraph instance: zeros_560 : 0x56296fc41b50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @zeros_560(%para94_size, %para95_dtype) {
  %1(CNode_711) = S_Prim_isinstance(%para94_size, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1034/    if isinstance(size, int):/
  %2(CNode_712) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1034/    if isinstance(size, int):/
  %3(CNode_713) = Switch(%2, @✓zeros_714, @✗zeros_715)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1034/    if isinstance(size, int):/
  %4(CNode_716) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1034/    if isinstance(size, int):/
  %5(CNode_718) = call @↓zeros_717(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1034/    if isinstance(size, int):/
}
# Order:
#   1: @zeros_560:CNode_719{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.FillV2'}
#   2: @zeros_560:zero_op{[0]: CNode_719}
#   3: @zeros_560:CNode_720{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_dtype, [2]: ValueNode<None> None}
#   4: @zeros_560:CNode_721{[0]: ValueNode<Primitive> Cond, [1]: CNode_720, [2]: ValueNode<BoolImm> false}
#   5: @zeros_560:CNode_722{[0]: ValueNode<Primitive> Switch, [1]: CNode_721, [2]: ValueNode<FuncGraph> ↰zeros_723, [3]: ValueNode<FuncGraph> ↱zeros_724}
#   6: @zeros_560:_dtype{[0]: CNode_722}
#   7: @zeros_560:CNode_725{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> _dtype}
#   8: @zeros_560:CNode_726{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: _dtype}
#   9: @zeros_560:CNode_727{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_725, [2]: CNode_726}
#  10: @zeros_560:value{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'Tensor(0, _dtype)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'_get_cache_prim': <function _get_cache_prim at 0x7f7304690dc0>, 'P': <module 'mindspore.ops.operations' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/ops/operations/__init__.py'>, 'mstype': <module 'mindspore.common.dtype' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/common/dtype.py'>, 'Tensor': <class 'mindspore.common.tensor.Tensor'>}), [3]: CNode_727}
#  11: @zeros_560:CNode_711{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_size, [2]: ValueNode<ClassType> class 'int'}
#  12: @zeros_560:CNode_712{[0]: ValueNode<Primitive> Cond, [1]: CNode_711, [2]: ValueNode<BoolImm> false}
#  13: @zeros_560:CNode_713{[0]: ValueNode<Primitive> Switch, [1]: CNode_712, [2]: ValueNode<FuncGraph> ✓zeros_714, [3]: ValueNode<FuncGraph> ✗zeros_715}
#  14: @zeros_560:CNode_716{[0]: CNode_713}
#  15: @zeros_560:CNode_718{[0]: ValueNode<FuncGraph> ↓zeros_717, [1]: CNode_716}
#  16: @zeros_560:CNode_728{[0]: ValueNode<Primitive> Return, [1]: CNode_718}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: add_flags_recursive_574 : 0x562976022ec0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
subgraph @add_flags_recursive_574 parent: [subgraph @after_grad_43](%para96_flags) {
  %1(CNode_135) = UnpackCall_unpack_call(@add_flags_729, %para96_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  %2(CNode_137) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %3(CNode_139) = call @↵add_flags_recursive_730(I64(0))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %4(CNode_140) = Depend[side_effect_propagate: I64(1)](%3, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
}
# Order:
#   1: @add_flags_recursive_574:CNode_135{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.141, [1]: ValueNode<FuncGraph> add_flags_729, [2]: param_flags}
#   2: @add_flags_recursive_574:CNode_142{[0]: ValueNode<FuncGraph> cells_731}
#   3: @add_flags_recursive_574:CNode_144{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_142}
#   4: @add_flags_recursive_574:CNode_145{[0]: ValueNode<Primitive> Return, [1]: CNode_140}
#   5: @add_flags_recursive_574:CNode_139{[0]: ValueNode<FuncGraph> ↵add_flags_recursive_730, [1]: ValueNode<Int64Imm> 0}


subgraph attr:
after_block : 1
subgraph instance: ↓enumerate__581 : 0x56296fae9b80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @↓enumerate__581 parent: [subgraph @enumerate__256]() {
  %1(CNode_733) = call @check_is_const_int_732(%para66_start, "enumerate", "start")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
  %2(CNode_734) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
  %3(CNode_735) = Switch(%2, @✓↓enumerate__736, @✗↓enumerate__737)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
  %4(CNode_738) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
  %5(CNode_740) = call @2↓enumerate__739(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
}
# Order:
#   1: @↓enumerate__581:CNode_733{[0]: ValueNode<FuncGraph> check_is_const_int_732, [1]: param_start, [2]: ValueNode<StringImm> enumerate, [3]: ValueNode<StringImm> start}
#   2: @↓enumerate__581:CNode_734{[0]: ValueNode<Primitive> Cond, [1]: CNode_733, [2]: ValueNode<BoolImm> false}
#   3: @↓enumerate__581:CNode_735{[0]: ValueNode<Primitive> Switch, [1]: CNode_734, [2]: ValueNode<FuncGraph> ✓↓enumerate__736, [3]: ValueNode<FuncGraph> ✗↓enumerate__737}
#   4: @↓enumerate__581:CNode_738{[0]: CNode_735}
#   5: @↓enumerate__581:CNode_740{[0]: ValueNode<FuncGraph> 2↓enumerate__739, [1]: CNode_738}
#   6: @↓enumerate__581:CNode_741{[0]: ValueNode<Primitive> Return, [1]: CNode_740}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓↻models_mind_gcn_GCN_construct_591 : 0x56296f95dbd0
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @✓↻models_mind_gcn_GCN_construct_591 parent: [subgraph @↻models_mind_gcn_GCN_construct_431]() {
  %1(CNode_743) = call @↓↻models_mind_gcn_GCN_construct_742()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
}
# Order:
#   1: @✓↻models_mind_gcn_GCN_construct_591:CNode_744{[0]: layer, [1]: param_фx, [2]: param_adj}
#   2: @✓↻models_mind_gcn_GCN_construct_591:x{[0]: ValueNode<FuncGraph> relu_213, [1]: CNode_744}
#   3: @✓↻models_mind_gcn_GCN_construct_591:CNode_743{[0]: ValueNode<FuncGraph> ↓↻models_mind_gcn_GCN_construct_742}
#   4: @✓↻models_mind_gcn_GCN_construct_591:CNode_745{[0]: ValueNode<Primitive> Return, [1]: CNode_743}


subgraph attr:
subgraph instance: log_softmax_603 : 0x56296f8112a0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:4213/def log_softmax(logits, axis=-1):/
subgraph @log_softmax_603(%para97_logits, %para98_axis) {
  %1(CNode_746) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:4250/    _log_softmax = _get_cache_prim(P.LogSoftmax)(axis)/
  %2(_log_softmax) = %1(%para98_axis)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:4250/    _log_softmax = _get_cache_prim(P.LogSoftmax)(axis)/
  %3(CNode_747) = %2(%para97_logits)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:4251/    return _log_softmax(logits)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:4251/    return _log_softmax(logits)/
}
# Order:
#   1: @log_softmax_603:CNode_746{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.nn_ops.LogSoftmax'}
#   2: @log_softmax_603:_log_softmax{[0]: CNode_746, [1]: param_axis}
#   3: @log_softmax_603:CNode_747{[0]: _log_softmax, [1]: param_logits}
#   4: @log_softmax_603:CNode_748{[0]: ValueNode<Primitive> Return, [1]: CNode_747}


subgraph attr:
training : 0
subgraph instance: mindspore_nn_layer_basic_Dense_construct_597 : 0x56296f95fcf0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @mindspore_nn_layer_basic_Dense_construct_597 parent: [subgraph @after_grad_43](%para99_x) {
  %1(x_shape) = S_Prim_Shape(%para99_x)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:623/        x_shape = self.shape_op(x)/
  %2(CNode_749) = S_Prim_check_dense_input_shape[constexpr_prim: Bool(1)](%1, "Dense")
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:624/        check_dense_input_shape(x_shape, self.cls_name)/
  %3(CNode_750) = StopGradient(%2)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
  %4(CNode_751) = S_Prim_inner_len(%1)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
  %5(CNode_752) = S_Prim_not_equal(%4, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
  %6(CNode_753) = Cond(%5, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
  %7(CNode_754) = Switch(%6, @✓mindspore_nn_layer_basic_Dense_construct_755, @✗mindspore_nn_layer_basic_Dense_construct_756)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
  %8(CNode_757) = %7()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
  %9(CNode_759) = call @↓mindspore_nn_layer_basic_Dense_construct_758(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:164/        x = self.linear1(x)/
  %10(CNode_760) = Depend[side_effect_propagate: I64(1)](%9, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:164/        x = self.linear1(x)/
  Return(%10)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
}
# Order:
#   1: @mindspore_nn_layer_basic_Dense_construct_597:x_shape{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: param_x}
#   2: @mindspore_nn_layer_basic_Dense_construct_597:CNode_749{[0]: ValueNode<DoSignaturePrimitive> S_Prim_check_dense_input_shape, [1]: x_shape, [2]: ValueNode<StringImm> Dense}
#   3: @mindspore_nn_layer_basic_Dense_construct_597:CNode_751{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: x_shape}
#   4: @mindspore_nn_layer_basic_Dense_construct_597:CNode_752{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: CNode_751, [2]: ValueNode<Int64Imm> 2}
#   5: @mindspore_nn_layer_basic_Dense_construct_597:CNode_753{[0]: ValueNode<Primitive> Cond, [1]: CNode_752, [2]: ValueNode<BoolImm> false}
#   6: @mindspore_nn_layer_basic_Dense_construct_597:CNode_754{[0]: ValueNode<Primitive> Switch, [1]: CNode_753, [2]: ValueNode<FuncGraph> ✓mindspore_nn_layer_basic_Dense_construct_755, [3]: ValueNode<FuncGraph> ✗mindspore_nn_layer_basic_Dense_construct_756}
#   7: @mindspore_nn_layer_basic_Dense_construct_597:CNode_757{[0]: CNode_754}
#   8: @mindspore_nn_layer_basic_Dense_construct_597:CNode_759{[0]: ValueNode<FuncGraph> ↓mindspore_nn_layer_basic_Dense_construct_758, [1]: CNode_757}
#   9: @mindspore_nn_layer_basic_Dense_construct_597:CNode_760{[0]: ValueNode<Primitive> Depend, [1]: CNode_759, [2]: CNode_750}
#  10: @mindspore_nn_layer_basic_Dense_construct_597:CNode_761{[0]: ValueNode<Primitive> Return, [1]: CNode_760}


subgraph attr:
after_block : 1
subgraph instance: 2↓eye_627 : 0x56296f98c080
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @2↓eye_627 parent: [subgraph @↓eye_456](%para100_) {
  %1(CNode_762) = S_Prim_Eye[output_names: ["output"], input_names: ["n", "m", "t"]](%para75_m, %para87_фm, %para100_фdtype)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:361/    return eye_(n, m, dtype)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:361/    return eye_(n, m, dtype)/
}
# Order:
#   1: @2↓eye_627:CNode_762{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Eye, [1]: param_m, [2]: param_фm, [3]: param_фdtype}
#   2: @2↓eye_627:CNode_763{[0]: ValueNode<Primitive> Return, [1]: CNode_762}


subgraph attr:
subgraph instance: ✓↓eye_624 : 0x56296f90c7e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @✓↓eye_624() {
  Return(F32)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:360/        dtype = ms.float32/
}
# Order:
#   1: @✓↓eye_624:CNode_764{[0]: ValueNode<Primitive> Return, [1]: ValueNode<Float> Float32}


subgraph attr:
subgraph instance: ✗↓eye_625 : 0x56296f9dab20
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:303/def eye(n, m=None, dtype=None):/
subgraph @✗↓eye_625 parent: [subgraph @eye_273]() {
  Return(%para77_dtype)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:359/    if dtype is None:/
}
# Order:
#   1: @✗↓eye_625:CNode_765{[0]: ValueNode<Primitive> Return, [1]: param_dtype}


subgraph attr:
after_block : 1
subgraph instance: ↓✓↓forward_fn_636 : 0x56297613df70
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✓↓forward_fn_636 parent: [subgraph @↓forward_fn_195](%para101_) {
  %1(CNode_766) = call @2↓forward_fn_479(%para101_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
}
# Order:
#   1: @↓✓↓forward_fn_636:CNode_767{[0]: ValueNode<Primitive> Return, [1]: CNode_766}
#   2: @↓✓↓forward_fn_636:CNode_766{[0]: ValueNode<FuncGraph> 2↓forward_fn_479, [1]: param_фloss}


subgraph attr:
subgraph instance: ✓✗✓↓forward_fn_643 : 0x562976142850
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓✗✓↓forward_fn_643 parent: [subgraph @✓↓forward_fn_304]() {
  %1(CNode_768) = S_Prim_MakeTuple("c1", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:169/                loss += -c1/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w1) = $(forward_fn_63):S_Prim_getitem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(feature_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(3))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_80) = $(forward_fn_63):getattr(%7, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(modified_adj) = $(forward_fn_63):call @adding_noise_190(%6, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %11(CNode_474) = $(✓↓forward_fn_304):%para45_фcalc(%4, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %12(CNode_475) = $(✓↓forward_fn_304):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %13(CNode_476) = $(✓↓forward_fn_304):S_Prim_mul(%12, I64(1000))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %14(CNode_477) = $(✓↓forward_fn_304):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c1")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:165/                Align_Parameter_Cora["c1"]/
  %15(c1) = $(✓↓forward_fn_304):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %16(CNode_106) = $(forward_fn_63):S_Prim_MakeTuple("weight_supervised", "origin_loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %17(weight_supervised) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(CNode_102) = $(forward_fn_63):S_Prim_MakeTuple("idx_attack", "self.adj_changes", "self._loss", "label", "output", "self")
      : (<null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %19(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %20(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %21(output) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%20, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  %22(CNode_103) = $(forward_fn_63):S_Prim_MakeTuple(%19, %para3_Parameter$1, @_loss_198, %para28_label, %21, InterpretedObject)
      : (<null>, <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %23(CNode_105) = $(forward_fn_63):S_Prim_make_dict(%18, %22)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %24(origin_loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001'], InterpretedObject, %23)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %25(CNode_107) = $(forward_fn_63):S_Prim_MakeTuple(%17, %24)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %26(CNode_108) = $(forward_fn_63):S_Prim_make_dict(%16, %25)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %27(loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['weight_supervised*origin_loss'], InterpretedObject, %26)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %28(CNode_769) = S_Prim_MakeTuple(%15, %27)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:169/                loss += -c1/
  %29(CNode_770) = S_Prim_make_dict(%1, %28)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:169/                loss += -c1/
  %30(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+-c1'], InterpretedObject, %29)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:169/                loss += -c1/
  %31(CNode_772) = call @↓✗✓↓forward_fn_771(%30)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%31)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:169/                loss += -c1/
}
# Order:
#   1: @✓✗✓↓forward_fn_643:CNode_768{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c1, [2]: ValueNode<StringImm> loss}
#   2: @✓✗✓↓forward_fn_643:CNode_769{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c1, [2]: loss}
#   3: @✓✗✓↓forward_fn_643:CNode_770{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_768, [2]: CNode_769}
#   4: @✓✗✓↓forward_fn_643:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+-c1', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_770}
#   5: @✓✗✓↓forward_fn_643:CNode_773{[0]: ValueNode<Primitive> Return, [1]: CNode_772}
#   6: @✓✗✓↓forward_fn_643:CNode_772{[0]: ValueNode<FuncGraph> ↓✗✓↓forward_fn_771, [1]: loss}


subgraph attr:
subgraph instance: 2✗✓↓forward_fn_644 : 0x5629761344c0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✗✓↓forward_fn_644 parent: [subgraph @✓↓forward_fn_304]() {
  %1(CNode_774) = S_Prim_MakeTuple("c1", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:171/                loss += c1/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w1) = $(forward_fn_63):S_Prim_getitem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(feature_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(3))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %7(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_80) = $(forward_fn_63):getattr(%7, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(modified_adj) = $(forward_fn_63):call @adding_noise_190(%6, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %10(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %11(CNode_474) = $(✓↓forward_fn_304):%para45_фcalc(%4, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %12(CNode_475) = $(✓↓forward_fn_304):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %13(CNode_476) = $(✓↓forward_fn_304):S_Prim_mul(%12, I64(1000))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %14(CNode_477) = $(✓↓forward_fn_304):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c1")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:165/                Align_Parameter_Cora["c1"]/
  %15(c1) = $(✓↓forward_fn_304):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:164/            c1 = w1 * calc(feature_adj, adj_norm)*1000 * \/
  %16(CNode_106) = $(forward_fn_63):S_Prim_MakeTuple("weight_supervised", "origin_loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %17(weight_supervised) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(CNode_102) = $(forward_fn_63):S_Prim_MakeTuple("idx_attack", "self.adj_changes", "self._loss", "label", "output", "self")
      : (<null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %19(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %20(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %21(output) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%20, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  %22(CNode_103) = $(forward_fn_63):S_Prim_MakeTuple(%19, %para3_Parameter$1, @_loss_198, %para28_label, %21, InterpretedObject)
      : (<null>, <Ref[Tensor[Float32]], (3665278), ref_key=:Parameter$1>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %23(CNode_105) = $(forward_fn_63):S_Prim_make_dict(%18, %22)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %24(origin_loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['self._loss(
        output[idx_attack], 
        label[idx_attack]
    ) + torch.norm(self.adj_changes, p=2) * 0.001'], InterpretedObject, %23)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:119/        origin_loss = self._loss(/
  %25(CNode_107) = $(forward_fn_63):S_Prim_MakeTuple(%17, %24)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %26(CNode_108) = $(forward_fn_63):S_Prim_make_dict(%16, %25)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %27(loss) = $(forward_fn_63):PyInterpret[side_effect_io: Bool(1)](Script['weight_supervised*origin_loss'], InterpretedObject, %26)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:125/        loss = weight_supervised*origin_loss/
  %28(CNode_775) = S_Prim_MakeTuple(%15, %27)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:171/                loss += c1/
  %29(CNode_776) = S_Prim_make_dict(%1, %28)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:171/                loss += c1/
  %30(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c1'], InterpretedObject, %29)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:171/                loss += c1/
  %31(CNode_777) = call @↓✗✓↓forward_fn_771(%30)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%31)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:171/                loss += c1/
}
# Order:
#   1: @2✗✓↓forward_fn_644:CNode_774{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c1, [2]: ValueNode<StringImm> loss}
#   2: @2✗✓↓forward_fn_644:CNode_775{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c1, [2]: loss}
#   3: @2✗✓↓forward_fn_644:CNode_776{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_774, [2]: CNode_775}
#   4: @2✗✓↓forward_fn_644:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c1', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_776}
#   5: @2✗✓↓forward_fn_644:CNode_778{[0]: ValueNode<Primitive> Return, [1]: CNode_777}
#   6: @2✗✓↓forward_fn_644:CNode_777{[0]: ValueNode<FuncGraph> ↓✗✓↓forward_fn_771, [1]: loss}


subgraph attr:
after_block : 1
subgraph instance: 3↓forward_fn_653 : 0x562975f9fb10
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @3↓forward_fn_653 parent: [subgraph @↓forward_fn_195](%para102_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w6) = $(forward_fn_63):S_Prim_getitem(%1, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_779) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
  %4(CNode_780) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
  %5(CNode_781) = Switch(%4, @✓3↓forward_fn_782, @✗3↓forward_fn_783)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
  %6(CNode_784) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
}
# Order:
#   1: @3↓forward_fn_653:CNode_779{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w6, [2]: ValueNode<Int64Imm> 0}
#   2: @3↓forward_fn_653:CNode_780{[0]: ValueNode<Primitive> Cond, [1]: CNode_779, [2]: ValueNode<BoolImm> false}
#   3: @3↓forward_fn_653:CNode_781{[0]: ValueNode<Primitive> Switch, [1]: CNode_780, [2]: ValueNode<FuncGraph> ✓3↓forward_fn_782, [3]: ValueNode<FuncGraph> ✗3↓forward_fn_783}
#   4: @3↓forward_fn_653:CNode_784{[0]: CNode_781}
#   5: @3↓forward_fn_653:CNode_785{[0]: ValueNode<Primitive> Return, [1]: CNode_784}


subgraph attr:
subgraph instance: ✓2↓forward_fn_650 : 0x5629760b6660
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓2↓forward_fn_650 parent: [subgraph @2↓forward_fn_479]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_786) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
  %3(CNode_787) = S_Prim_equal(%2, "KDE")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
  %4(CNode_788) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
  %5(CNode_789) = Switch(%4, @2✓2↓forward_fn_790, @✗✓2↓forward_fn_791)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
  %6(CNode_792) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:175/            if args.measure == "KDE":/
}
# Order:
#   1: @✓2↓forward_fn_650:CNode_793{[0]: param_фcalc, [1]: adj_norm, [2]: modified_adj1}
#   2: @✓2↓forward_fn_650:CNode_794{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w2, [2]: CNode_793}
#   3: @✓2↓forward_fn_650:CNode_795{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_794, [2]: ValueNode<Int64Imm> 100}
#   4: @✓2↓forward_fn_650:CNode_796{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c2}
#   5: @✓2↓forward_fn_650:c2{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_795, [2]: CNode_796}
#   6: @✓2↓forward_fn_650:CNode_786{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   7: @✓2↓forward_fn_650:CNode_787{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_786, [2]: ValueNode<StringImm> KDE}
#   8: @✓2↓forward_fn_650:CNode_788{[0]: ValueNode<Primitive> Cond, [1]: CNode_787, [2]: ValueNode<BoolImm> false}
#   9: @✓2↓forward_fn_650:CNode_789{[0]: ValueNode<Primitive> Switch, [1]: CNode_788, [2]: ValueNode<FuncGraph> 2✓2↓forward_fn_790, [3]: ValueNode<FuncGraph> ✗✓2↓forward_fn_791}
#  10: @✓2↓forward_fn_650:CNode_792{[0]: CNode_789}
#  11: @✓2↓forward_fn_650:CNode_797{[0]: ValueNode<Primitive> Return, [1]: CNode_792}


subgraph attr:
subgraph instance: ✗2↓forward_fn_651 : 0x5629760b3430
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗2↓forward_fn_651 parent: [subgraph @2↓forward_fn_479]() {
  Return(%para89_фloss)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:172/        if w2 != 0:/
}
# Order:
#   1: @✗2↓forward_fn_651:CNode_798{[0]: ValueNode<Primitive> Return, [1]: param_фloss}


subgraph attr:
subgraph instance: dot_product_669 : 0x562976098860
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:522/    def dot_product(self, X, Y):/
subgraph @dot_product_669(%para103_X, %para104_Y) {
  %1(CNode_799) = S_Prim_MakeTuple("X", "Y")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:523/        return torch.norm(torch.matmul(Y.t(), X), p=2)/
  %2(CNode_800) = S_Prim_MakeTuple(%para103_X, %para104_Y)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:523/        return torch.norm(torch.matmul(Y.t(), X), p=2)/
  %3(CNode_801) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:523/        return torch.norm(torch.matmul(Y.t(), X), p=2)/
  %4(CNode_802) = PyInterpret[side_effect_io: Bool(1)](Script['torch.norm(torch.matmul(Y.t(), X), p=2)'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:523/        return torch.norm(torch.matmul(Y.t(), X), p=2)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:523/        return torch.norm(torch.matmul(Y.t(), X), p=2)/
}
# Order:
#   1: @dot_product_669:CNode_799{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> X, [2]: ValueNode<StringImm> Y}
#   2: @dot_product_669:CNode_800{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_X, [2]: param_Y}
#   3: @dot_product_669:CNode_801{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_799, [2]: CNode_800}
#   4: @dot_product_669:CNode_802{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'torch.norm(torch.matmul(Y.t(), X), p=2)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_801}
#   5: @dot_product_669:CNode_803{[0]: ValueNode<Primitive> Return, [1]: CNode_802}


subgraph attr:
subgraph instance: _new_prim_for_graph_674 : 0x56296fc1c3a0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:67/    def _new_prim_for_graph(*args, **kwargs) -> Primitive:/
subgraph @_new_prim_for_graph_674 parent: [subgraph @_get_cache_prim_354](%para105_args, %para106_kwargs) {
  %1(CNode_804) = UnpackCall_unpack_call(%para81_cls, %para105_args, %para106_kwargs)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:68/        return cls(*args, **kwargs)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/_primitive_cache.py:68/        return cls(*args, **kwargs)/
}
# Order:
#   1: @_new_prim_for_graph_674:CNode_804{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.805, [1]: param_cls, [2]: param_args, [3]: param_kwargs}
#   2: @_new_prim_for_graph_674:CNode_806{[0]: ValueNode<Primitive> Return, [1]: CNode_804}


subgraph attr:
subgraph instance: ✓↓matmul_687 : 0x56296f9efba0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✓↓matmul_687 parent: [subgraph @matmul_211]() {
  %1(CNode_807) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9664/        _matmul = _get_cache_prim(P.MatMul)(False, False)/
  %2(_matmul) = %1(Bool(0), Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9664/        _matmul = _get_cache_prim(P.MatMul)(False, False)/
  %3(CNode_808) = %2(%para57_input, %para58_other)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9665/        return _matmul(input, other)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9665/        return _matmul(input, other)/
}
# Order:
#   1: @✓↓matmul_687:CNode_807{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.MatMul'}
#   2: @✓↓matmul_687:_matmul{[0]: CNode_807, [1]: ValueNode<BoolImm> false, [2]: ValueNode<BoolImm> false}
#   3: @✓↓matmul_687:CNode_808{[0]: _matmul, [1]: param_input, [2]: param_other}
#   4: @✓↓matmul_687:CNode_809{[0]: ValueNode<Primitive> Return, [1]: CNode_808}


subgraph attr:
subgraph instance: ✗↓matmul_688 : 0x56296fb7fe40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✗↓matmul_688 parent: [subgraph @matmul_211]() {
  %1(CNode_811) = call @2↓matmul_810()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
}
# Order:
#   1: @✗↓matmul_688:CNode_811{[0]: ValueNode<FuncGraph> 2↓matmul_810}
#   2: @✗↓matmul_688:CNode_812{[0]: ValueNode<Primitive> Return, [1]: CNode_811}


subgraph attr:
subgraph instance: ↰↓matmul_682 : 0x56296f95cf00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↰↓matmul_682 parent: [subgraph @↓matmul_524]() {
  %1(CNode_676) = $(↓matmul_524):S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %2(CNode_677) = $(↓matmul_524):S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %3(CNode_678) = $(↓matmul_524):S_Prim_MakeTuple(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %4(other_rank) = $(↓matmul_524):S_Prim_getitem(%3, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %5(CNode_813) = S_Prim_equal(%4, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
}
# Order:
#   1: @↰↓matmul_682:CNode_813{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: other_rank, [2]: ValueNode<Int64Imm> 2}
#   2: @↰↓matmul_682:CNode_814{[0]: ValueNode<Primitive> Return, [1]: CNode_813}


subgraph attr:
subgraph instance: ↱↓matmul_683 : 0x56296f9a01f0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↱↓matmul_683 parent: [subgraph @↓matmul_524]() {
  %1(CNode_676) = $(↓matmul_524):S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %2(CNode_677) = $(↓matmul_524):S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %3(CNode_678) = $(↓matmul_524):S_Prim_MakeTuple(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %4(input_rank) = $(↓matmul_524):S_Prim_getitem(%3, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9662/    input_rank, other_rank = rank_(input), rank_(other)/
  %5(CNode_679) = $(↓matmul_524):S_Prim_equal(%4, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9663/    if input_rank == 2 and other_rank == 2:/
}
# Order:
#   1: @↱↓matmul_683:CNode_815{[0]: ValueNode<Primitive> Return, [1]: CNode_679}


subgraph attr:
after_block : 1
subgraph instance: ↓clip_by_value_693 : 0x562975fc9cc0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @↓clip_by_value_693 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_816) = S_Prim_MakeTuple(ClassType, ClassType, ClassType)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  %2(CNode_817) = S_Prim_isinstance(%para82_x, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  %3(CNode_818) = S_Prim_logical_not(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  %4(CNode_819) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  %5(CNode_820) = Switch(%4, @✓↓clip_by_value_821, @✗↓clip_by_value_822)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  %6(CNode_823) = %5()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
}
# Order:
#   1: @↓clip_by_value_693:CNode_816{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor', [2]: ValueNode<ClassType> class 'tuple', [3]: ValueNode<ClassType> class 'list'}
#   2: @↓clip_by_value_693:CNode_817{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_x, [2]: CNode_816}
#   3: @↓clip_by_value_693:CNode_818{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_817}
#   4: @↓clip_by_value_693:CNode_819{[0]: ValueNode<Primitive> Cond, [1]: CNode_818, [2]: ValueNode<BoolImm> false}
#   5: @↓clip_by_value_693:CNode_820{[0]: ValueNode<Primitive> Switch, [1]: CNode_819, [2]: ValueNode<FuncGraph> ✓↓clip_by_value_821, [3]: ValueNode<FuncGraph> ✗↓clip_by_value_822}
#   6: @↓clip_by_value_693:CNode_823{[0]: CNode_820}
#   7: @↓clip_by_value_693:CNode_824{[0]: ValueNode<Primitive> Return, [1]: CNode_823}


subgraph attr:
after_block : 1
subgraph instance: 2↓randn_like_705 : 0x56297600af60
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @2↓randn_like_705 parent: [subgraph @randn_like_226](%para107_) {
  %1(CNode_825) = S_Prim_not_in(%para107_фdtype, (F16, F32, F64))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
  %2(CNode_826) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
  %3(CNode_827) = Switch(%2, @✓2↓randn_like_828, @✗2↓randn_like_829)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
  %4(CNode_830) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
}
# Order:
#   1: @2↓randn_like_705:CNode_825{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_in, [1]: param_фdtype, [2]: ValueNode<ValueTuple> (Float16, Float32, Float64)}
#   2: @2↓randn_like_705:CNode_826{[0]: ValueNode<Primitive> Cond, [1]: CNode_825, [2]: ValueNode<BoolImm> false}
#   3: @2↓randn_like_705:CNode_827{[0]: ValueNode<Primitive> Switch, [1]: CNode_826, [2]: ValueNode<FuncGraph> ✓2↓randn_like_828, [3]: ValueNode<FuncGraph> ✗2↓randn_like_829}
#   4: @2↓randn_like_705:CNode_830{[0]: CNode_827}
#   5: @2↓randn_like_705:CNode_831{[0]: ValueNode<Primitive> Return, [1]: CNode_830}


subgraph attr:
subgraph instance: ✓↓randn_like_702 : 0x56297600a0d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✓↓randn_like_702() {
  Return(F32)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1064/        dtype = mstype.float32/
}
# Order:
#   1: @✓↓randn_like_702:CNode_832{[0]: ValueNode<Primitive> Return, [1]: ValueNode<Float> Float32}


subgraph attr:
subgraph instance: ✗↓randn_like_703 : 0x5629760092c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✗↓randn_like_703 parent: [subgraph @randn_like_226]() {
  Return(%para64_dtype)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1063/    if dtype is None:/
}
# Order:
#   1: @✗↓randn_like_703:CNode_833{[0]: ValueNode<Primitive> Return, [1]: param_dtype}


subgraph attr:
subgraph instance: ↰zeros_723 : 0x56296fa10320
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
subgraph @↰zeros_723() {
  Return(F32)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
}
# Order:
#   1: @↰zeros_723:CNode_834{[0]: ValueNode<Primitive> Return, [1]: ValueNode<Float> Float32}


subgraph attr:
subgraph instance: ↱zeros_724 : 0x56296fb858e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
subgraph @↱zeros_724 parent: [subgraph @zeros_560]() {
  Return(%para95_dtype)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
}
# Order:
#   1: @↱zeros_724:CNode_835{[0]: ValueNode<Primitive> Return, [1]: param_dtype}


subgraph attr:
after_block : 1
subgraph instance: ↓zeros_717 : 0x56296faddb10
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↓zeros_717 parent: [subgraph @zeros_560](%para108_) {
  %1(CNode_719) = $(zeros_560):call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1031/    zero_op = _get_cache_prim(P.FillV2)()/
  %2(zero_op) = $(zeros_560):%1()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1031/    zero_op = _get_cache_prim(P.FillV2)()/
  %3(CNode_725) = $(zeros_560):S_Prim_MakeTuple("_dtype")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1033/    value = Tensor(0, _dtype)/
  %4(CNode_720) = $(zeros_560):S_Prim_is_(%para95_dtype, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
  %5(CNode_721) = $(zeros_560):Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
  %6(CNode_722) = $(zeros_560):Switch(%5, @↰zeros_723, @↱zeros_724)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
  %7(_dtype) = $(zeros_560):%6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1032/    _dtype = mstype.float32 if dtype is None else dtype/
  %8(CNode_726) = $(zeros_560):S_Prim_MakeTuple(%7)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1033/    value = Tensor(0, _dtype)/
  %9(CNode_727) = $(zeros_560):S_Prim_make_dict(%3, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1033/    value = Tensor(0, _dtype)/
  %10(value) = $(zeros_560):PyInterpret[side_effect_io: Bool(1)](Script['Tensor(0, _dtype)'], InterpretedObject, %9)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1033/    value = Tensor(0, _dtype)/
  %11(output) = %2(%para108_фsize, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1040/    output = zero_op(size, value)/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1041/    return output/
}
# Order:
#   1: @↓zeros_717:output{[0]: zero_op, [1]: param_фsize, [2]: value}
#   2: @↓zeros_717:CNode_836{[0]: ValueNode<Primitive> Return, [1]: output}


subgraph attr:
subgraph instance: ✓zeros_714 : 0x56296f90a7d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @✓zeros_714 parent: [subgraph @zeros_560]() {
  %1(CNode_837) = S_Prim_make_list(%para94_size)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1035/        size = tuple([size])/
  %2(size) = ClassType(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1035/        size = tuple([size])/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1035/        size = tuple([size])/
}
# Order:
#   1: @✓zeros_714:CNode_837{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_list, [1]: param_size}
#   2: @✓zeros_714:size{[0]: ValueNode<ClassType> class 'tuple', [1]: CNode_837}
#   3: @✓zeros_714:CNode_838{[0]: ValueNode<Primitive> Return, [1]: size}


subgraph attr:
subgraph instance: ✗zeros_715 : 0x56296f61a390
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @✗zeros_715 parent: [subgraph @zeros_560]() {
  %1(CNode_839) = S_Prim_isinstance(%para94_size, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
  %2(CNode_840) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
  %3(CNode_841) = Switch(%2, @✓✗zeros_842, @2✗zeros_843)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
  %4(CNode_844) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
}
# Order:
#   1: @✗zeros_715:CNode_839{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_size, [2]: ValueNode<ClassType> class 'list'}
#   2: @✗zeros_715:CNode_840{[0]: ValueNode<Primitive> Cond, [1]: CNode_839, [2]: ValueNode<BoolImm> false}
#   3: @✗zeros_715:CNode_841{[0]: ValueNode<Primitive> Switch, [1]: CNode_840, [2]: ValueNode<FuncGraph> ✓✗zeros_842, [3]: ValueNode<FuncGraph> 2✗zeros_843}
#   4: @✗zeros_715:CNode_844{[0]: CNode_841}
#   5: @✗zeros_715:CNode_845{[0]: ValueNode<Primitive> Return, [1]: CNode_844}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: add_flags_729 : 0x562976039740
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @add_flags_729(%para109_flags) {
  %1(CNode_147) = call @hasattr_846(ClassMember, "_func_graph_flags")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %2(CNode_148) = S_Prim_logical_not(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %3(CNode_149) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %4(CNode_150) = Switch(%3, @✓add_flags_847, @✗add_flags_848)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  %5(CNode_152) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
}
# Order:
#   1: @add_flags_729:CNode_147{[0]: ValueNode<FuncGraph> hasattr_846, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>', [2]: ValueNode<StringImm> _func_graph_flags}
#   2: @add_flags_729:CNode_148{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_147}
#   3: @add_flags_729:CNode_149{[0]: ValueNode<Primitive> Cond, [1]: CNode_148, [2]: ValueNode<BoolImm> false}
#   4: @add_flags_729:CNode_150{[0]: ValueNode<Primitive> Switch, [1]: CNode_149, [2]: ValueNode<FuncGraph> ✓add_flags_847, [3]: ValueNode<FuncGraph> ✗add_flags_848}
#   5: @add_flags_729:CNode_152{[0]: CNode_150}
#   6: @add_flags_729:CNode_153{[0]: ValueNode<Primitive> Return, [1]: CNode_152}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: cells_731 : 0x562976026e40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1538/    def cells(self):/
subgraph @cells_731 parent: [subgraph @after_grad_43]() {
  %1(CNode_850) = call @name_cells_849()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  %2(CNode_851) = getattr(%1, "values")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  %3(CNode_852) = %2()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
}
# Order:
#   1: @cells_731:CNode_850{[0]: ValueNode<FuncGraph> name_cells_849}
#   2: @cells_731:CNode_851{[0]: ValueNode<Primitive> getattr, [1]: CNode_850, [2]: ValueNode<StringImm> values}
#   3: @cells_731:CNode_852{[0]: CNode_851}
#   4: @cells_731:CNode_853{[0]: ValueNode<Primitive> Return, [1]: CNode_852}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↵add_flags_recursive_730 : 0x562975f74a40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
subgraph @↵add_flags_recursive_730 parent: [subgraph @add_flags_recursive_574](%para110_) {
  %1(CNode_142) = $(add_flags_recursive_574):call @cells_731()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %2(CNode_144) = $(add_flags_recursive_574):S_Prim_inner_len(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %3(CNode_854) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para110_@CNode_855, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %4(CNode_856) = Switch(%3, @↻add_flags_recursive_857, @↓add_flags_recursive_858)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %5(CNode_859) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
}
# Order:
#   1: @↵add_flags_recursive_730:CNode_854{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_855, [2]: CNode_144}
#   2: @↵add_flags_recursive_730:CNode_856{[0]: ValueNode<Primitive> Switch, [1]: CNode_854, [2]: ValueNode<FuncGraph> ↻add_flags_recursive_857, [3]: ValueNode<FuncGraph> ↓add_flags_recursive_858}
#   3: @↵add_flags_recursive_730:CNode_859{[0]: CNode_856}
#   4: @↵add_flags_recursive_730:CNode_860{[0]: ValueNode<Primitive> Return, [1]: CNode_859}


subgraph attr:
after_block : 1
subgraph instance: 2↓enumerate__739 : 0x56296f9dd8f0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @2↓enumerate__739(%para111_) {
  Return(%para111_фret)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2840/    return ret/
}
# Order:
#   1: @2↓enumerate__739:CNode_861{[0]: ValueNode<Primitive> Return, [1]: param_фret}


subgraph attr:
subgraph instance: ✓↓enumerate__736 : 0x56296f822f00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @✓↓enumerate__736 parent: [subgraph @enumerate__256]() {
  %1(x_type) = $(enumerate__256):S_Prim_typeof(%para65_x)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2829/    x_type = F.typeof(x)/
  %2(CNode_862) = S_Prim_check_is_tensor[constexpr_prim: Bool(1)](%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
  %3(CNode_863) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
  %4(CNode_864) = Switch(%3, @2✓↓enumerate__865, @✗✓↓enumerate__866)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
  %5(CNode_867) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
  %6(CNode_869) = call @↓✓↓enumerate__868(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
}
# Order:
#   1: @✓↓enumerate__736:CNode_862{[0]: ValueNode<DoSignaturePrimitive> S_Prim_check_is_tensor, [1]: x_type}
#   2: @✓↓enumerate__736:CNode_863{[0]: ValueNode<Primitive> Cond, [1]: CNode_862, [2]: ValueNode<BoolImm> false}
#   3: @✓↓enumerate__736:CNode_864{[0]: ValueNode<Primitive> Switch, [1]: CNode_863, [2]: ValueNode<FuncGraph> 2✓↓enumerate__865, [3]: ValueNode<FuncGraph> ✗✓↓enumerate__866}
#   4: @✓↓enumerate__736:CNode_867{[0]: CNode_864}
#   5: @✓↓enumerate__736:CNode_869{[0]: ValueNode<FuncGraph> ↓✓↓enumerate__868, [1]: CNode_867}
#   6: @✓↓enumerate__736:CNode_870{[0]: ValueNode<Primitive> Return, [1]: CNode_869}


subgraph attr:
subgraph instance: ✗↓enumerate__737 : 0x56296f823810
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @✗↓enumerate__737() {
  Return(())
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2834/    if check_is_const_int(start, op_name, "start"):/
}
# Order:
#   1: @✗↓enumerate__737:CNode_871{[0]: ValueNode<Primitive> Return, [1]: ValueNode<ValueTuple> ()}


subgraph attr:
subgraph instance: check_is_const_int_732 : 0x562975f30d20
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @check_is_const_int_732(%para112_x, %para113_op_name, %para114_arg_name) {
  %1(CNode_872) = S_Prim_is_(%para112_x, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
  %2(CNode_873) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
  %3(CNode_874) = Switch(%2, @✓check_is_const_int_875, @✗check_is_const_int_876)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
  %4(CNode_877) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
}
# Order:
#   1: @check_is_const_int_732:CNode_872{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_x, [2]: ValueNode<None> None}
#   2: @check_is_const_int_732:CNode_873{[0]: ValueNode<Primitive> Cond, [1]: CNode_872, [2]: ValueNode<BoolImm> false}
#   3: @check_is_const_int_732:CNode_874{[0]: ValueNode<Primitive> Switch, [1]: CNode_873, [2]: ValueNode<FuncGraph> ✓check_is_const_int_875, [3]: ValueNode<FuncGraph> ✗check_is_const_int_876}
#   4: @check_is_const_int_732:CNode_877{[0]: CNode_874}
#   5: @check_is_const_int_732:CNode_878{[0]: ValueNode<Primitive> Return, [1]: CNode_877}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↓↻models_mind_gcn_GCN_construct_742 : 0x56296f98e550
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @↓↻models_mind_gcn_GCN_construct_742 parent: [subgraph @✓↻models_mind_gcn_GCN_construct_591]() {
  %1(CNode_257) = $(models_mind_gcn_GCN_construct_197):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_255) = $(models_mind_gcn_GCN_construct_197):call @enumerate__256(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %3(CNode_594) = $(↻models_mind_gcn_GCN_construct_431):call @ms_iter_512(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %4(CNode_595) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%3, %para71_@CNode_429)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %5(i) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%4, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %6(CNode_879) = S_Prim_inner_len(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %7(CNode_880) = S_Prim_sub(%6, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %8(CNode_881) = S_Prim_not_equal(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %9(CNode_882) = Cond(%8, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %10(CNode_883) = Switch(%9, @✓↓↻models_mind_gcn_GCN_construct_884, @✗↓↻models_mind_gcn_GCN_construct_885)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %11(CNode_886) = %10()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
  %12(CNode_888) = call @2↓↻models_mind_gcn_GCN_construct_887(%11)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  Return(%12)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
}
# Order:
#   1: @↓↻models_mind_gcn_GCN_construct_742:CNode_879{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_257}
#   2: @↓↻models_mind_gcn_GCN_construct_742:CNode_880{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: CNode_879, [2]: ValueNode<Int64Imm> 1}
#   3: @↓↻models_mind_gcn_GCN_construct_742:CNode_881{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: i, [2]: CNode_880}
#   4: @↓↻models_mind_gcn_GCN_construct_742:CNode_882{[0]: ValueNode<Primitive> Cond, [1]: CNode_881, [2]: ValueNode<BoolImm> false}
#   5: @↓↻models_mind_gcn_GCN_construct_742:CNode_883{[0]: ValueNode<Primitive> Switch, [1]: CNode_882, [2]: ValueNode<FuncGraph> ✓↓↻models_mind_gcn_GCN_construct_884, [3]: ValueNode<FuncGraph> ✗↓↻models_mind_gcn_GCN_construct_885}
#   6: @↓↻models_mind_gcn_GCN_construct_742:CNode_886{[0]: CNode_883}
#   7: @↓↻models_mind_gcn_GCN_construct_742:CNode_888{[0]: ValueNode<FuncGraph> 2↓↻models_mind_gcn_GCN_construct_887, [1]: CNode_886}
#   8: @↓↻models_mind_gcn_GCN_construct_742:CNode_889{[0]: ValueNode<Primitive> Return, [1]: CNode_888}


subgraph attr:
after_block : 1
training : 0
subgraph instance: ↓mindspore_nn_layer_basic_Dense_construct_758 : 0x56296f86c4b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @↓mindspore_nn_layer_basic_Dense_construct_758 parent: [subgraph @mindspore_nn_layer_basic_Dense_construct_597](%para115_) {
  %1(CNode_891) = call @✓↓mindspore_nn_layer_basic_Dense_construct_890()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:628/        if self.has_bias:/
  Return(%1)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:628/        if self.has_bias:/
}
# Order:
#   1: @↓mindspore_nn_layer_basic_Dense_construct_758:x{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MatMul, [1]: param_фx, [2]: param_linear1.weight}
#   2: @↓mindspore_nn_layer_basic_Dense_construct_758:CNode_891{[0]: ValueNode<FuncGraph> ✓↓mindspore_nn_layer_basic_Dense_construct_890}
#   3: @↓mindspore_nn_layer_basic_Dense_construct_758:CNode_892{[0]: ValueNode<Primitive> Return, [1]: CNode_891}


subgraph attr:
training : 0
subgraph instance: ✓mindspore_nn_layer_basic_Dense_construct_755 : 0x56296faadf00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✓mindspore_nn_layer_basic_Dense_construct_755 parent: [subgraph @mindspore_nn_layer_basic_Dense_construct_597]() {
  %1(CNode_893) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
  %2(x_shape) = $(mindspore_nn_layer_basic_Dense_construct_597):S_Prim_Shape(%para99_x)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:623/        x_shape = self.shape_op(x)/
  %3(CNode_894) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
  %4(CNode_895) = S_Prim_getitem(%2, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
  %5(CNode_896) = S_Prim_MakeTuple(%1, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
  %6(x) = S_Prim_Reshape[output_names: ["output"], input_names: ["tensor", "shape"]](%para99_x, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
  Return(%6)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:626/            x = self.reshape(x, (-1, x_shape[-1]))/
}
# Order:
#   1: @✓mindspore_nn_layer_basic_Dense_construct_755:CNode_893{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   2: @✓mindspore_nn_layer_basic_Dense_construct_755:CNode_894{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   3: @✓mindspore_nn_layer_basic_Dense_construct_755:CNode_895{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: x_shape, [2]: CNode_894}
#   4: @✓mindspore_nn_layer_basic_Dense_construct_755:CNode_896{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_893, [2]: CNode_895}
#   5: @✓mindspore_nn_layer_basic_Dense_construct_755:x{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Reshape, [1]: param_x, [2]: CNode_896}
#   6: @✓mindspore_nn_layer_basic_Dense_construct_755:CNode_897{[0]: ValueNode<Primitive> Return, [1]: x}


subgraph attr:
training : 0
subgraph instance: ✗mindspore_nn_layer_basic_Dense_construct_756 : 0x56296f978540
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✗mindspore_nn_layer_basic_Dense_construct_756 parent: [subgraph @mindspore_nn_layer_basic_Dense_construct_597]() {
  Return(%para99_x)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:625/        if len(x_shape) != 2:/
}
# Order:
#   1: @✗mindspore_nn_layer_basic_Dense_construct_756:CNode_898{[0]: ValueNode<Primitive> Return, [1]: param_x}


subgraph attr:
after_block : 1
subgraph instance: ↓✗✓↓forward_fn_771 : 0x562976139660
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✗✓↓forward_fn_771 parent: [subgraph @↓forward_fn_195](%para116_) {
  %1(CNode_899) = call @↓✓↓forward_fn_636(%para116_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:168/            elif args.measure == "HSIC":/
}
# Order:
#   1: @↓✗✓↓forward_fn_771:CNode_900{[0]: ValueNode<Primitive> Return, [1]: CNode_899}
#   2: @↓✗✓↓forward_fn_771:CNode_899{[0]: ValueNode<FuncGraph> ↓✓↓forward_fn_636, [1]: param_фloss}


subgraph attr:
subgraph instance: ✓3↓forward_fn_782 : 0x562976125810
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓3↓forward_fn_782 parent: [subgraph @3↓forward_fn_653]() {
  %1(CNode_901) = S_Prim_MakeTuple("loss", "c6")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:183/            loss += c6/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w6) = $(forward_fn_63):S_Prim_getitem(%2, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %6(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_80) = $(forward_fn_63):getattr(%6, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %8(modified_adj) = $(forward_fn_63):call @adding_noise_190(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %10(CNode_903) = call @Info_entropy_902(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
  %11(CNode_904) = S_Prim_mul(%3, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
  %12(CNode_905) = S_Prim_mul(%11, I64(100))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
  %13(CNode_906) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c6")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
  %14(c6) = S_Prim_mul(%12, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
  %15(CNode_907) = S_Prim_MakeTuple(%para102_фloss, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:183/            loss += c6/
  %16(CNode_908) = S_Prim_make_dict(%1, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:183/            loss += c6/
  %17(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c6'], InterpretedObject, %16)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:183/            loss += c6/
  %18(CNode_910) = call @4↓forward_fn_909(%17)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%18)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:182/            c6 = w6 * Info_entropy(adj_norm)*100*Align_Parameter_Cora["c6"]/
}
# Order:
#   1: @✓3↓forward_fn_782:CNode_903{[0]: ValueNode<FuncGraph> Info_entropy_902, [1]: adj_norm}
#   2: @✓3↓forward_fn_782:CNode_904{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w6, [2]: CNode_903}
#   3: @✓3↓forward_fn_782:CNode_905{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_904, [2]: ValueNode<Int64Imm> 100}
#   4: @✓3↓forward_fn_782:CNode_906{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c6}
#   5: @✓3↓forward_fn_782:c6{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_905, [2]: CNode_906}
#   6: @✓3↓forward_fn_782:CNode_901{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> loss, [2]: ValueNode<StringImm> c6}
#   7: @✓3↓forward_fn_782:CNode_907{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_фloss, [2]: c6}
#   8: @✓3↓forward_fn_782:CNode_908{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_901, [2]: CNode_907}
#   9: @✓3↓forward_fn_782:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c6', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>}), [3]: CNode_908}
#  10: @✓3↓forward_fn_782:CNode_911{[0]: ValueNode<Primitive> Return, [1]: CNode_910}
#  11: @✓3↓forward_fn_782:CNode_910{[0]: ValueNode<FuncGraph> 4↓forward_fn_909, [1]: loss}


subgraph attr:
subgraph instance: ✗3↓forward_fn_783 : 0x562975fa47f0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗3↓forward_fn_783 parent: [subgraph @3↓forward_fn_653]() {
  %1(CNode_912) = call @4↓forward_fn_909(%para102_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:181/        if w6 != 0:/
}
# Order:
#   1: @✗3↓forward_fn_783:CNode_913{[0]: ValueNode<Primitive> Return, [1]: CNode_912}
#   2: @✗3↓forward_fn_783:CNode_912{[0]: ValueNode<FuncGraph> 4↓forward_fn_909, [1]: param_фloss}


subgraph attr:
subgraph instance: 2✓2↓forward_fn_790 : 0x5629760c2140
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✓2↓forward_fn_790 parent: [subgraph @✓2↓forward_fn_650]() {
  %1(CNode_914) = S_Prim_MakeTuple("c2", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:176/                loss += c2[0]/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w2) = $(forward_fn_63):S_Prim_getitem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %6(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_80) = $(forward_fn_63):getattr(%6, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %8(modified_adj) = $(forward_fn_63):call @adding_noise_190(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %10(modified_adj1) = $(forward_fn_63):call @get_modified_adj_after_199(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  %11(CNode_793) = $(✓2↓forward_fn_650):%para45_фcalc(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %12(CNode_794) = $(✓2↓forward_fn_650):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %13(CNode_795) = $(✓2↓forward_fn_650):S_Prim_mul(%12, I64(100))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %14(CNode_796) = $(✓2↓forward_fn_650):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:174/                100*Align_Parameter_Cora["c2"]/
  %15(c2) = $(✓2↓forward_fn_650):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %16(CNode_915) = S_Prim_MakeTuple(%15, %para89_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:176/                loss += c2[0]/
  %17(CNode_916) = S_Prim_make_dict(%1, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:176/                loss += c2[0]/
  %18(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c2[0]'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:176/                loss += c2[0]/
  %19(CNode_918) = call @↓✓2↓forward_fn_917(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:176/                loss += c2[0]/
}
# Order:
#   1: @2✓2↓forward_fn_790:CNode_914{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c2, [2]: ValueNode<StringImm> loss}
#   2: @2✓2↓forward_fn_790:CNode_915{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c2, [2]: param_фloss}
#   3: @2✓2↓forward_fn_790:CNode_916{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_914, [2]: CNode_915}
#   4: @2✓2↓forward_fn_790:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c2[0]', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_916}
#   5: @2✓2↓forward_fn_790:CNode_919{[0]: ValueNode<Primitive> Return, [1]: CNode_918}
#   6: @2✓2↓forward_fn_790:CNode_918{[0]: ValueNode<FuncGraph> ↓✓2↓forward_fn_917, [1]: loss}


subgraph attr:
subgraph instance: ✗✓2↓forward_fn_791 : 0x5629760b9890
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗✓2↓forward_fn_791 parent: [subgraph @✓2↓forward_fn_650]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_920) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
  %3(CNode_921) = S_Prim_equal(%2, "HSIC")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
  %4(CNode_922) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
  %5(CNode_923) = Switch(%4, @✓✗✓2↓forward_fn_924, @2✗✓2↓forward_fn_925)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
  %6(CNode_926) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
}
# Order:
#   1: @✗✓2↓forward_fn_791:CNode_920{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✗✓2↓forward_fn_791:CNode_921{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_920, [2]: ValueNode<StringImm> HSIC}
#   3: @✗✓2↓forward_fn_791:CNode_922{[0]: ValueNode<Primitive> Cond, [1]: CNode_921, [2]: ValueNode<BoolImm> false}
#   4: @✗✓2↓forward_fn_791:CNode_923{[0]: ValueNode<Primitive> Switch, [1]: CNode_922, [2]: ValueNode<FuncGraph> ✓✗✓2↓forward_fn_924, [3]: ValueNode<FuncGraph> 2✗✓2↓forward_fn_925}
#   5: @✗✓2↓forward_fn_791:CNode_926{[0]: CNode_923}
#   6: @✗✓2↓forward_fn_791:CNode_927{[0]: ValueNode<Primitive> Return, [1]: CNode_926}


subgraph attr:
after_block : 1
subgraph instance: 2↓matmul_810 : 0x56296fa83f80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @2↓matmul_810 parent: [subgraph @matmul_211]() {
  %1(other) = S_Prim__expand[constexpr_prim: Bool(1)](%para58_other, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9679/    other = _expand(other, 2)/
  %2(CNode_928) = S_Prim_Rank(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
  %3(CNode_929) = S_Prim_equal(%2, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
  %4(CNode_930) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
  %5(CNode_931) = Switch(%4, @✓2↓matmul_932, @✗2↓matmul_933)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
  %6(CNode_934) = %5()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
  %7(CNode_936) = call @3↓matmul_935(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9680/    if rank_(other) == 2:/
}
# Order:
#   1: @2↓matmul_810:CNode_937{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: param_input}
#   2: @2↓matmul_810:CNode_938{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: param_other}
#   3: @2↓matmul_810:CNode_939{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_937, [2]: CNode_938}
#   4: @2↓matmul_810:ndim1_orig{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_939, [2]: ValueNode<Int64Imm> 0}
#   5: @2↓matmul_810:ndim2_orig{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_939, [2]: ValueNode<Int64Imm> 1}
#   6: @2↓matmul_810:CNode_940{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: param_input}
#   7: @2↓matmul_810:CNode_941{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: param_other}
#   8: @2↓matmul_810:CNode_942{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_940, [2]: CNode_941}
#   9: @2↓matmul_810:shape1_orig{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_942, [2]: ValueNode<Int64Imm> 0}
#  10: @2↓matmul_810:shape2_orig{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_942, [2]: ValueNode<Int64Imm> 1}
#  11: @2↓matmul_810:transpose_b{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: ndim2_orig, [2]: ValueNode<Int64Imm> 1}
#  12: @2↓matmul_810:shape_backbone{[0]: ValueNode<DoSignaturePrimitive> S_Prim__check_matmul_shapes, [1]: shape1_orig, [2]: shape2_orig, [3]: ValueNode<StringImm> matmul}
#  13: @2↓matmul_810:CNode_943{[0]: ValueNode<DoSignaturePrimitive> S_Prim__infer_shape_rem, [1]: shape1_orig, [2]: shape2_orig, [3]: ndim1_orig, [4]: ndim2_orig, [5]: transpose_b}
#  14: @2↓matmul_810:shape_out{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: shape_backbone, [2]: CNode_943}
#  15: @2↓matmul_810:CNode_944{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.MatMul'}
#  16: @2↓matmul_810:_matmul{[0]: CNode_944, [1]: ValueNode<BoolImm> false, [2]: transpose_b}
#  17: @2↓matmul_810:CNode_945{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.math_ops.BatchMatMul'}
#  18: @2↓matmul_810:_batch_matmul{[0]: CNode_945, [1]: ValueNode<BoolImm> false, [2]: transpose_b}
#  19: @2↓matmul_810:input{[0]: ValueNode<DoSignaturePrimitive> S_Prim__expand, [1]: param_input, [2]: ValueNode<Int64Imm> 2}
#  20: @2↓matmul_810:other{[0]: ValueNode<DoSignaturePrimitive> S_Prim__expand, [1]: param_other, [2]: ValueNode<Int64Imm> 2}
#  21: @2↓matmul_810:CNode_928{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: other}
#  22: @2↓matmul_810:CNode_929{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_928, [2]: ValueNode<Int64Imm> 2}
#  23: @2↓matmul_810:CNode_930{[0]: ValueNode<Primitive> Cond, [1]: CNode_929, [2]: ValueNode<BoolImm> false}
#  24: @2↓matmul_810:CNode_931{[0]: ValueNode<Primitive> Switch, [1]: CNode_930, [2]: ValueNode<FuncGraph> ✓2↓matmul_932, [3]: ValueNode<FuncGraph> ✗2↓matmul_933}
#  25: @2↓matmul_810:CNode_934{[0]: CNode_931}
#  26: @2↓matmul_810:CNode_936{[0]: ValueNode<FuncGraph> 3↓matmul_935, [1]: CNode_934}
#  27: @2↓matmul_810:CNode_946{[0]: ValueNode<Primitive> Return, [1]: CNode_936}


subgraph attr:
subgraph instance: ✓↓clip_by_value_821 : 0x5629760009e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓↓clip_by_value_821() {
  %1(CNode_947) = raise[side_effect_io: Bool(1)]("TypeError", "For 'clip_by_value', the type of argument 'x' must be Tensor or tuple[Tensor] or list[Tensor]", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:201/        raise TypeError("For 'clip_by_value', the type of argument 'x' must be "/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:201/        raise TypeError("For 'clip_by_value', the type of argument 'x' must be "/
}
# Order:
#   1: @✓↓clip_by_value_821:CNode_947{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: ValueNode<StringImm> For 'clip_by_value', the type of argument 'x' must be Tensor or tuple[Tensor] or list[Tensor], [3]: ValueNode<StringImm> None}
#   2: @✓↓clip_by_value_821:CNode_948{[0]: ValueNode<Primitive> Return, [1]: CNode_947}


subgraph attr:
subgraph instance: ✗↓clip_by_value_822 : 0x562975fccdc0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗↓clip_by_value_822 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_950) = call @2↓clip_by_value_949()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:200/    if not isinstance(x, (Tensor, tuple, list)):/
}
# Order:
#   1: @✗↓clip_by_value_822:CNode_950{[0]: ValueNode<FuncGraph> 2↓clip_by_value_949}
#   2: @✗↓clip_by_value_822:CNode_951{[0]: ValueNode<Primitive> Return, [1]: CNode_950}


subgraph attr:
subgraph instance: ✓2↓randn_like_828 : 0x562976010e50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✓2↓randn_like_828 parent: [subgraph @2↓randn_like_705]() {
  %1(CNode_952) = JoinedStr("For 'randn_like', the 'dtype' must be a float type, but got ", %para107_фdtype, ".")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1066/        raise ValueError(f"For 'randn_like', the 'dtype' must be a float type, but got {dtype}.")/
  %2(CNode_953) = raise[side_effect_io: Bool(1)]("ValueError", %1, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1066/        raise ValueError(f"For 'randn_like', the 'dtype' must be a float type, but got {dtype}.")/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1066/        raise ValueError(f"For 'randn_like', the 'dtype' must be a float type, but got {dtype}.")/
}
# Order:
#   1: @✓2↓randn_like_828:CNode_952{[0]: ValueNode<Primitive> JoinedStr, [1]: ValueNode<StringImm> For 'randn_like', the 'dtype' must be a float type, but got , [2]: param_фdtype, [3]: ValueNode<StringImm> .}
#   2: @✓2↓randn_like_828:CNode_953{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> ValueError, [2]: CNode_952, [3]: ValueNode<StringImm> None}
#   3: @✓2↓randn_like_828:CNode_954{[0]: ValueNode<Primitive> Return, [1]: CNode_953}


subgraph attr:
subgraph instance: ✗2↓randn_like_829 : 0x56297600d0d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @✗2↓randn_like_829 parent: [subgraph @2↓randn_like_705]() {
  %1(CNode_956) = call @3↓randn_like_955()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1065/    if dtype not in mstype.float_type:/
}
# Order:
#   1: @✗2↓randn_like_829:CNode_956{[0]: ValueNode<FuncGraph> 3↓randn_like_955}
#   2: @✗2↓randn_like_829:CNode_957{[0]: ValueNode<Primitive> Return, [1]: CNode_956}


subgraph attr:
subgraph instance: ✓✗zeros_842 : 0x56296fb920a0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @✓✗zeros_842 parent: [subgraph @zeros_560]() {
  %1(CNode_958) = S_Prim_MakeTuple("size")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1037/        size = Tensor(size, dtype=mstype.int64)/
  %2(CNode_959) = S_Prim_MakeTuple(%para94_size)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1037/        size = Tensor(size, dtype=mstype.int64)/
  %3(CNode_960) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1037/        size = Tensor(size, dtype=mstype.int64)/
  %4(size) = PyInterpret[side_effect_io: Bool(1)](Script['Tensor(size, dtype=mstype.int64)'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1037/        size = Tensor(size, dtype=mstype.int64)/
  %5(CNode_962) = call @↓✗zeros_961(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1037/        size = Tensor(size, dtype=mstype.int64)/
}
# Order:
#   1: @✓✗zeros_842:CNode_958{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> size}
#   2: @✓✗zeros_842:CNode_959{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_size}
#   3: @✓✗zeros_842:CNode_960{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_958, [2]: CNode_959}
#   4: @✓✗zeros_842:size{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'Tensor(size, dtype=mstype.int64)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'_get_cache_prim': <function _get_cache_prim at 0x7f7304690dc0>, 'P': <module 'mindspore.ops.operations' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/ops/operations/__init__.py'>, 'mstype': <module 'mindspore.common.dtype' from '/root/miniconda3/lib/python3.8/site-packages/mindspore/common/dtype.py'>, 'Tensor': <class 'mindspore.common.tensor.Tensor'>, 'isinstance': <built-in function isinstance>, 'int': <class 'int'>, 'tuple': <class 'tuple'>, 'list': <class 'list'>}), [3]: CNode_960}
#   5: @✓✗zeros_842:CNode_963{[0]: ValueNode<Primitive> Return, [1]: CNode_962}
#   6: @✓✗zeros_842:CNode_962{[0]: ValueNode<FuncGraph> ↓✗zeros_961, [1]: size}


subgraph attr:
subgraph instance: 2✗zeros_843 : 0x56296f97a5f0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @2✗zeros_843 parent: [subgraph @zeros_560]() {
  %1(CNode_964) = S_Prim_isinstance(%para94_size, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %2(CNode_965) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %3(CNode_966) = Switch(%2, @↰2✗zeros_967, @↱2✗zeros_968)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %4(CNode_969) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %5(CNode_970) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %6(CNode_971) = Switch(%5, @✓2✗zeros_972, @3✗zeros_973)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %7(CNode_974) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %8(CNode_976) = call @↓2✗zeros_975(%7)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @2✗zeros_843:CNode_964{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_size, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @2✗zeros_843:CNode_965{[0]: ValueNode<Primitive> Cond, [1]: CNode_964, [2]: ValueNode<BoolImm> false}
#   3: @2✗zeros_843:CNode_966{[0]: ValueNode<Primitive> Switch, [1]: CNode_965, [2]: ValueNode<FuncGraph> ↰2✗zeros_967, [3]: ValueNode<FuncGraph> ↱2✗zeros_968}
#   4: @2✗zeros_843:CNode_969{[0]: CNode_966}
#   5: @2✗zeros_843:CNode_970{[0]: ValueNode<Primitive> Cond, [1]: CNode_969, [2]: ValueNode<BoolImm> false}
#   6: @2✗zeros_843:CNode_971{[0]: ValueNode<Primitive> Switch, [1]: CNode_970, [2]: ValueNode<FuncGraph> ✓2✗zeros_972, [3]: ValueNode<FuncGraph> 3✗zeros_973}
#   7: @2✗zeros_843:CNode_974{[0]: CNode_971}
#   8: @2✗zeros_843:CNode_976{[0]: ValueNode<FuncGraph> ↓2✗zeros_975, [1]: CNode_974}
#   9: @2✗zeros_843:CNode_977{[0]: ValueNode<Primitive> Return, [1]: CNode_976}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓add_flags_847 : 0x562975f84170
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @✓add_flags_847 parent: [subgraph @add_flags_729]() {
  %1(CNode_978) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
  %2(CNode_979) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
  %3(CNode_980) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
  %4(CNode_981) = setattr[side_effect_io: Bool(1)](InterpretedObject, "_func_graph_flags", %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
  %5(CNode_982) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %6(CNode_984) = call @↓add_flags_983()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  %7(CNode_985) = Depend[side_effect_propagate: I64(1)](%6, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1699/            self._func_graph_flags = {}/
}
# Order:
#   1: @✓add_flags_847:CNode_978{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   2: @✓add_flags_847:CNode_979{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   3: @✓add_flags_847:CNode_980{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_978, [2]: CNode_979}
#   4: @✓add_flags_847:CNode_981{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _func_graph_flags, [3]: CNode_980}
#   5: @✓add_flags_847:CNode_986{[0]: ValueNode<Primitive> Return, [1]: CNode_985}
#   6: @✓add_flags_847:CNode_984{[0]: ValueNode<FuncGraph> ↓add_flags_983}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗add_flags_848 : 0x56297603e090
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @✗add_flags_848 parent: [subgraph @add_flags_729]() {
  %1(CNode_154) = call @↓add_flags_983()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1730/        self.add_flags(**flags)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
}
# Order:
#   1: @✗add_flags_848:CNode_155{[0]: ValueNode<Primitive> Return, [1]: CNode_154}
#   2: @✗add_flags_848:CNode_154{[0]: ValueNode<FuncGraph> ↓add_flags_983}


subgraph attr:
subgraph instance: hasattr_846 : 0x56297603c800
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:370/def hasattr(x, attr):  # pylint: disable=redefined-builtin/
subgraph @hasattr_846(%para117_x, %para118_attr) {
  %1(out) = S_Prim_getattr(%para117_x, %para118_attr, NullType)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:381/    out = getattr(x, attr, mstype._null)/
  %2(CNode_987) = S_Prim_isinstance(%1, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:382/    return not isinstance(out, mstype._NullType)/
  %3(CNode_988) = S_Prim_logical_not(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:382/    return not isinstance(out, mstype._NullType)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:382/    return not isinstance(out, mstype._NullType)/
}
# Order:
#   1: @hasattr_846:out{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getattr, [1]: param_x, [2]: param_attr, [3]: ValueNode<TypeNull> Null}
#   2: @hasattr_846:CNode_987{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: out, [2]: ValueNode<ClassType> class 'mindspore._c_expression.typing.TypeNull'}
#   3: @hasattr_846:CNode_988{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_987}
#   4: @hasattr_846:CNode_989{[0]: ValueNode<Primitive> Return, [1]: CNode_988}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: name_cells_849 : 0x562976029360
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @name_cells_849 parent: [subgraph @after_grad_43]() {
  %1(cells) = ClassType()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1623/        cells = OrderedDict()/
  %2(CNode_991) = call @↵name_cells_990(I64(0), %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
}
# Order:
#   1: @name_cells_849:CNode_992{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   2: @name_cells_849:CNode_993{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   3: @name_cells_849:CNode_994{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_992, [2]: CNode_993}
#   4: @name_cells_849:value_set{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'set()', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'set': <class 'set'>}), [3]: CNode_994}
#   5: @name_cells_849:cells{[0]: ValueNode<ClassType> class 'collections.OrderedDict'}
#   6: @name_cells_849:CNode_995{[0]: ValueNode<Primitive> getattr, [1]: CNode_996, [2]: ValueNode<StringImm> items}
#   7: @name_cells_849:CNode_997{[0]: CNode_995}
#   8: @name_cells_849:CNode_998{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_997}
#   9: @name_cells_849:CNode_999{[0]: ValueNode<Primitive> Return, [1]: CNode_991}
#  10: @name_cells_849:CNode_991{[0]: ValueNode<FuncGraph> ↵name_cells_990, [1]: ValueNode<Int64Imm> 0, [2]: cells}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↻add_flags_recursive_857 : 0x56296fc02520
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
subgraph @↻add_flags_recursive_857 parent: [subgraph @↵add_flags_recursive_730]() {
  %1(CNode_855) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para110_@CNode_855, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %2(CNode_142) = $(add_flags_recursive_574):call @cells_731()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %3(CNode_1000) = call @ms_iter_512(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %4(cell) = S_Prim_getitem(%3, %para110_@CNode_855)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  %5(CNode_1001) = getattr(%4, "add_flags_recursive")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1732/            cell.add_flags_recursive(**flags)/
  %6(CNode_1002) = UnpackCall_unpack_call(%5, %para96_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1732/            cell.add_flags_recursive(**flags)/
  %7(CNode_1003) = MakeTuple(%1, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %8(CNode_1004) = StopGradient(%7)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
  %9(CNode_1005) = call @↵add_flags_recursive_730(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1874/        self.add_flags_recursive(training=mode)/
  %10(CNode_1006) = Depend[side_effect_propagate: I64(1)](%9, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1731/        for cell in self.cells():/
}
# Order:
#   1: @↻add_flags_recursive_857:CNode_1000{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_142}
#   2: @↻add_flags_recursive_857:cell{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1000, [2]: param_@CNode_855}
#   3: @↻add_flags_recursive_857:CNode_855{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_855, [2]: ValueNode<Int64Imm> 1}
#   4: @↻add_flags_recursive_857:CNode_1001{[0]: ValueNode<Primitive> getattr, [1]: cell, [2]: ValueNode<StringImm> add_flags_recursive}
#   5: @↻add_flags_recursive_857:CNode_1002{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.1007, [1]: CNode_1001, [2]: param_flags}
#   6: @↻add_flags_recursive_857:CNode_1008{[0]: ValueNode<Primitive> Return, [1]: CNode_1006}
#   7: @↻add_flags_recursive_857:CNode_1005{[0]: ValueNode<FuncGraph> ↵add_flags_recursive_730, [1]: CNode_855}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↓add_flags_recursive_858 : 0x56296fc016a0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1705/    def add_flags_recursive(self, **flags):/
subgraph @↓add_flags_recursive_858() {
  Return(ClassMember)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1733/        return self/
}
# Order:
#   1: @↓add_flags_recursive_858:CNode_1009{[0]: ValueNode<Primitive> Return, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>'}


subgraph attr:
after_block : 1
subgraph instance: ↓✓↓enumerate__868 : 0x56296fb6ba30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @↓✓↓enumerate__868(%para119_) {
  Return(%para119_фret)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2835/        if check_is_tensor(x_type):/
}
# Order:
#   1: @↓✓↓enumerate__868:CNode_1010{[0]: ValueNode<Primitive> Return, [1]: param_фret}


subgraph attr:
subgraph instance: 2✓↓enumerate__865 : 0x56296fa63850
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @2✓↓enumerate__865 parent: [subgraph @enumerate__256]() {
  %1(CNode_1012) = call @↵2✓↓enumerate__1011(I64(0), ())
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
}
# Order:
#   1: @2✓↓enumerate__865:CNode_1013{[0]: ValueNode<Primitive> getattr, [1]: param_x, [2]: ValueNode<StringImm> shape}
#   2: @2✓↓enumerate__865:CNode_1014{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1013, [2]: ValueNode<Int64Imm> 0}
#   3: @2✓↓enumerate__865:CNode_1015{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_range, [1]: CNode_1014}
#   4: @2✓↓enumerate__865:CNode_1016{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_1015}
#   5: @2✓↓enumerate__865:CNode_1017{[0]: ValueNode<Primitive> Return, [1]: CNode_1012}
#   6: @2✓↓enumerate__865:CNode_1012{[0]: ValueNode<FuncGraph> ↵2✓↓enumerate__1011, [1]: ValueNode<Int64Imm> 0, [2]: ValueNode<ValueTuple> ()}


subgraph attr:
subgraph instance: ✗✓↓enumerate__866 : 0x56296f61daf0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @✗✓↓enumerate__866 parent: [subgraph @enumerate__256]() {
  %1(CNode_1018) = S_Prim_inner_len(%para65_x)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2839/            ret = zip(range(start, start + len(x)), x)/
  %2(CNode_1019) = S_Prim_add(%para66_start, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2839/            ret = zip(range(start, start + len(x)), x)/
  %3(CNode_1020) = S_Prim_make_range(%para66_start, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2839/            ret = zip(range(start, start + len(x)), x)/
  %4(ret) = S_Prim_zip_operation(%3, %para65_x)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2839/            ret = zip(range(start, start + len(x)), x)/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2839/            ret = zip(range(start, start + len(x)), x)/
}
# Order:
#   1: @✗✓↓enumerate__866:CNode_1018{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: param_x}
#   2: @✗✓↓enumerate__866:CNode_1019{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: param_start, [2]: CNode_1018}
#   3: @✗✓↓enumerate__866:CNode_1020{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_range, [1]: param_start, [2]: CNode_1019}
#   4: @✗✓↓enumerate__866:ret{[0]: ValueNode<DoSignaturePrimitive> S_Prim_zip_operation, [1]: CNode_1020, [2]: param_x}
#   5: @✗✓↓enumerate__866:CNode_1021{[0]: ValueNode<Primitive> Return, [1]: ret}


subgraph attr:
subgraph instance: ✓check_is_const_int_875 : 0x56296fad2bc0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @✓check_is_const_int_875 parent: [subgraph @check_is_const_int_732]() {
  %1(CNode_1022) = JoinedStr("For '", %para113_op_name, "', the '", %para114_arg_name, "' should be a const int number, but got not const.")
      : (<null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3273/            f"For '{op_name}', the '{arg_name}' should be a const int number, but got not const.")/
  %2(CNode_1023) = raise[side_effect_io: Bool(1)]("TypeError", %1, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3272/        raise TypeError(/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3272/        raise TypeError(/
}
# Order:
#   1: @✓check_is_const_int_875:CNode_1022{[0]: ValueNode<Primitive> JoinedStr, [1]: ValueNode<StringImm> For ', [2]: param_op_name, [3]: ValueNode<StringImm> ', the ', [4]: param_arg_name, [5]: ValueNode<StringImm> ' should be a const int number, but got not const.}
#   2: @✓check_is_const_int_875:CNode_1023{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: CNode_1022, [3]: ValueNode<StringImm> None}
#   3: @✓check_is_const_int_875:CNode_1024{[0]: ValueNode<Primitive> Return, [1]: CNode_1023}


subgraph attr:
subgraph instance: ✗check_is_const_int_876 : 0x56296f8beed0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @✗check_is_const_int_876 parent: [subgraph @check_is_const_int_732]() {
  %1(CNode_1026) = call @↓check_is_const_int_1025()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3271/    if x is None:/
}
# Order:
#   1: @✗check_is_const_int_876:CNode_1026{[0]: ValueNode<FuncGraph> ↓check_is_const_int_1025}
#   2: @✗check_is_const_int_876:CNode_1027{[0]: ValueNode<Primitive> Return, [1]: CNode_1026}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: 2↓↻models_mind_gcn_GCN_construct_887 : 0x56296fa0df50
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @2↓↻models_mind_gcn_GCN_construct_887 parent: [subgraph @↻models_mind_gcn_GCN_construct_431](%para120_) {
  %1(CNode_429) = $(↻models_mind_gcn_GCN_construct_431):MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para71_@CNode_429, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_1028) = call @↵models_mind_gcn_GCN_construct_253(%1, %para120_фx)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:114/        output = self.victim_model(ori_features, adj_norm)/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
}
# Order:
#   1: @2↓↻models_mind_gcn_GCN_construct_887:CNode_1029{[0]: ValueNode<Primitive> Return, [1]: CNode_1028}
#   2: @2↓↻models_mind_gcn_GCN_construct_887:CNode_1028{[0]: ValueNode<FuncGraph> ↵models_mind_gcn_GCN_construct_253, [1]: CNode_429, [2]: param_фx}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓↓↻models_mind_gcn_GCN_construct_884 : 0x56296fa93a60
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @✓↓↻models_mind_gcn_GCN_construct_884 parent: [subgraph @✓↻models_mind_gcn_GCN_construct_591]() {
  %1(CNode_257) = $(models_mind_gcn_GCN_construct_197):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_255) = $(models_mind_gcn_GCN_construct_197):call @enumerate__256(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %3(CNode_594) = $(↻models_mind_gcn_GCN_construct_431):call @ms_iter_512(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %4(CNode_595) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%3, %para71_@CNode_429)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %5(layer) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%4, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %6(CNode_744) = $(✓↻models_mind_gcn_GCN_construct_591):%5(%para72_фx, %para39_adj)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
  %7(x) = $(✓↻models_mind_gcn_GCN_construct_591):call @relu_213(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
  %8(CNode_1030) = S_Prim_MakeTuple(%7, F32(0.5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
  %9(CNode_1031) = S_Prim_MakeTuple("training")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
  %10(CNode_1032) = S_Prim_MakeTuple(Bool(0))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
  %11(CNode_1033) = S_Prim_make_dict(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
  %12(x) = UnpackCall_unpack_call(@dropout_1034, %8, %11)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
  Return(%12)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:163/                x = ops.dropout(x, self.dropout, training=self.training)/
}
# Order:
#   1: @✓↓↻models_mind_gcn_GCN_construct_884:CNode_1030{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: x, [2]: ValueNode<FP32Imm> 0.5}
#   2: @✓↓↻models_mind_gcn_GCN_construct_884:CNode_1031{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> training}
#   3: @✓↓↻models_mind_gcn_GCN_construct_884:CNode_1032{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<BoolImm> false}
#   4: @✓↓↻models_mind_gcn_GCN_construct_884:CNode_1033{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1031, [2]: CNode_1032}
#   5: @✓↓↻models_mind_gcn_GCN_construct_884:x{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.1035, [1]: ValueNode<FuncGraph> dropout_1034, [2]: CNode_1030, [3]: CNode_1033}
#   6: @✓↓↻models_mind_gcn_GCN_construct_884:CNode_1036{[0]: ValueNode<Primitive> Return, [1]: x}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗↓↻models_mind_gcn_GCN_construct_885 : 0x56296fc5fb50
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:153/    def construct(self, x, adj):/
subgraph @✗↓↻models_mind_gcn_GCN_construct_885 parent: [subgraph @✓↻models_mind_gcn_GCN_construct_591]() {
  %1(CNode_257) = $(models_mind_gcn_GCN_construct_197):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %2(CNode_255) = $(models_mind_gcn_GCN_construct_197):call @enumerate__256(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %3(CNode_594) = $(↻models_mind_gcn_GCN_construct_431):call @ms_iter_512(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %4(CNode_595) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%3, %para71_@CNode_429)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %5(layer) = $(↻models_mind_gcn_GCN_construct_431):S_Prim_getitem(%4, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %6(CNode_744) = $(✓↻models_mind_gcn_GCN_construct_591):%5(%para72_фx, %para39_adj)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
  %7(x) = $(✓↻models_mind_gcn_GCN_construct_591):call @relu_213(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:159/                x = ops.relu(layer(x, adj))/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:162/            if i != len(self.gc)-1:/
}
# Order:
#   1: @✗↓↻models_mind_gcn_GCN_construct_885:CNode_1037{[0]: ValueNode<Primitive> Return, [1]: x}


subgraph attr:
training : 0
subgraph instance: ✓↓mindspore_nn_layer_basic_Dense_construct_890 : 0x56296f803ec0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890 parent: [subgraph @↓mindspore_nn_layer_basic_Dense_construct_758]() {
  %1(CNode_1039) = call @2↓mindspore_nn_layer_basic_Dense_construct_1038()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:629/            x = self.bias_add(x, self.bias)/
  Return(%1)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:629/            x = self.bias_add(x, self.bias)/
}
# Order:
#   1: @✓↓mindspore_nn_layer_basic_Dense_construct_890:x{[0]: ValueNode<DoSignaturePrimitive> S_Prim_BiasAdd, [1]: x, [2]: param_linear1.bias}
#   2: @✓↓mindspore_nn_layer_basic_Dense_construct_890:CNode_1039{[0]: ValueNode<FuncGraph> 2↓mindspore_nn_layer_basic_Dense_construct_1038}
#   3: @✓↓mindspore_nn_layer_basic_Dense_construct_890:CNode_1040{[0]: ValueNode<Primitive> Return, [1]: CNode_1039}


subgraph attr:
after_block : 1
subgraph instance: 4↓forward_fn_909 : 0x562975fa7d20
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @4↓forward_fn_909 parent: [subgraph @↓forward_fn_195](%para121_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w7) = $(forward_fn_63):S_Prim_getitem(%1, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1041) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
  %4(CNode_1042) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
  %5(CNode_1043) = Switch(%4, @✓4↓forward_fn_1044, @✗4↓forward_fn_1045)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
  %6(CNode_1046) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
}
# Order:
#   1: @4↓forward_fn_909:CNode_1041{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w7, [2]: ValueNode<Int64Imm> 0}
#   2: @4↓forward_fn_909:CNode_1042{[0]: ValueNode<Primitive> Cond, [1]: CNode_1041, [2]: ValueNode<BoolImm> false}
#   3: @4↓forward_fn_909:CNode_1043{[0]: ValueNode<Primitive> Switch, [1]: CNode_1042, [2]: ValueNode<FuncGraph> ✓4↓forward_fn_1044, [3]: ValueNode<FuncGraph> ✗4↓forward_fn_1045}
#   4: @4↓forward_fn_909:CNode_1046{[0]: CNode_1043}
#   5: @4↓forward_fn_909:CNode_1047{[0]: ValueNode<Primitive> Return, [1]: CNode_1046}


subgraph attr:
subgraph instance: Info_entropy_902 : 0x5629761220b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:55/def Info_entropy(prob):/
subgraph @Info_entropy_902(%para122_prob) {
  %1(CNode_1048) = S_Prim_MakeTuple("entropy")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:58/    return -torch.mean(entropy)/
  %2(CNode_1049) = S_Prim_MakeTuple("prob")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:57/    entropy = prob * torch.log2(prob)/
  %3(CNode_1050) = S_Prim_MakeTuple("prob")
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:56/    prob = torch.clamp(prob, 1e-4, 1-1e-4)/
  %4(CNode_1051) = S_Prim_MakeTuple(%para122_prob)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:56/    prob = torch.clamp(prob, 1e-4, 1-1e-4)/
  %5(CNode_1052) = S_Prim_make_dict(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:56/    prob = torch.clamp(prob, 1e-4, 1-1e-4)/
  %6(prob) = PyInterpret[side_effect_io: Bool(1)](Script['torch.clamp(prob, 1e-4, 1-1e-4)'], InterpretedObject, %5)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:56/    prob = torch.clamp(prob, 1e-4, 1-1e-4)/
  %7(CNode_1053) = S_Prim_MakeTuple(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:57/    entropy = prob * torch.log2(prob)/
  %8(CNode_1054) = S_Prim_make_dict(%2, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:57/    entropy = prob * torch.log2(prob)/
  %9(entropy) = PyInterpret[side_effect_io: Bool(1)](Script['prob * torch.log2(prob)'], InterpretedObject, %8)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:57/    entropy = prob * torch.log2(prob)/
  %10(CNode_1055) = S_Prim_MakeTuple(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:58/    return -torch.mean(entropy)/
  %11(CNode_1056) = S_Prim_make_dict(%1, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:58/    return -torch.mean(entropy)/
  %12(CNode_1057) = PyInterpret[side_effect_io: Bool(1)](Script['-torch.mean(entropy)'], InterpretedObject, %11)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:58/    return -torch.mean(entropy)/
  Return(%12)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:58/    return -torch.mean(entropy)/
}
# Order:
#   1: @Info_entropy_902:CNode_1050{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> prob}
#   2: @Info_entropy_902:CNode_1051{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_prob}
#   3: @Info_entropy_902:CNode_1052{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1050, [2]: CNode_1051}
#   4: @Info_entropy_902:prob{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'torch.clamp(prob, 1e-4, 1-1e-4)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_1052}
#   5: @Info_entropy_902:CNode_1049{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> prob}
#   6: @Info_entropy_902:CNode_1053{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: prob}
#   7: @Info_entropy_902:CNode_1054{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1049, [2]: CNode_1053}
#   8: @Info_entropy_902:entropy{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'prob * torch.log2(prob)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_1054}
#   9: @Info_entropy_902:CNode_1048{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> entropy}
#  10: @Info_entropy_902:CNode_1055{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: entropy}
#  11: @Info_entropy_902:CNode_1056{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1048, [2]: CNode_1055}
#  12: @Info_entropy_902:CNode_1057{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> '-torch.mean(entropy)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>}), [3]: CNode_1056}
#  13: @Info_entropy_902:CNode_1058{[0]: ValueNode<Primitive> Return, [1]: CNode_1057}


subgraph attr:
after_block : 1
subgraph instance: ↓✓2↓forward_fn_917 : 0x5629760beea0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✓2↓forward_fn_917(%para123_) {
  Return(%para123_фloss)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
}
# Order:
#   1: @↓✓2↓forward_fn_917:CNode_1059{[0]: ValueNode<Primitive> Return, [1]: param_фloss}


subgraph attr:
subgraph instance: ✓✗✓2↓forward_fn_924 : 0x5629760c0160
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓✗✓2↓forward_fn_924 parent: [subgraph @✓2↓forward_fn_650]() {
  %1(CNode_1060) = S_Prim_MakeTuple("c2", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:178/                loss += -c2/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w2) = $(forward_fn_63):S_Prim_getitem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %6(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_80) = $(forward_fn_63):getattr(%6, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %8(modified_adj) = $(forward_fn_63):call @adding_noise_190(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %10(modified_adj1) = $(forward_fn_63):call @get_modified_adj_after_199(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  %11(CNode_793) = $(✓2↓forward_fn_650):%para45_фcalc(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %12(CNode_794) = $(✓2↓forward_fn_650):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %13(CNode_795) = $(✓2↓forward_fn_650):S_Prim_mul(%12, I64(100))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %14(CNode_796) = $(✓2↓forward_fn_650):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:174/                100*Align_Parameter_Cora["c2"]/
  %15(c2) = $(✓2↓forward_fn_650):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %16(CNode_1061) = S_Prim_MakeTuple(%15, %para89_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:178/                loss += -c2/
  %17(CNode_1062) = S_Prim_make_dict(%1, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:178/                loss += -c2/
  %18(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+-c2'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:178/                loss += -c2/
  %19(CNode_1064) = call @↓✗✓2↓forward_fn_1063(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:178/                loss += -c2/
}
# Order:
#   1: @✓✗✓2↓forward_fn_924:CNode_1060{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c2, [2]: ValueNode<StringImm> loss}
#   2: @✓✗✓2↓forward_fn_924:CNode_1061{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c2, [2]: param_фloss}
#   3: @✓✗✓2↓forward_fn_924:CNode_1062{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1060, [2]: CNode_1061}
#   4: @✓✗✓2↓forward_fn_924:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+-c2', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_1062}
#   5: @✓✗✓2↓forward_fn_924:CNode_1065{[0]: ValueNode<Primitive> Return, [1]: CNode_1064}
#   6: @✓✗✓2↓forward_fn_924:CNode_1064{[0]: ValueNode<FuncGraph> ↓✗✓2↓forward_fn_1063, [1]: loss}


subgraph attr:
subgraph instance: 2✗✓2↓forward_fn_925 : 0x5629760bb7b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✗✓2↓forward_fn_925 parent: [subgraph @✓2↓forward_fn_650]() {
  %1(CNode_1066) = S_Prim_MakeTuple("c2", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:180/                loss += c2/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w2) = $(forward_fn_63):S_Prim_getitem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %6(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_80) = $(forward_fn_63):getattr(%6, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %8(modified_adj) = $(forward_fn_63):call @adding_noise_190(%5, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %9(adj_norm) = $(forward_fn_63):call @normalize_adj_tensor_196(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:111/        adj_norm = utils.normalize_adj_tensor(modified_adj)/
  %10(modified_adj1) = $(forward_fn_63):call @get_modified_adj_after_199(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  %11(CNode_793) = $(✓2↓forward_fn_650):%para45_фcalc(%9, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %12(CNode_794) = $(✓2↓forward_fn_650):S_Prim_mul(%3, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %13(CNode_795) = $(✓2↓forward_fn_650):S_Prim_mul(%12, I64(100))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %14(CNode_796) = $(✓2↓forward_fn_650):S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:174/                100*Align_Parameter_Cora["c2"]/
  %15(c2) = $(✓2↓forward_fn_650):S_Prim_mul(%13, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:173/            c2 = w2 * calc(adj_norm, modified_adj1) * \/
  %16(CNode_1067) = S_Prim_MakeTuple(%15, %para89_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:180/                loss += c2/
  %17(CNode_1068) = S_Prim_make_dict(%1, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:180/                loss += c2/
  %18(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c2'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:180/                loss += c2/
  %19(CNode_1069) = call @↓✗✓2↓forward_fn_1063(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:180/                loss += c2/
}
# Order:
#   1: @2✗✓2↓forward_fn_925:CNode_1066{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c2, [2]: ValueNode<StringImm> loss}
#   2: @2✗✓2↓forward_fn_925:CNode_1067{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c2, [2]: param_фloss}
#   3: @2✗✓2↓forward_fn_925:CNode_1068{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1066, [2]: CNode_1067}
#   4: @2✗✓2↓forward_fn_925:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c2', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}}), [3]: CNode_1068}
#   5: @2✗✓2↓forward_fn_925:CNode_1070{[0]: ValueNode<Primitive> Return, [1]: CNode_1069}
#   6: @2✗✓2↓forward_fn_925:CNode_1069{[0]: ValueNode<FuncGraph> ↓✗✓2↓forward_fn_1063, [1]: loss}


subgraph attr:
after_block : 1
subgraph instance: 3↓matmul_935 : 0x562975eb24a0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @3↓matmul_935 parent: [subgraph @2↓matmul_810](%para124_) {
  %1(CNode_940) = $(2↓matmul_810):S_Prim_Shape(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %2(CNode_941) = $(2↓matmul_810):S_Prim_Shape(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %3(CNode_942) = $(2↓matmul_810):S_Prim_MakeTuple(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %4(shape1_orig) = $(2↓matmul_810):S_Prim_getitem(%3, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %5(shape2_orig) = $(2↓matmul_810):S_Prim_getitem(%3, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %6(shape_backbone) = $(2↓matmul_810):S_Prim__check_matmul_shapes[constexpr_prim: Bool(1)](%4, %5, "matmul")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9670/    shape_backbone = _check_matmul_shapes(shape1_orig, shape2_orig, 'matmul')/
  %7(CNode_937) = $(2↓matmul_810):S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %8(CNode_938) = $(2↓matmul_810):S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %9(CNode_939) = $(2↓matmul_810):S_Prim_MakeTuple(%7, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %10(ndim1_orig) = $(2↓matmul_810):S_Prim_getitem(%9, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %11(ndim2_orig) = $(2↓matmul_810):S_Prim_getitem(%9, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %12(transpose_b) = $(2↓matmul_810):S_Prim_equal(%11, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9669/    transpose_b = ndim2_orig == 1/
  %13(CNode_943) = $(2↓matmul_810):S_Prim__infer_shape_rem[constexpr_prim: Bool(1)](%4, %5, %10, %11, %12)
      : (<null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9672/    shape_out = shape_backbone + _infer_shape_rem(shape1_orig, shape2_orig,/
  %14(shape_out) = $(2↓matmul_810):S_Prim_add(%6, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9672/    shape_out = shape_backbone + _infer_shape_rem(shape1_orig, shape2_orig,/
  %15(CNode_1071) = S_Prim_Reshape[output_names: ["output"], input_names: ["tensor", "shape"]](%para124_фres, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9694/    return reshape_(res, shape_out)/
  Return(%15)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9694/    return reshape_(res, shape_out)/
}
# Order:
#   1: @3↓matmul_935:CNode_1071{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Reshape, [1]: param_фres, [2]: shape_out}
#   2: @3↓matmul_935:CNode_1072{[0]: ValueNode<Primitive> Return, [1]: CNode_1071}


subgraph attr:
subgraph instance: ✓2↓matmul_932 : 0x562975f0e1f0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✓2↓matmul_932 parent: [subgraph @2↓matmul_810]() {
  %1(input) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para57_input, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9678/    input = _expand(input, 2)/
  %2(CNode_1073) = S_Prim_Rank(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
  %3(CNode_1074) = S_Prim_greater(%2, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
  %4(CNode_1075) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
  %5(CNode_1076) = Switch(%4, @2✓2↓matmul_1077, @✗✓2↓matmul_1078)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
  %6(CNode_1079) = %5()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
  %7(CNode_1081) = call @↓✓2↓matmul_1080(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:458/        A_pred = ops.relu(ops.matmul(Z, Z.t()))/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
}
# Order:
#   1: @✓2↓matmul_932:CNode_1073{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Rank, [1]: input}
#   2: @✓2↓matmul_932:CNode_1074{[0]: ValueNode<DoSignaturePrimitive> S_Prim_greater, [1]: CNode_1073, [2]: ValueNode<Int64Imm> 2}
#   3: @✓2↓matmul_932:CNode_1075{[0]: ValueNode<Primitive> Cond, [1]: CNode_1074, [2]: ValueNode<BoolImm> false}
#   4: @✓2↓matmul_932:CNode_1076{[0]: ValueNode<Primitive> Switch, [1]: CNode_1075, [2]: ValueNode<FuncGraph> 2✓2↓matmul_1077, [3]: ValueNode<FuncGraph> ✗✓2↓matmul_1078}
#   5: @✓2↓matmul_932:CNode_1079{[0]: CNode_1076}
#   6: @✓2↓matmul_932:CNode_1081{[0]: ValueNode<FuncGraph> ↓✓2↓matmul_1080, [1]: CNode_1079}
#   7: @✓2↓matmul_932:CNode_1082{[0]: ValueNode<Primitive> Return, [1]: CNode_1081}


subgraph attr:
subgraph instance: ✗2↓matmul_933 : 0x56296f98a580
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✗2↓matmul_933 parent: [subgraph @2↓matmul_810]() {
  %1(CNode_945) = $(2↓matmul_810):call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9676/    _batch_matmul = _get_cache_prim(P.BatchMatMul)(False, transpose_b)/
  %2(CNode_937) = $(2↓matmul_810):S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %3(CNode_938) = $(2↓matmul_810):S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %4(CNode_939) = $(2↓matmul_810):S_Prim_MakeTuple(%2, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %5(ndim2_orig) = $(2↓matmul_810):S_Prim_getitem(%4, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %6(transpose_b) = $(2↓matmul_810):S_Prim_equal(%5, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9669/    transpose_b = ndim2_orig == 1/
  %7(_batch_matmul) = $(2↓matmul_810):%1(Bool(0), %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9676/    _batch_matmul = _get_cache_prim(P.BatchMatMul)(False, transpose_b)/
  %8(input) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para57_input, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9678/    input = _expand(input, 2)/
  %9(ndim1_orig) = $(2↓matmul_810):S_Prim_getitem(%4, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %10(ndim_aligned) = S_Prim__max[constexpr_prim: Bool(1)](%9, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9686/        ndim_aligned = _max(ndim1_orig, ndim2_orig)/
  %11(input) = S_Prim__expand[constexpr_prim: Bool(1)](%8, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9687/        input = _expand(input, ndim_aligned)/
  %12(CNode_1083) = S_Prim_Shape(%11)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9689/        shape1_aligned, shape2_aligned = shape_(input), shape_(other)/
  %13(other) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para58_other, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9679/    other = _expand(other, 2)/
  %14(other) = S_Prim__expand[constexpr_prim: Bool(1)](%13, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9688/        other = _expand(other, ndim_aligned)/
  %15(CNode_1084) = S_Prim_Shape(%14)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9689/        shape1_aligned, shape2_aligned = shape_(input), shape_(other)/
  %16(CNode_1085) = S_Prim_MakeTuple(%12, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9689/        shape1_aligned, shape2_aligned = shape_(input), shape_(other)/
  %17(shape1_aligned) = S_Prim_getitem(%16, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9689/        shape1_aligned, shape2_aligned = shape_(input), shape_(other)/
  %18(CNode_1086) = S_Prim_negative(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9690/        input = _broadcast_to(input, shape1_aligned[:-2], shape_backbone, ndim_aligned)/
  %19(CNode_1087) = S_Prim_make_slice(None, %18, None)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9690/        input = _broadcast_to(input, shape1_aligned[:-2], shape_backbone, ndim_aligned)/
  %20(CNode_1088) = S_Prim_getitem(%17, %19)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9690/        input = _broadcast_to(input, shape1_aligned[:-2], shape_backbone, ndim_aligned)/
  %21(CNode_940) = $(2↓matmul_810):S_Prim_Shape(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %22(CNode_941) = $(2↓matmul_810):S_Prim_Shape(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %23(CNode_942) = $(2↓matmul_810):S_Prim_MakeTuple(%21, %22)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %24(shape1_orig) = $(2↓matmul_810):S_Prim_getitem(%23, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %25(shape2_orig) = $(2↓matmul_810):S_Prim_getitem(%23, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %26(shape_backbone) = $(2↓matmul_810):S_Prim__check_matmul_shapes[constexpr_prim: Bool(1)](%24, %25, "matmul")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9670/    shape_backbone = _check_matmul_shapes(shape1_orig, shape2_orig, 'matmul')/
  %27(input) = call @_broadcast_to_1089(%11, %20, %26, %10)
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9690/        input = _broadcast_to(input, shape1_aligned[:-2], shape_backbone, ndim_aligned)/
  %28(shape2_aligned) = S_Prim_getitem(%16, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9689/        shape1_aligned, shape2_aligned = shape_(input), shape_(other)/
  %29(CNode_1090) = S_Prim_negative(I64(2))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9691/        other = _broadcast_to(other, shape2_aligned[:-2], shape_backbone, ndim_aligned)/
  %30(CNode_1091) = S_Prim_make_slice(None, %29, None)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9691/        other = _broadcast_to(other, shape2_aligned[:-2], shape_backbone, ndim_aligned)/
  %31(CNode_1092) = S_Prim_getitem(%28, %30)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9691/        other = _broadcast_to(other, shape2_aligned[:-2], shape_backbone, ndim_aligned)/
  %32(other) = call @_broadcast_to_1089(%14, %31, %26, %10)
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9691/        other = _broadcast_to(other, shape2_aligned[:-2], shape_backbone, ndim_aligned)/
  %33(res) = %7(%27, %32)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9692/        res = _batch_matmul(input, other)/
  Return(%33)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9686/        ndim_aligned = _max(ndim1_orig, ndim2_orig)/
}
# Order:
#   1: @✗2↓matmul_933:ndim_aligned{[0]: ValueNode<DoSignaturePrimitive> S_Prim__max, [1]: ndim1_orig, [2]: ndim2_orig}
#   2: @✗2↓matmul_933:input{[0]: ValueNode<DoSignaturePrimitive> S_Prim__expand, [1]: input, [2]: ndim_aligned}
#   3: @✗2↓matmul_933:other{[0]: ValueNode<DoSignaturePrimitive> S_Prim__expand, [1]: other, [2]: ndim_aligned}
#   4: @✗2↓matmul_933:CNode_1083{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: input}
#   5: @✗2↓matmul_933:CNode_1084{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: other}
#   6: @✗2↓matmul_933:CNode_1085{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1083, [2]: CNode_1084}
#   7: @✗2↓matmul_933:shape1_aligned{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1085, [2]: ValueNode<Int64Imm> 0}
#   8: @✗2↓matmul_933:shape2_aligned{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1085, [2]: ValueNode<Int64Imm> 1}
#   9: @✗2↓matmul_933:CNode_1086{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 2}
#  10: @✗2↓matmul_933:CNode_1087{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_slice, [1]: ValueNode<None> None, [2]: CNode_1086, [3]: ValueNode<None> None}
#  11: @✗2↓matmul_933:CNode_1088{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: shape1_aligned, [2]: CNode_1087}
#  12: @✗2↓matmul_933:input{[0]: ValueNode<FuncGraph> _broadcast_to_1089, [1]: input, [2]: CNode_1088, [3]: shape_backbone, [4]: ndim_aligned}
#  13: @✗2↓matmul_933:CNode_1090{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 2}
#  14: @✗2↓matmul_933:CNode_1091{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_slice, [1]: ValueNode<None> None, [2]: CNode_1090, [3]: ValueNode<None> None}
#  15: @✗2↓matmul_933:CNode_1092{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: shape2_aligned, [2]: CNode_1091}
#  16: @✗2↓matmul_933:other{[0]: ValueNode<FuncGraph> _broadcast_to_1089, [1]: other, [2]: CNode_1092, [3]: shape_backbone, [4]: ndim_aligned}
#  17: @✗2↓matmul_933:res{[0]: _batch_matmul, [1]: input, [2]: other}
#  18: @✗2↓matmul_933:CNode_1093{[0]: ValueNode<Primitive> Return, [1]: res}


subgraph attr:
after_block : 1
subgraph instance: 2↓clip_by_value_949 : 0x562975fcec70
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @2↓clip_by_value_949 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_1094) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %2(CNode_1095) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %3(CNode_1096) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %4(CNode_1097) = PyInterpret[side_effect_io: Bool(1)](Script['type(None)'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %5(CNode_1098) = S_Prim_MakeTuple(%4, ClassType, ClassType, ClassType)
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %6(CNode_1099) = S_Prim_isinstance(%para83_clip_value_min, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %7(CNode_1100) = S_Prim_logical_not(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %8(CNode_1101) = Cond(%7, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %9(CNode_1102) = Switch(%8, @✓2↓clip_by_value_1103, @✗2↓clip_by_value_1104)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  %10(CNode_1105) = %9()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
}
# Order:
#   1: @2↓clip_by_value_949:CNode_1094{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   2: @2↓clip_by_value_949:CNode_1095{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   3: @2↓clip_by_value_949:CNode_1096{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1094, [2]: CNode_1095}
#   4: @2↓clip_by_value_949:CNode_1097{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'type(None)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'isinstance': <built-in function isinstance>, 'max_op': Prim[Maximum], 'cast_op': Prim[Cast], 'min_op': Prim[Minimum], 'Tensor': <class 'mindspore.common.tensor.Tensor'>, 'tuple': <class 'tuple'>, 'list': <class 'list'>, 'type': <class 'type'>}), [3]: CNode_1096}
#   5: @2↓clip_by_value_949:CNode_1098{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1097, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor', [3]: ValueNode<ClassType> class 'float', [4]: ValueNode<ClassType> class 'int'}
#   6: @2↓clip_by_value_949:CNode_1099{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_clip_value_min, [2]: CNode_1098}
#   7: @2↓clip_by_value_949:CNode_1100{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_1099}
#   8: @2↓clip_by_value_949:CNode_1101{[0]: ValueNode<Primitive> Cond, [1]: CNode_1100, [2]: ValueNode<BoolImm> false}
#   9: @2↓clip_by_value_949:CNode_1102{[0]: ValueNode<Primitive> Switch, [1]: CNode_1101, [2]: ValueNode<FuncGraph> ✓2↓clip_by_value_1103, [3]: ValueNode<FuncGraph> ✗2↓clip_by_value_1104}
#  10: @2↓clip_by_value_949:CNode_1105{[0]: CNode_1102}
#  11: @2↓clip_by_value_949:CNode_1106{[0]: ValueNode<Primitive> Return, [1]: CNode_1105}


subgraph attr:
after_block : 1
subgraph instance: 3↓randn_like_955 : 0x56297600e350
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1029/def randn_like(input, seed=None, *, dtype=None):/
subgraph @3↓randn_like_955 parent: [subgraph @2↓randn_like_705]() {
  %1(cast_) = ClassType()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1068/    cast_ = P.Cast()/
  %2(CNode_1107) = S_Prim__get_seed[constexpr_prim: Bool(1), forbid_reuse_result: Bool(1)](%para63_seed, "randn_like")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1069/    seed1, seed2 = _get_seed(seed, 'randn_like')/
  %3(seed1) = S_Prim_getitem(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1069/    seed1, seed2 = _get_seed(seed, 'randn_like')/
  %4(seed2) = S_Prim_getitem(%2, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1069/    seed1, seed2 = _get_seed(seed, 'randn_like')/
  %5(rand_op) = ClassType(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1070/    rand_op = P.StandardNormal(seed1, seed2)/
  %6(rand_op) = S_Prim__set_prim_op_user_data[constexpr_prim: Bool(1)](%5, "random_cache", Bool(0))
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1071/    rand_op = _set_prim_op_user_data(rand_op, "random_cache", False)/
  %7(shape) = getattr(%para62_input, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1067/    shape = input.shape/
  %8(output) = %6(%7)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1072/    output = rand_op(shape)/
  %9(CNode_1108) = %1(%8, %para107_фdtype)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1073/    return cast_(output, dtype)/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/random_func.py:1073/    return cast_(output, dtype)/
}
# Order:
#   1: @3↓randn_like_955:shape{[0]: ValueNode<Primitive> getattr, [1]: param_input, [2]: ValueNode<StringImm> shape}
#   2: @3↓randn_like_955:cast_{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.array_ops.Cast'}
#   3: @3↓randn_like_955:CNode_1107{[0]: ValueNode<DoSignaturePrimitive> S_Prim__get_seed, [1]: param_seed, [2]: ValueNode<StringImm> randn_like}
#   4: @3↓randn_like_955:seed1{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1107, [2]: ValueNode<Int64Imm> 0}
#   5: @3↓randn_like_955:seed2{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1107, [2]: ValueNode<Int64Imm> 1}
#   6: @3↓randn_like_955:rand_op{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.random_ops.StandardNormal', [1]: seed1, [2]: seed2}
#   7: @3↓randn_like_955:rand_op{[0]: ValueNode<DoSignaturePrimitive> S_Prim__set_prim_op_user_data, [1]: rand_op, [2]: ValueNode<StringImm> random_cache, [3]: ValueNode<BoolImm> false}
#   8: @3↓randn_like_955:output{[0]: rand_op, [1]: shape}
#   9: @3↓randn_like_955:CNode_1108{[0]: cast_, [1]: output, [2]: param_фdtype}
#  10: @3↓randn_like_955:CNode_1109{[0]: ValueNode<Primitive> Return, [1]: CNode_1108}


subgraph attr:
after_block : 1
subgraph instance: ↓✗zeros_961 : 0x56296f573c40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↓✗zeros_961(%para125_) {
  Return(%para125_фsize)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1036/    elif isinstance(size, list):/
}
# Order:
#   1: @↓✗zeros_961:CNode_1110{[0]: ValueNode<Primitive> Return, [1]: param_фsize}


subgraph attr:
after_block : 1
subgraph instance: ↓2✗zeros_975 : 0x562975f32700
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↓2✗zeros_975(%para126_) {
  %1(CNode_1111) = call @↓✗zeros_961(%para126_фsize)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:412/        m = ops.zeros((self.nnodes, self.nnodes))/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @↓2✗zeros_975:CNode_1112{[0]: ValueNode<Primitive> Return, [1]: CNode_1111}
#   2: @↓2✗zeros_975:CNode_1111{[0]: ValueNode<FuncGraph> ↓✗zeros_961, [1]: param_фsize}


subgraph attr:
subgraph instance: ✓2✗zeros_972 : 0x562975f1e6b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @✓2✗zeros_972 parent: [subgraph @zeros_560]() {
  %1(CNode_1113) = getattr(%para94_size, "reshape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1039/        size = size.reshape(1)/
  %2(size) = %1(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1039/        size = size.reshape(1)/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1039/        size = size.reshape(1)/
}
# Order:
#   1: @✓2✗zeros_972:CNode_1113{[0]: ValueNode<Primitive> getattr, [1]: param_size, [2]: ValueNode<StringImm> reshape}
#   2: @✓2✗zeros_972:size{[0]: CNode_1113, [1]: ValueNode<Int64Imm> 1}
#   3: @✓2✗zeros_972:CNode_1114{[0]: ValueNode<Primitive> Return, [1]: size}


subgraph attr:
subgraph instance: 3✗zeros_973 : 0x56296fb452e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @3✗zeros_973 parent: [subgraph @zeros_560]() {
  Return(%para94_size)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @3✗zeros_973:CNode_1115{[0]: ValueNode<Primitive> Return, [1]: param_size}


subgraph attr:
subgraph instance: ↰2✗zeros_967 : 0x56296f955000
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↰2✗zeros_967 parent: [subgraph @zeros_560]() {
  %1(CNode_1116) = getattr(%para94_size, "ndim")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %2(CNode_1117) = S_Prim_equal(%1, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %3(CNode_1118) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %4(CNode_1119) = Switch(%3, @2↰2✗zeros_1120, @↱↰2✗zeros_1121)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %5(CNode_1122) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @↰2✗zeros_967:CNode_1116{[0]: ValueNode<Primitive> getattr, [1]: param_size, [2]: ValueNode<StringImm> ndim}
#   2: @↰2✗zeros_967:CNode_1117{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1116, [2]: ValueNode<Int64Imm> 0}
#   3: @↰2✗zeros_967:CNode_1118{[0]: ValueNode<Primitive> Cond, [1]: CNode_1117, [2]: ValueNode<BoolImm> false}
#   4: @↰2✗zeros_967:CNode_1119{[0]: ValueNode<Primitive> Switch, [1]: CNode_1118, [2]: ValueNode<FuncGraph> 2↰2✗zeros_1120, [3]: ValueNode<FuncGraph> ↱↰2✗zeros_1121}
#   5: @↰2✗zeros_967:CNode_1122{[0]: CNode_1119}
#   6: @↰2✗zeros_967:CNode_1123{[0]: ValueNode<Primitive> Return, [1]: CNode_1122}


subgraph attr:
subgraph instance: ↱2✗zeros_968 : 0x56296fa0f200
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↱2✗zeros_968 parent: [subgraph @2✗zeros_843]() {
  %1(CNode_964) = $(2✗zeros_843):S_Prim_isinstance(%para94_size, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @↱2✗zeros_968:CNode_1124{[0]: ValueNode<Primitive> Return, [1]: CNode_964}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓add_flags_983 : 0x56297603fd00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
subgraph @↓add_flags_983 parent: [subgraph @add_flags_729]() {
  %1(CNode_156) = getattr(InterpretedObject, "_func_graph_flags")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %2(CNode_157) = getattr(%1, "update")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %3(CNode_158) = S_Prim_MakeTuple(None)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %4(CNode_163) = S_Prim_MakeTuple(%para109_flags)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %5(CNode_164) = S_Prim_make_dict(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %6(CNode_165) = %2(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1700/        self._func_graph_flags.update({**flags})/
  %7(CNode_166) = getattr({"_params": {}, "_cells": {"gc1": FuncGraph[models_mind_gcn_GraphConvolution_construct_167], "gc2": FuncGraph[models_mind_gcn_GraphConvolution_construct_168], "linear1": FuncGraph[mindspore_nn_layer_basic_Dense_construct_169]}, "_params_list": {}, "_tensor_list": {}, "_primitives": {"cast": S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]]}, "_attr_synced": Bool(0), "training": Bool(0), "requires_grad": Bool(0), "pynative": Bool(0), "_param_prefix": "", "_auto_prefix": Bool(1), "_scope": None, "_phase": "predict", "_parameter_layout_dict": {}, "_parallel_parameter_name_list": (), "_parallel_parameter_merge_net_dict": {}, "_create_time": I64(1710397554607026432), "arguments_key": "0", "compile_cache": InterpretedObject, "parameter_broadcast_done": Bool(0), "_id": I64(1), "exist_names": InterpretedObject, "exist_objs": InterpretedObject, "_bprop_debug": Bool(0), "_forward_pre_hook": {}, "_forward_hook": {}, "_enable_forward_pre_hook": Bool(0), "_enable_forward_hook": Bool(0), "_enable_backward_hook": Bool(0), "_cell_backward_hook": None, "_is_recursion_hook": Bool(1), "cell_type": None, "cast": S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]], "_has_config_recompute": Bool(0), "_user_parameters": [], "_dynamic_shape_inputs": None, "saved_dynamic_shape": None, "_jit_config_dict": {}, "grad_ops_label": Bool(0), "ge_sync_data": Bool(0), "_is_check_and_refresh": Bool(1), "_amp_level": "", "nfeat": I64(1433), "hidden_sizes": [I64(16)], "nclass": I64(7), "nlayer": I64(2), "gc": [FuncGraph[models_mind_gcn_GraphConvolution_construct_167], FuncGraph[models_mind_gcn_GraphConvolution_construct_168]], "dropout": F32(0.5), "lr": F32(0.01), "idx_train": InterpretedObject, "weight_decay": F32(0.0005), "with_relu": Bool(1), "with_bias": Bool(1), "output": None, "best_model": None, "best_output": None, "adj_norm": None, "features": None, "__parse_method__": "construct", "_func_graph_flags": {"ge_sync_data": Bool(0), "training": Bool(0)}}, "update")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %8(CNode_170) = S_Prim_MakeTuple(None)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %9(CNode_171) = S_Prim_MakeTuple(%para109_flags)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %10(CNode_172) = S_Prim_make_dict(%8, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %11(CNode_173) = %7(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1701/        self.__dict__.update({**flags})/
  %12(CNode_174) = UnpackCall_unpack_call(@_add_mixed_precision_flag_1125, %para109_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  %13(CNode_176) = MakeTuple(%6, %11, %12)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %14(CNode_177) = StopGradient(%13)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1671/    def add_flags(self, **flags):/
  %15(CNode_178) = Depend[side_effect_propagate: I64(1)](ClassMember, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1698/        if not hasattr(self, "_func_graph_flags"):/
  Return(%15)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1703/        return self/
}
# Order:
#   1: @↓add_flags_983:CNode_156{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.GCN'>, value: GCN<
  (gc1): GraphConvolution (1433 -> 16)
  (gc2): GraphConvolution (16 -> 16)
  (linear1): Dense<input_channels=16, output_channels=7, has_bias=True>
  >), [2]: ValueNode<StringImm> _func_graph_flags}
#   2: @↓add_flags_983:CNode_157{[0]: ValueNode<Primitive> getattr, [1]: CNode_156, [2]: ValueNode<StringImm> update}
#   3: @↓add_flags_983:CNode_158{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<None> None}
#   4: @↓add_flags_983:CNode_163{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_flags}
#   5: @↓add_flags_983:CNode_164{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_158, [2]: CNode_163}
#   6: @↓add_flags_983:CNode_165{[0]: CNode_157, [1]: CNode_164}
#   7: @↓add_flags_983:CNode_166{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ValueDictionary> {'_params': {}, '_cells': {'gc1': models_mind_gcn_GraphConvolution_construct_167, 'gc2': models_mind_gcn_GraphConvolution_construct_168, 'linear1': mindspore_nn_layer_basic_Dense_construct_169}, '_params_list': {}, '_tensor_list': {}, '_primitives': {'cast': S_Prim_Cast}, '_attr_synced': false, 'training': false, 'requires_grad': false, 'pynative': false, '_param_prefix': , '_auto_prefix': true, '_scope': None, '_phase': predict, '_parameter_layout_dict': {}, '_parallel_parameter_name_list': (), '_parallel_parameter_merge_net_dict': {}, '_create_time': 1710397554607026432, 'arguments_key': 0, 'compile_cache': PythonObject(type: <class 'set'>, value: {'train.1710397554607026432.140128514916816.0', 'predict.1710397554607026432.140128514916816.0'}), 'parameter_broadcast_done': false, '_id': 1, 'exist_names': PythonObject(type: <class 'set'>, value: set()), 'exist_objs': PythonObject(type: <class 'set'>, value: set()), '_bprop_debug': false, '_forward_pre_hook': {}, '_forward_hook': {}, '_enable_forward_pre_hook': false, '_enable_forward_hook': false, '_enable_backward_hook': false, '_cell_backward_hook': None, '_is_recursion_hook': true, 'cell_type': None, 'cast': S_Prim_Cast, '_has_config_recompute': false, '_user_parameters': [], '_dynamic_shape_inputs': None, 'saved_dynamic_shape': None, '_jit_config_dict': {}, 'grad_ops_label': false, 'ge_sync_data': false, '_is_check_and_refresh': true, '_amp_level': , 'nfeat': 1433, 'hidden_sizes': [16], 'nclass': 7, 'nlayer': 2, 'gc': [models_mind_gcn_GraphConvolution_construct_167, models_mind_gcn_GraphConvolution_construct_168], 'dropout': 0.5, 'lr': 0.01, 'idx_train': PythonObject(type: <class 'numpy.ndarray'>, value: [1729 2648  651 1180 1285 1015 1499 1277  476 2561 1654 2253 2526 1159
  207  384 2240 1585 1966 2550 2119  503 1453 1062 1424 1548 1666 1821
 2108 1999  499 2611 1413 2038 2118 2031  287 2102 2348 2064  800 1270
  811 2387 1819  793 1644  338 2442 1255 1036 1072   83  218  818 1203
  704 2270 1475 1348 1233 2276 2463 2162 1704 1600 1168 1322  957  614
 1834 1216 2264 2225 1559 1876   91 2504  622 2293  753  580  414 1716
 1364 1202 2177 1077 1198  123 1301 1410 2079  128 2679 1862 1252  577
 1549 1515 2388 1898  746 1186 2600 2192  702  159 1853 1184  817 1333
 1309  369 2339 1262 1479 2459  915 1427  574 2586 2572  367  663 1462
 1396  267  206  189 1965 1085 1877 1147 1133  917  935 1588  692 2496]), 'weight_decay': 0.0005, 'with_relu': true, 'with_bias': true, 'output': None, 'best_model': None, 'best_output': None, 'adj_norm': None, 'features': None, '__parse_method__': construct, '_func_graph_flags': {'ge_sync_data': false, 'training': false}}, [2]: ValueNode<StringImm> update}
#   8: @↓add_flags_983:CNode_170{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<None> None}
#   9: @↓add_flags_983:CNode_171{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_flags}
#  10: @↓add_flags_983:CNode_172{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_170, [2]: CNode_171}
#  11: @↓add_flags_983:CNode_173{[0]: CNode_166, [1]: CNode_172}
#  12: @↓add_flags_983:CNode_174{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.179, [1]: ValueNode<FuncGraph> _add_mixed_precision_flag_1125, [2]: param_flags}
#  13: @↓add_flags_983:CNode_180{[0]: ValueNode<Primitive> Return, [1]: CNode_178}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↵name_cells_990 : 0x56297602d730
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @↵name_cells_990 parent: [subgraph @name_cells_849](%para127_, %para128_) {
  %1(CNode_1126) = $(name_cells_849):MakeTuple("gc1", "gc2", "linear1")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %2(CNode_1127) = $(name_cells_849):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418, @mindspore_nn_layer_basic_Dense_construct_597)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %3(CNode_996) = $(name_cells_849):make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %4(CNode_995) = $(name_cells_849):getattr(%3, "items")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %5(CNode_997) = $(name_cells_849):%4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %6(CNode_998) = $(name_cells_849):S_Prim_inner_len(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %7(CNode_1128) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para127_@CNode_1129, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %8(CNode_1130) = Switch(%7, @↻name_cells_1131, @↓name_cells_1132)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %9(CNode_1133) = %8()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
}
# Order:
#   1: @↵name_cells_990:CNode_1128{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_1129, [2]: CNode_998}
#   2: @↵name_cells_990:CNode_1130{[0]: ValueNode<Primitive> Switch, [1]: CNode_1128, [2]: ValueNode<FuncGraph> ↻name_cells_1131, [3]: ValueNode<FuncGraph> ↓name_cells_1132}
#   3: @↵name_cells_990:CNode_1133{[0]: CNode_1130}
#   4: @↵name_cells_990:CNode_1134{[0]: ValueNode<Primitive> Return, [1]: CNode_1133}


subgraph attr:
subgraph instance: ↵2✓↓enumerate__1011 : 0x56296fb9e000
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @↵2✓↓enumerate__1011 parent: [subgraph @2✓↓enumerate__865](%para129_, %para130_) {
  %1(CNode_1013) = $(2✓↓enumerate__865):getattr(%para65_x, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %2(CNode_1014) = $(2✓↓enumerate__865):S_Prim_getitem(%1, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %3(CNode_1015) = $(2✓↓enumerate__865):S_Prim_make_range(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %4(CNode_1016) = $(2✓↓enumerate__865):S_Prim_inner_len(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %5(CNode_1135) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para129_@CNode_1136, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %6(CNode_1137) = Switch(%5, @↻2✓↓enumerate__1138, @↓2✓↓enumerate__1139)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %7(CNode_1140) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
}
# Order:
#   1: @↵2✓↓enumerate__1011:CNode_1135{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_1136, [2]: CNode_1016}
#   2: @↵2✓↓enumerate__1011:CNode_1137{[0]: ValueNode<Primitive> Switch, [1]: CNode_1135, [2]: ValueNode<FuncGraph> ↻2✓↓enumerate__1138, [3]: ValueNode<FuncGraph> ↓2✓↓enumerate__1139}
#   3: @↵2✓↓enumerate__1011:CNode_1140{[0]: CNode_1137}
#   4: @↵2✓↓enumerate__1011:CNode_1141{[0]: ValueNode<Primitive> Return, [1]: CNode_1140}


subgraph attr:
after_block : 1
subgraph instance: ↓check_is_const_int_1025 : 0x562975eb04e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @↓check_is_const_int_1025 parent: [subgraph @check_is_const_int_732]() {
  %1(CNode_1142) = S_Prim_isinstance(%para112_x, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  %2(CNode_1143) = S_Prim_logical_not(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  %3(CNode_1144) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  %4(CNode_1145) = Switch(%3, @✓↓check_is_const_int_1146, @✗↓check_is_const_int_1147)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  %5(CNode_1148) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
}
# Order:
#   1: @↓check_is_const_int_1025:CNode_1142{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_x, [2]: ValueNode<ClassType> class 'int'}
#   2: @↓check_is_const_int_1025:CNode_1143{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_1142}
#   3: @↓check_is_const_int_1025:CNode_1144{[0]: ValueNode<Primitive> Cond, [1]: CNode_1143, [2]: ValueNode<BoolImm> false}
#   4: @↓check_is_const_int_1025:CNode_1145{[0]: ValueNode<Primitive> Switch, [1]: CNode_1144, [2]: ValueNode<FuncGraph> ✓↓check_is_const_int_1146, [3]: ValueNode<FuncGraph> ✗↓check_is_const_int_1147}
#   5: @↓check_is_const_int_1025:CNode_1148{[0]: CNode_1145}
#   6: @↓check_is_const_int_1025:CNode_1149{[0]: ValueNode<Primitive> Return, [1]: CNode_1148}


subgraph attr:
subgraph instance: dropout_1034 : 0x56296f908ea0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1252/def dropout(input, p=0.5, training=True, seed=None):/
subgraph @dropout_1034(%para131_input, %para132_p, %para133_training, %para134_seed) {
  %1(CNode_1150) = S_Prim_check_bool[constexpr_prim: Bool(1)](%para133_training, "training", "dropout")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1286/    check_bool_const(training, "training", "dropout")/
  %2(CNode_1151) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1251/@_function_forbid_reuse/
  %3(CNode_1152) = S_Prim_is_(%para133_training, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  %4(CNode_1153) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  %5(CNode_1154) = Switch(%4, @✓dropout_1155, @✗dropout_1156)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  %6(CNode_1157) = %5()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  %7(CNode_1158) = Depend[side_effect_propagate: I64(1)](%6, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
}
# Order:
#   1: @dropout_1034:CNode_1150{[0]: ValueNode<DoSignaturePrimitive> S_Prim_check_bool, [1]: param_training, [2]: ValueNode<StringImm> training, [3]: ValueNode<StringImm> dropout}
#   2: @dropout_1034:CNode_1152{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_, [1]: param_training, [2]: ValueNode<BoolImm> false}
#   3: @dropout_1034:CNode_1153{[0]: ValueNode<Primitive> Cond, [1]: CNode_1152, [2]: ValueNode<BoolImm> false}
#   4: @dropout_1034:CNode_1154{[0]: ValueNode<Primitive> Switch, [1]: CNode_1153, [2]: ValueNode<FuncGraph> ✓dropout_1155, [3]: ValueNode<FuncGraph> ✗dropout_1156}
#   5: @dropout_1034:CNode_1157{[0]: CNode_1154}
#   6: @dropout_1034:CNode_1159{[0]: ValueNode<Primitive> Return, [1]: CNode_1158}


subgraph attr:
training : 0
subgraph instance: 2↓mindspore_nn_layer_basic_Dense_construct_1038 : 0x56296f870320
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @2↓mindspore_nn_layer_basic_Dense_construct_1038 parent: [subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890]() {
  %1(CNode_1161) = call @✗2↓mindspore_nn_layer_basic_Dense_construct_1160()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:630/        if self.activation_flag:/
  Return(%1)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:630/        if self.activation_flag:/
}
# Order:
#   1: @2↓mindspore_nn_layer_basic_Dense_construct_1038:CNode_1161{[0]: ValueNode<FuncGraph> ✗2↓mindspore_nn_layer_basic_Dense_construct_1160}
#   2: @2↓mindspore_nn_layer_basic_Dense_construct_1038:CNode_1162{[0]: ValueNode<Primitive> Return, [1]: CNode_1161}


subgraph attr:
subgraph instance: ✓4↓forward_fn_1044 : 0x56297611cdc0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓4↓forward_fn_1044 parent: [subgraph @4↓forward_fn_909]() {
  %1(CNode_1163) = S_Prim_MakeTuple("c7", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:187/            loss += c7/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w7) = $(forward_fn_63):S_Prim_getitem(%2, I64(6))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(modified_adj1) = $(forward_fn_63):call @get_modified_adj_after_199(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:139/        modified_adj1 = self.get_modified_adj_after(ori_adj)/
  %6(CNode_1164) = call @Info_entropy_902(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:185/            c7 = w7 * Info_entropy(modified_adj1) * \/
  %7(CNode_1165) = S_Prim_mul(%3, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:185/            c7 = w7 * Info_entropy(modified_adj1) * \/
  %8(CNode_1166) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c7")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:186/                Align_Parameter_Cora["c7"]/
  %9(c7) = S_Prim_mul(%7, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:185/            c7 = w7 * Info_entropy(modified_adj1) * \/
  %10(CNode_1167) = S_Prim_MakeTuple(%9, %para121_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:187/            loss += c7/
  %11(CNode_1168) = S_Prim_make_dict(%1, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:187/            loss += c7/
  %12(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c7'], InterpretedObject, %11)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:187/            loss += c7/
  %13(CNode_1170) = call @5↓forward_fn_1169(%12)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%13)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:185/            c7 = w7 * Info_entropy(modified_adj1) * \/
}
# Order:
#   1: @✓4↓forward_fn_1044:CNode_1164{[0]: ValueNode<FuncGraph> Info_entropy_902, [1]: modified_adj1}
#   2: @✓4↓forward_fn_1044:CNode_1165{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w7, [2]: CNode_1164}
#   3: @✓4↓forward_fn_1044:CNode_1166{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c7}
#   4: @✓4↓forward_fn_1044:c7{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1165, [2]: CNode_1166}
#   5: @✓4↓forward_fn_1044:CNode_1163{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c7, [2]: ValueNode<StringImm> loss}
#   6: @✓4↓forward_fn_1044:CNode_1167{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: c7, [2]: param_фloss}
#   7: @✓4↓forward_fn_1044:CNode_1168{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1163, [2]: CNode_1167}
#   8: @✓4↓forward_fn_1044:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c7', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>}), [3]: CNode_1168}
#   9: @✓4↓forward_fn_1044:CNode_1171{[0]: ValueNode<Primitive> Return, [1]: CNode_1170}
#  10: @✓4↓forward_fn_1044:CNode_1170{[0]: ValueNode<FuncGraph> 5↓forward_fn_1169, [1]: loss}


subgraph attr:
subgraph instance: ✗4↓forward_fn_1045 : 0x562975fabd60
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗4↓forward_fn_1045 parent: [subgraph @4↓forward_fn_909]() {
  %1(CNode_1172) = call @5↓forward_fn_1169(%para121_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:184/        if w7 != 0:/
}
# Order:
#   1: @✗4↓forward_fn_1045:CNode_1173{[0]: ValueNode<Primitive> Return, [1]: CNode_1172}
#   2: @✗4↓forward_fn_1045:CNode_1172{[0]: ValueNode<FuncGraph> 5↓forward_fn_1169, [1]: param_фloss}


subgraph attr:
after_block : 1
subgraph instance: ↓✗✓2↓forward_fn_1063 : 0x5629760bd790
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✗✓2↓forward_fn_1063(%para135_) {
  %1(CNode_1174) = call @↓✓2↓forward_fn_917(%para135_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:177/            elif args.measure == "HSIC":/
}
# Order:
#   1: @↓✗✓2↓forward_fn_1063:CNode_1175{[0]: ValueNode<Primitive> Return, [1]: CNode_1174}
#   2: @↓✗✓2↓forward_fn_1063:CNode_1174{[0]: ValueNode<FuncGraph> ↓✓2↓forward_fn_917, [1]: param_фloss}


subgraph attr:
after_block : 1
subgraph instance: ↓✓2↓matmul_1080 : 0x56296f9adb30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @↓✓2↓matmul_1080 parent: [subgraph @2↓matmul_810](%para136_) {
  %1(CNode_944) = $(2↓matmul_810):call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9675/    _matmul = _get_cache_prim(P.MatMul)(False, transpose_b)/
  %2(CNode_937) = $(2↓matmul_810):S_Prim_Rank(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %3(CNode_938) = $(2↓matmul_810):S_Prim_Rank(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %4(CNode_939) = $(2↓matmul_810):S_Prim_MakeTuple(%2, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %5(ndim2_orig) = $(2↓matmul_810):S_Prim_getitem(%4, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9667/    ndim1_orig, ndim2_orig = rank_(input), rank_(other)/
  %6(transpose_b) = $(2↓matmul_810):S_Prim_equal(%5, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9669/    transpose_b = ndim2_orig == 1/
  %7(_matmul) = $(2↓matmul_810):%1(Bool(0), %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9675/    _matmul = _get_cache_prim(P.MatMul)(False, transpose_b)/
  %8(other) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para58_other, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9679/    other = _expand(other, 2)/
  %9(res) = %7(%para136_фinput, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9683/        res = _matmul(input, other)/
  Return(%9)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
}
# Order:
#   1: @↓✓2↓matmul_1080:res{[0]: _matmul, [1]: param_фinput, [2]: other}
#   2: @↓✓2↓matmul_1080:CNode_1176{[0]: ValueNode<Primitive> Return, [1]: res}


subgraph attr:
subgraph instance: 2✓2↓matmul_1077 : 0x56296f738610
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @2✓2↓matmul_1077 parent: [subgraph @2↓matmul_810]() {
  %1(input) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para57_input, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9678/    input = _expand(input, 2)/
  %2(CNode_1177) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
  %3(CNode_940) = $(2↓matmul_810):S_Prim_Shape(%para57_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %4(CNode_941) = $(2↓matmul_810):S_Prim_Shape(%para58_other)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %5(CNode_942) = $(2↓matmul_810):S_Prim_MakeTuple(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %6(shape1_orig) = $(2↓matmul_810):S_Prim_getitem(%5, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9668/    shape1_orig, shape2_orig = shape_(input), shape_(other)/
  %7(CNode_1178) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
  %8(CNode_1179) = S_Prim_getitem(%6, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
  %9(CNode_1180) = S_Prim_MakeTuple(%2, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
  %10(input) = S_Prim_Reshape[output_names: ["output"], input_names: ["tensor", "shape"]](%1, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9682/            input = reshape_(input, (-1, shape1_orig[-1]))/
}
# Order:
#   1: @2✓2↓matmul_1077:CNode_1177{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   2: @2✓2↓matmul_1077:CNode_1178{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   3: @2✓2↓matmul_1077:CNode_1179{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: shape1_orig, [2]: CNode_1178}
#   4: @2✓2↓matmul_1077:CNode_1180{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1177, [2]: CNode_1179}
#   5: @2✓2↓matmul_1077:input{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Reshape, [1]: input, [2]: CNode_1180}
#   6: @2✓2↓matmul_1077:CNode_1181{[0]: ValueNode<Primitive> Return, [1]: input}


subgraph attr:
subgraph instance: ✗✓2↓matmul_1078 : 0x56296f7408d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9601/def matmul(input, other):/
subgraph @✗✓2↓matmul_1078 parent: [subgraph @2↓matmul_810]() {
  %1(input) = $(2↓matmul_810):S_Prim__expand[constexpr_prim: Bool(1)](%para57_input, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9678/    input = _expand(input, 2)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9681/        if rank_(input) > 2:/
}
# Order:
#   1: @✗✓2↓matmul_1078:CNode_1182{[0]: ValueNode<Primitive> Return, [1]: input}


subgraph attr:
subgraph instance: _broadcast_to_1089 : 0x56296f8c8330
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9593/def _broadcast_to(x, shape_cur, shape_to, ndim_to):/
subgraph @_broadcast_to_1089(%para137_x, %para138_shape_cur, %para139_shape_to, %para140_ndim_to) {
  %1(CNode_1183) = call @_get_cache_prim_354(ClassType)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9595/    tile_size_op = _get_cache_prim(TileSize)()/
  %2(tile_size_op) = %1()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9595/    tile_size_op = _get_cache_prim(TileSize)()/
  %3(size) = %2(%para138_shape_cur, %para139_shape_to, %para140_ndim_to)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9596/    size = tile_size_op(shape_cur, shape_to, ndim_to)/
  %4(CNode_1185) = call @stop_gradient_1184(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9597/    F.stop_gradient(size)/
  %5(CNode_1186) = StopGradient(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9593/def _broadcast_to(x, shape_cur, shape_to, ndim_to):/
  %6(CNode_1187) = S_Prim_Tile[output_names: ["output"], input_names: ["x", "multiples"]](%para137_x, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9598/    return tile_(x, size)/
  %7(CNode_1188) = Depend[side_effect_propagate: I64(1)](%6, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9598/    return tile_(x, size)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/math_func.py:9598/    return tile_(x, size)/
}
# Order:
#   1: @_broadcast_to_1089:CNode_1183{[0]: ValueNode<FuncGraph> _get_cache_prim_354, [1]: ValueNode<ClassType> class 'mindspore.ops.operations._inner_ops.TileSize'}
#   2: @_broadcast_to_1089:tile_size_op{[0]: CNode_1183}
#   3: @_broadcast_to_1089:size{[0]: tile_size_op, [1]: param_shape_cur, [2]: param_shape_to, [3]: param_ndim_to}
#   4: @_broadcast_to_1089:CNode_1185{[0]: ValueNode<FuncGraph> stop_gradient_1184, [1]: size}
#   5: @_broadcast_to_1089:CNode_1187{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Tile, [1]: param_x, [2]: size}
#   6: @_broadcast_to_1089:CNode_1189{[0]: ValueNode<Primitive> Return, [1]: CNode_1188}


subgraph attr:
subgraph instance: ✓2↓clip_by_value_1103 : 0x562975fff870
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓2↓clip_by_value_1103() {
  %1(CNode_1190) = raise[side_effect_io: Bool(1)]("TypeError", "For 'clip_by_value', the type of argument 'clip_value_min' must be not one of None, Tensor, float, int", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:204/        raise TypeError("For 'clip_by_value', the type of argument 'clip_value_min' must be "/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:204/        raise TypeError("For 'clip_by_value', the type of argument 'clip_value_min' must be "/
}
# Order:
#   1: @✓2↓clip_by_value_1103:CNode_1190{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: ValueNode<StringImm> For 'clip_by_value', the type of argument 'clip_value_min' must be not one of None, Tensor, float, int, [3]: ValueNode<StringImm> None}
#   2: @✓2↓clip_by_value_1103:CNode_1191{[0]: ValueNode<Primitive> Return, [1]: CNode_1190}


subgraph attr:
subgraph instance: ✗2↓clip_by_value_1104 : 0x562975fd28e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗2↓clip_by_value_1104 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_1193) = call @3↓clip_by_value_1192()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:203/    if not isinstance(clip_value_min, (type(None), Tensor, float, int)):/
}
# Order:
#   1: @✗2↓clip_by_value_1104:CNode_1193{[0]: ValueNode<FuncGraph> 3↓clip_by_value_1192}
#   2: @✗2↓clip_by_value_1104:CNode_1194{[0]: ValueNode<Primitive> Return, [1]: CNode_1193}


subgraph attr:
subgraph instance: 2↰2✗zeros_1120 : 0x56296f8d86d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @2↰2✗zeros_1120 parent: [subgraph @zeros_560]() {
  %1(CNode_1195) = getattr(%para94_size, "size")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %2(CNode_1196) = S_Prim_equal(%1, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @2↰2✗zeros_1120:CNode_1195{[0]: ValueNode<Primitive> getattr, [1]: param_size, [2]: ValueNode<StringImm> size}
#   2: @2↰2✗zeros_1120:CNode_1196{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1195, [2]: ValueNode<Int64Imm> 1}
#   3: @2↰2✗zeros_1120:CNode_1197{[0]: ValueNode<Primitive> Return, [1]: CNode_1196}


subgraph attr:
subgraph instance: ↱↰2✗zeros_1121 : 0x56296f5a71d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1003/def zeros(size, dtype=None):  # pylint: disable=redefined-outer-name/
subgraph @↱↰2✗zeros_1121 parent: [subgraph @↰2✗zeros_967]() {
  %1(CNode_1116) = $(↰2✗zeros_967):getattr(%para94_size, "ndim")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  %2(CNode_1117) = $(↰2✗zeros_967):S_Prim_equal(%1, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1038/    elif isinstance(size, Tensor) and size.ndim == 0 and size.size == 1:/
}
# Order:
#   1: @↱↰2✗zeros_1121:CNode_1198{[0]: ValueNode<Primitive> Return, [1]: CNode_1117}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: _add_mixed_precision_flag_1125 : 0x5629760448e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @_add_mixed_precision_flag_1125(%para141_flags) {
  %1(CNode_1199) = S_Prim_in("fp16", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %2(CNode_1200) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %3(CNode_1201) = Switch(%2, @↰_add_mixed_precision_flag_1202, @↱_add_mixed_precision_flag_1203)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %4(CNode_1204) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %5(CNode_1205) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %6(CNode_1206) = Switch(%5, @✓_add_mixed_precision_flag_1207, @✗_add_mixed_precision_flag_1208)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %7(CNode_1209) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
}
# Order:
#   1: @_add_mixed_precision_flag_1125:CNode_1199{[0]: ValueNode<DoSignaturePrimitive> S_Prim_in, [1]: ValueNode<StringImm> fp16, [2]: param_flags}
#   2: @_add_mixed_precision_flag_1125:CNode_1200{[0]: ValueNode<Primitive> Cond, [1]: CNode_1199, [2]: ValueNode<BoolImm> false}
#   3: @_add_mixed_precision_flag_1125:CNode_1201{[0]: ValueNode<Primitive> Switch, [1]: CNode_1200, [2]: ValueNode<FuncGraph> ↰_add_mixed_precision_flag_1202, [3]: ValueNode<FuncGraph> ↱_add_mixed_precision_flag_1203}
#   4: @_add_mixed_precision_flag_1125:CNode_1204{[0]: CNode_1201}
#   5: @_add_mixed_precision_flag_1125:CNode_1205{[0]: ValueNode<Primitive> Cond, [1]: CNode_1204, [2]: ValueNode<BoolImm> false}
#   6: @_add_mixed_precision_flag_1125:CNode_1206{[0]: ValueNode<Primitive> Switch, [1]: CNode_1205, [2]: ValueNode<FuncGraph> ✓_add_mixed_precision_flag_1207, [3]: ValueNode<FuncGraph> ✗_add_mixed_precision_flag_1208}
#   7: @_add_mixed_precision_flag_1125:CNode_1209{[0]: CNode_1206}
#   8: @_add_mixed_precision_flag_1125:CNode_1210{[0]: ValueNode<Primitive> Return, [1]: CNode_1209}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↻name_cells_1131 : 0x562976030720
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @↻name_cells_1131 parent: [subgraph @↵name_cells_990]() {
  %1(CNode_1129) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para127_@CNode_1129, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %2(CNode_1211) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
  %3(CNode_1212) = S_Prim_MakeTuple("value_set", "cell")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %4(CNode_992) = $(name_cells_849):S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %5(CNode_993) = $(name_cells_849):S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %6(CNode_994) = $(name_cells_849):S_Prim_make_dict(%4, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %7(value_set) = $(name_cells_849):PyInterpret[side_effect_io: Bool(1)](Script['set()'], InterpretedObject, %6)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %8(CNode_1126) = $(name_cells_849):MakeTuple("gc1", "gc2", "linear1")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %9(CNode_1127) = $(name_cells_849):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418, @mindspore_nn_layer_basic_Dense_construct_597)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %10(CNode_996) = $(name_cells_849):make_dict(%8, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %11(CNode_995) = $(name_cells_849):getattr(%10, "items")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %12(CNode_997) = $(name_cells_849):%11()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %13(CNode_1213) = call @ms_iter_512(%12)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %14(CNode_1214) = S_Prim_getitem(%13, %para127_@CNode_1129)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %15(cell) = S_Prim_getitem(%14, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %16(CNode_1215) = S_Prim_MakeTuple(%7, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %17(CNode_1216) = S_Prim_make_dict(%3, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %18(CNode_1217) = PyInterpret[side_effect_io: Bool(1)](Script['bool(cell is not None and cell not in value_set)'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %19(CNode_1218) = Switch(%18, @✓↻name_cells_1219, @✗↻name_cells_1220)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %20(CNode_1221) = %19()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
  %21(CNode_1223) = call @↓↻name_cells_1222(%20)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  %22(CNode_1224) = Depend[side_effect_propagate: I64(1)](%21, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  Return(%22)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
}
# Order:
#   1: @↻name_cells_1131:CNode_1213{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_997}
#   2: @↻name_cells_1131:CNode_1214{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1213, [2]: param_@CNode_1129}
#   3: @↻name_cells_1131:name{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1214, [2]: ValueNode<Int64Imm> 0}
#   4: @↻name_cells_1131:cell{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1214, [2]: ValueNode<Int64Imm> 1}
#   5: @↻name_cells_1131:CNode_1129{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_1129, [2]: ValueNode<Int64Imm> 1}
#   6: @↻name_cells_1131:CNode_1212{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> value_set, [2]: ValueNode<StringImm> cell}
#   7: @↻name_cells_1131:CNode_1215{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: value_set, [2]: cell}
#   8: @↻name_cells_1131:CNode_1216{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1212, [2]: CNode_1215}
#   9: @↻name_cells_1131:CNode_1217{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'bool(cell is not None and cell not in value_set)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'set': <class 'set'>, 'OrderedDict': <class 'collections.OrderedDict'>}), [3]: CNode_1216}
#  10: @↻name_cells_1131:CNode_1218{[0]: ValueNode<Primitive> Switch, [1]: CNode_1217, [2]: ValueNode<FuncGraph> ✓↻name_cells_1219, [3]: ValueNode<FuncGraph> ✗↻name_cells_1220}
#  11: @↻name_cells_1131:CNode_1221{[0]: CNode_1218}
#  12: @↻name_cells_1131:CNode_1223{[0]: ValueNode<FuncGraph> ↓↻name_cells_1222, [1]: CNode_1221}
#  13: @↻name_cells_1131:CNode_1224{[0]: ValueNode<Primitive> Depend, [1]: CNode_1223, [2]: CNode_1211}
#  14: @↻name_cells_1131:CNode_1225{[0]: ValueNode<Primitive> Return, [1]: CNode_1224}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↓name_cells_1132 : 0x56297602f810
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @↓name_cells_1132 parent: [subgraph @↵name_cells_990]() {
  Return(%para128_фcells)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1628/        return cells/
}
# Order:
#   1: @↓name_cells_1132:CNode_1226{[0]: ValueNode<Primitive> Return, [1]: param_фcells}


subgraph attr:
subgraph instance: ↻2✓↓enumerate__1138 : 0x56296f78f830
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @↻2✓↓enumerate__1138 parent: [subgraph @↵2✓↓enumerate__1011]() {
  %1(CNode_1136) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para129_@CNode_1136, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %2(CNode_1227) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
  %3(CNode_1013) = $(2✓↓enumerate__865):getattr(%para65_x, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %4(CNode_1014) = $(2✓↓enumerate__865):S_Prim_getitem(%3, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %5(CNode_1015) = $(2✓↓enumerate__865):S_Prim_make_range(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %6(CNode_1228) = call @ms_iter_512(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %7(i) = S_Prim_getitem(%6, %para129_@CNode_1136)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  %8(CNode_1229) = S_Prim_add(%para66_start, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2837/                ret += ((start + i, x[i]),)/
  %9(CNode_1230) = S_Prim_getitem(%para65_x, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2837/                ret += ((start + i, x[i]),)/
  %10(CNode_1231) = S_Prim_MakeTuple(%8, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2837/                ret += ((start + i, x[i]),)/
  %11(CNode_1232) = S_Prim_MakeTuple(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2837/                ret += ((start + i, x[i]),)/
  %12(ret) = S_Prim_add(%para130_фret, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2837/                ret += ((start + i, x[i]),)/
  %13(CNode_1233) = call @↵2✓↓enumerate__1011(%1, %12)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:155/        for i, layer in enumerate(self.gc):/
  %14(CNode_1234) = Depend[side_effect_propagate: I64(1)](%13, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
  Return(%14)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
}
# Order:
#   1: @↻2✓↓enumerate__1138:CNode_1228{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_1015}
#   2: @↻2✓↓enumerate__1138:i{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1228, [2]: param_@CNode_1136}
#   3: @↻2✓↓enumerate__1138:CNode_1136{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_1136, [2]: ValueNode<Int64Imm> 1}
#   4: @↻2✓↓enumerate__1138:CNode_1229{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: param_start, [2]: i}
#   5: @↻2✓↓enumerate__1138:CNode_1230{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: param_x, [2]: i}
#   6: @↻2✓↓enumerate__1138:CNode_1231{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1229, [2]: CNode_1230}
#   7: @↻2✓↓enumerate__1138:CNode_1232{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1231}
#   8: @↻2✓↓enumerate__1138:ret{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: param_фret, [2]: CNode_1232}
#   9: @↻2✓↓enumerate__1138:CNode_1235{[0]: ValueNode<Primitive> Return, [1]: CNode_1234}
#  10: @↻2✓↓enumerate__1138:CNode_1233{[0]: ValueNode<FuncGraph> ↵2✓↓enumerate__1011, [1]: CNode_1136, [2]: ret}


subgraph attr:
subgraph instance: ↓2✓↓enumerate__1139 : 0x56296f9669e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2827/def enumerate_(x, start=0):/
subgraph @↓2✓↓enumerate__1139 parent: [subgraph @↵2✓↓enumerate__1011]() {
  Return(%para130_фret)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:2836/            for i in range(x.shape[0]):/
}
# Order:
#   1: @↓2✓↓enumerate__1139:CNode_1236{[0]: ValueNode<Primitive> Return, [1]: param_фret}


subgraph attr:
subgraph instance: ✓↓check_is_const_int_1146 : 0x56296f9d2f90
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @✓↓check_is_const_int_1146 parent: [subgraph @check_is_const_int_732]() {
  %1(CNode_1237) = JoinedStr("For '", %para113_op_name, "', the '", %para114_arg_name, "' should be a const int number, but got ", %para112_x, ".")
      : (<null>, <null>, <null>, <null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3276/            f"For '{op_name}', the '{arg_name}' should be a const int number, but got {x}.")/
  %2(CNode_1238) = raise[side_effect_io: Bool(1)]("TypeError", %1, "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3275/        raise TypeError(/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3275/        raise TypeError(/
}
# Order:
#   1: @✓↓check_is_const_int_1146:CNode_1237{[0]: ValueNode<Primitive> JoinedStr, [1]: ValueNode<StringImm> For ', [2]: param_op_name, [3]: ValueNode<StringImm> ', the ', [4]: param_arg_name, [5]: ValueNode<StringImm> ' should be a const int number, but got , [6]: param_x, [7]: ValueNode<StringImm> .}
#   2: @✓↓check_is_const_int_1146:CNode_1238{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: CNode_1237, [3]: ValueNode<StringImm> None}
#   3: @✓↓check_is_const_int_1146:CNode_1239{[0]: ValueNode<Primitive> Return, [1]: CNode_1238}


subgraph attr:
subgraph instance: ✗↓check_is_const_int_1147 : 0x56296fa8ea00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @✗↓check_is_const_int_1147() {
  %1(CNode_1241) = call @2↓check_is_const_int_1240()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3274/    if not isinstance(x, int):/
}
# Order:
#   1: @✗↓check_is_const_int_1147:CNode_1241{[0]: ValueNode<FuncGraph> 2↓check_is_const_int_1240}
#   2: @✗↓check_is_const_int_1147:CNode_1242{[0]: ValueNode<Primitive> Return, [1]: CNode_1241}


subgraph attr:
subgraph instance: ✓dropout_1155 : 0x56296f9bb850
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1252/def dropout(input, p=0.5, training=True, seed=None):/
subgraph @✓dropout_1155 parent: [subgraph @dropout_1034]() {
  Return(%para131_input)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1288/        return input/
}
# Order:
#   1: @✓dropout_1155:CNode_1243{[0]: ValueNode<Primitive> Return, [1]: param_input}


subgraph attr:
subgraph instance: ✗dropout_1156 : 0x56296f9bd220
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1252/def dropout(input, p=0.5, training=True, seed=None):/
subgraph @✗dropout_1156 parent: [subgraph @dropout_1034]() {
  %1(CNode_1245) = call @↓dropout_1244()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1287/    if training is False:/
}
# Order:
#   1: @✗dropout_1156:CNode_1245{[0]: ValueNode<FuncGraph> ↓dropout_1244}
#   2: @✗dropout_1156:CNode_1246{[0]: ValueNode<Primitive> Return, [1]: CNode_1245}


subgraph attr:
training : 0
subgraph instance: ✗2↓mindspore_nn_layer_basic_Dense_construct_1160 : 0x56296f845fa0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✗2↓mindspore_nn_layer_basic_Dense_construct_1160 parent: [subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890]() {
  %1(CNode_1248) = call @3↓mindspore_nn_layer_basic_Dense_construct_1247()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:630/        if self.activation_flag:/
  Return(%1)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:630/        if self.activation_flag:/
}
# Order:
#   1: @✗2↓mindspore_nn_layer_basic_Dense_construct_1160:CNode_1248{[0]: ValueNode<FuncGraph> 3↓mindspore_nn_layer_basic_Dense_construct_1247}
#   2: @✗2↓mindspore_nn_layer_basic_Dense_construct_1160:CNode_1249{[0]: ValueNode<Primitive> Return, [1]: CNode_1248}


subgraph attr:
after_block : 1
subgraph instance: 5↓forward_fn_1169 : 0x562975fae6b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @5↓forward_fn_1169 parent: [subgraph @↓forward_fn_195](%para142_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w9) = $(forward_fn_63):S_Prim_getitem(%1, I64(8))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1250) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
  %4(CNode_1251) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
  %5(CNode_1252) = Switch(%4, @✓5↓forward_fn_1253, @✗5↓forward_fn_1254)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
  %6(CNode_1255) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
  %7(CNode_1257) = call @6↓forward_fn_1256(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
}
# Order:
#   1: @5↓forward_fn_1169:CNode_1250{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w9, [2]: ValueNode<Int64Imm> 0}
#   2: @5↓forward_fn_1169:CNode_1251{[0]: ValueNode<Primitive> Cond, [1]: CNode_1250, [2]: ValueNode<BoolImm> false}
#   3: @5↓forward_fn_1169:CNode_1252{[0]: ValueNode<Primitive> Switch, [1]: CNode_1251, [2]: ValueNode<FuncGraph> ✓5↓forward_fn_1253, [3]: ValueNode<FuncGraph> ✗5↓forward_fn_1254}
#   4: @5↓forward_fn_1169:CNode_1255{[0]: CNode_1252}
#   5: @5↓forward_fn_1169:CNode_1257{[0]: ValueNode<FuncGraph> 6↓forward_fn_1256, [1]: CNode_1255}
#   6: @5↓forward_fn_1169:CNode_1258{[0]: ValueNode<Primitive> Return, [1]: CNode_1257}


subgraph attr:
subgraph instance: stop_gradient_1184 : 0x56296f99cd10
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/grad/grad_func.py:1367/def stop_gradient(value):/
subgraph @stop_gradient_1184(%para143_value) {
  %1(CNode_1259) = ClassType()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/grad/grad_func.py:1401/    return P.StopGradient()(value)/
  %2(CNode_1260) = %1(%para143_value)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/grad/grad_func.py:1401/    return P.StopGradient()(value)/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/grad/grad_func.py:1401/    return P.StopGradient()(value)/
}
# Order:
#   1: @stop_gradient_1184:CNode_1259{[0]: ValueNode<ClassType> class 'mindspore.ops.operations.other_ops.StopGradient'}
#   2: @stop_gradient_1184:CNode_1260{[0]: CNode_1259, [1]: param_value}
#   3: @stop_gradient_1184:CNode_1261{[0]: ValueNode<Primitive> Return, [1]: CNode_1260}


subgraph attr:
after_block : 1
subgraph instance: 3↓clip_by_value_1192 : 0x562975fd4700
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @3↓clip_by_value_1192 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_1262) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %2(CNode_1263) = S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %3(CNode_1264) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %4(CNode_1265) = PyInterpret[side_effect_io: Bool(1)](Script['type(None)'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %5(CNode_1266) = S_Prim_MakeTuple(%4, ClassType, ClassType, ClassType)
      : (<null>, <null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %6(CNode_1267) = S_Prim_isinstance(%para84_clip_value_max, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %7(CNode_1268) = S_Prim_logical_not(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %8(CNode_1269) = Cond(%7, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %9(CNode_1270) = Switch(%8, @✓3↓clip_by_value_1271, @✗3↓clip_by_value_1272)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  %10(CNode_1273) = %9()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  Return(%10)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
}
# Order:
#   1: @3↓clip_by_value_1192:CNode_1262{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   2: @3↓clip_by_value_1192:CNode_1263{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple}
#   3: @3↓clip_by_value_1192:CNode_1264{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1262, [2]: CNode_1263}
#   4: @3↓clip_by_value_1192:CNode_1265{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'type(None)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'isinstance': <built-in function isinstance>, 'max_op': Prim[Maximum], 'cast_op': Prim[Cast], 'min_op': Prim[Minimum], 'Tensor': <class 'mindspore.common.tensor.Tensor'>, 'tuple': <class 'tuple'>, 'list': <class 'list'>, 'type': <class 'type'>, 'float': <class 'float'>, 'int': <class 'int'>}), [3]: CNode_1264}
#   5: @3↓clip_by_value_1192:CNode_1266{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1265, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor', [3]: ValueNode<ClassType> class 'float', [4]: ValueNode<ClassType> class 'int'}
#   6: @3↓clip_by_value_1192:CNode_1267{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_clip_value_max, [2]: CNode_1266}
#   7: @3↓clip_by_value_1192:CNode_1268{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_1267}
#   8: @3↓clip_by_value_1192:CNode_1269{[0]: ValueNode<Primitive> Cond, [1]: CNode_1268, [2]: ValueNode<BoolImm> false}
#   9: @3↓clip_by_value_1192:CNode_1270{[0]: ValueNode<Primitive> Switch, [1]: CNode_1269, [2]: ValueNode<FuncGraph> ✓3↓clip_by_value_1271, [3]: ValueNode<FuncGraph> ✗3↓clip_by_value_1272}
#  10: @3↓clip_by_value_1192:CNode_1273{[0]: CNode_1270}
#  11: @3↓clip_by_value_1192:CNode_1274{[0]: ValueNode<Primitive> Return, [1]: CNode_1273}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓_add_mixed_precision_flag_1207 : 0x56297605dc30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✓_add_mixed_precision_flag_1207 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1275) = getattr(ClassType, "set_mixed_precision_type")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1633/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP16)/
  %2(CNode_1276) = getattr(ClassType, "FP16")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1633/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP16)/
  %3(CNode_1277) = %1(ClassMember, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1633/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP16)/
  %4(CNode_1278) = StopGradient(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
  %5(CNode_1280) = call @↓_add_mixed_precision_flag_1279()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  %6(CNode_1281) = Depend[side_effect_propagate: I64(1)](%5, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1633/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP16)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1633/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP16)/
}
# Order:
#   1: @✓_add_mixed_precision_flag_1207:CNode_1275{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.Cell_', [2]: ValueNode<StringImm> set_mixed_precision_type}
#   2: @✓_add_mixed_precision_flag_1207:CNode_1276{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.MixedPrecisionType', [2]: ValueNode<StringImm> FP16}
#   3: @✓_add_mixed_precision_flag_1207:CNode_1277{[0]: CNode_1275, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>', [2]: CNode_1276}
#   4: @✓_add_mixed_precision_flag_1207:CNode_1282{[0]: ValueNode<Primitive> Return, [1]: CNode_1281}
#   5: @✓_add_mixed_precision_flag_1207:CNode_1280{[0]: ValueNode<FuncGraph> ↓_add_mixed_precision_flag_1279}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗_add_mixed_precision_flag_1208 : 0x562976049ed0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✗_add_mixed_precision_flag_1208 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1283) = call @↓_add_mixed_precision_flag_1279()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
}
# Order:
#   1: @✗_add_mixed_precision_flag_1208:CNode_1284{[0]: ValueNode<Primitive> Return, [1]: CNode_1283}
#   2: @✗_add_mixed_precision_flag_1208:CNode_1283{[0]: ValueNode<FuncGraph> ↓_add_mixed_precision_flag_1279}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↰_add_mixed_precision_flag_1202 : 0x562976048990
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↰_add_mixed_precision_flag_1202 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1285) = getattr(%para141_flags, "get")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  %2(CNode_1286) = %1("fp16", Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
}
# Order:
#   1: @↰_add_mixed_precision_flag_1202:CNode_1285{[0]: ValueNode<Primitive> getattr, [1]: param_flags, [2]: ValueNode<StringImm> get}
#   2: @↰_add_mixed_precision_flag_1202:CNode_1286{[0]: CNode_1285, [1]: ValueNode<StringImm> fp16, [2]: ValueNode<BoolImm> false}
#   3: @↰_add_mixed_precision_flag_1202:CNode_1287{[0]: ValueNode<Primitive> Return, [1]: CNode_1286}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↱_add_mixed_precision_flag_1203 : 0x562976047cd0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↱_add_mixed_precision_flag_1203 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1199) = $(_add_mixed_precision_flag_1125):S_Prim_in("fp16", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1632/        if "fp16" in flags and flags.get("fp16", False):/
}
# Order:
#   1: @↱_add_mixed_precision_flag_1203:CNode_1288{[0]: ValueNode<Primitive> Return, [1]: CNode_1199}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓↻name_cells_1222 : 0x562976037ea0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @↓↻name_cells_1222 parent: [subgraph @↻name_cells_1131](%para144_) {
  %1(CNode_1129) = $(↻name_cells_1131):MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para127_@CNode_1129, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %2(CNode_1289) = call @↵name_cells_990(%1, %para144_фcells)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
}
# Order:
#   1: @↓↻name_cells_1222:CNode_1290{[0]: ValueNode<Primitive> Return, [1]: CNode_1289}
#   2: @↓↻name_cells_1222:CNode_1289{[0]: ValueNode<FuncGraph> ↵name_cells_990, [1]: CNode_1129, [2]: param_фcells}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓↻name_cells_1219 : 0x562976035960
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @✓↻name_cells_1219 parent: [subgraph @↻name_cells_1131]() {
  %1(CNode_1126) = $(name_cells_849):MakeTuple("gc1", "gc2", "linear1")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %2(CNode_1127) = $(name_cells_849):MakeTuple(@models_mind_gcn_GraphConvolution_construct_408, @models_mind_gcn_GraphConvolution_construct_418, @mindspore_nn_layer_basic_Dense_construct_597)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %3(CNode_996) = $(name_cells_849):make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %4(CNode_995) = $(name_cells_849):getattr(%3, "items")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %5(CNode_997) = $(name_cells_849):%4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %6(CNode_1213) = $(↻name_cells_1131):call @ms_iter_512(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %7(CNode_1214) = $(↻name_cells_1131):S_Prim_getitem(%6, %para127_@CNode_1129)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %8(name) = $(↻name_cells_1131):S_Prim_getitem(%7, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %9(cell) = $(↻name_cells_1131):S_Prim_getitem(%7, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1624/        for name, cell in self._cells.items():/
  %10(CNode_1291) = S_Prim_setitem(%para128_фcells, %8, %9)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1627/                cells[name] = cell/
  %11(CNode_1292) = S_Prim_MakeTuple("cell", "value_set")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1626/                value_set.add(cell)/
  %12(CNode_992) = $(name_cells_849):S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %13(CNode_993) = $(name_cells_849):S_Prim_MakeTuple()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %14(CNode_994) = $(name_cells_849):S_Prim_make_dict(%12, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %15(value_set) = $(name_cells_849):PyInterpret[side_effect_io: Bool(1)](Script['set()'], InterpretedObject, %14)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1622/        value_set = set()/
  %16(CNode_1293) = S_Prim_MakeTuple(%9, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1626/                value_set.add(cell)/
  %17(CNode_1294) = S_Prim_make_dict(%11, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1626/                value_set.add(cell)/
  %18(CNode_1295) = PyInterpret[side_effect_io: Bool(1)](Script['value_set.add(cell)'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1626/                value_set.add(cell)/
  %19(CNode_1296) = StopGradient(%18)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
  %20(CNode_1297) = Depend[side_effect_propagate: I64(1)](%10, %19)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1561/        return self.name_cells().values()/
  Return(%20)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1626/                value_set.add(cell)/
}
# Order:
#   1: @✓↻name_cells_1219:CNode_1292{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> cell, [2]: ValueNode<StringImm> value_set}
#   2: @✓↻name_cells_1219:CNode_1293{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: cell, [2]: value_set}
#   3: @✓↻name_cells_1219:CNode_1294{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1292, [2]: CNode_1293}
#   4: @✓↻name_cells_1219:CNode_1295{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'value_set.add(cell)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'set': <class 'set'>, 'OrderedDict': <class 'collections.OrderedDict'>}), [3]: CNode_1294}
#   5: @✓↻name_cells_1219:CNode_1291{[0]: ValueNode<DoSignaturePrimitive> S_Prim_setitem, [1]: param_фcells, [2]: name, [3]: cell}
#   6: @✓↻name_cells_1219:CNode_1298{[0]: ValueNode<Primitive> Return, [1]: CNode_1297}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗↻name_cells_1220 : 0x562976034a80
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1597/    def name_cells(self):/
subgraph @✗↻name_cells_1220 parent: [subgraph @↵name_cells_990]() {
  Return(%para128_фcells)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1625/            if cell is not None and cell not in value_set:/
}
# Order:
#   1: @✗↻name_cells_1220:CNode_1299{[0]: ValueNode<Primitive> Return, [1]: param_фcells}


subgraph attr:
after_block : 1
subgraph instance: 2↓check_is_const_int_1240 : 0x56296faece90
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3269/def check_is_const_int(x, op_name, arg_name):/
subgraph @2↓check_is_const_int_1240() {
  Return(Bool(1))
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/_extends/parse/standard_method.py:3277/    return True/
}
# Order:
#   1: @2↓check_is_const_int_1240:CNode_1300{[0]: ValueNode<Primitive> Return, [1]: ValueNode<BoolImm> true}


subgraph attr:
after_block : 1
subgraph instance: ↓dropout_1244 : 0x562975f89b70
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1252/def dropout(input, p=0.5, training=True, seed=None):/
subgraph @↓dropout_1244 parent: [subgraph @dropout_1034]() {
  %1(CNode_1301) = S_Prim_MakeTuple("keep_prob", "Seed0", "Seed1")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1291/    dropout_op = P.Dropout(keep_prob=keep_prob, Seed0=seed0, Seed1=seed1)/
  %2(keep_prob) = S_Prim_sub(I64(1), %para132_p)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1289/    keep_prob = 1 - p/
  %3(CNode_1302) = S_Prim__get_seed[constexpr_prim: Bool(1), forbid_reuse_result: Bool(1)](%para134_seed, "dropout")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1290/    seed0, seed1 = _get_seed(seed, "dropout")/
  %4(seed0) = S_Prim_getitem(%3, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1290/    seed0, seed1 = _get_seed(seed, "dropout")/
  %5(seed1) = S_Prim_getitem(%3, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1290/    seed0, seed1 = _get_seed(seed, "dropout")/
  %6(CNode_1303) = S_Prim_MakeTuple(%2, %4, %5)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1291/    dropout_op = P.Dropout(keep_prob=keep_prob, Seed0=seed0, Seed1=seed1)/
  %7(CNode_1304) = S_Prim_make_dict(%1, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1291/    dropout_op = P.Dropout(keep_prob=keep_prob, Seed0=seed0, Seed1=seed1)/
  %8(dropout_op) = UnpackCall_unpack_call(ClassType, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1291/    dropout_op = P.Dropout(keep_prob=keep_prob, Seed0=seed0, Seed1=seed1)/
  %9(dropout_op) = S_Prim__set_prim_op_user_data[constexpr_prim: Bool(1)](%8, "random_cache", Bool(0))
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1292/    dropout_op = _set_prim_op_user_data(dropout_op, "random_cache", False)/
  %10(CNode_1305) = %9(%para131_input)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1293/    out, _ = dropout_op(input)/
  %11(out) = S_Prim_getitem(%10, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1293/    out, _ = dropout_op(input)/
  Return(%11)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/nn_func.py:1294/    return out/
}
# Order:
#   1: @↓dropout_1244:keep_prob{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: ValueNode<Int64Imm> 1, [2]: param_p}
#   2: @↓dropout_1244:CNode_1302{[0]: ValueNode<DoSignaturePrimitive> S_Prim__get_seed, [1]: param_seed, [2]: ValueNode<StringImm> dropout}
#   3: @↓dropout_1244:seed0{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1302, [2]: ValueNode<Int64Imm> 0}
#   4: @↓dropout_1244:seed1{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1302, [2]: ValueNode<Int64Imm> 1}
#   5: @↓dropout_1244:CNode_1301{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> keep_prob, [2]: ValueNode<StringImm> Seed0, [3]: ValueNode<StringImm> Seed1}
#   6: @↓dropout_1244:CNode_1303{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: keep_prob, [2]: seed0, [3]: seed1}
#   7: @↓dropout_1244:CNode_1304{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1301, [2]: CNode_1303}
#   8: @↓dropout_1244:dropout_op{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.1306, [1]: ValueNode<ClassType> class 'mindspore.ops.operations.nn_ops.Dropout', [2]: CNode_1304}
#   9: @↓dropout_1244:dropout_op{[0]: ValueNode<DoSignaturePrimitive> S_Prim__set_prim_op_user_data, [1]: dropout_op, [2]: ValueNode<StringImm> random_cache, [3]: ValueNode<BoolImm> false}
#  10: @↓dropout_1244:CNode_1305{[0]: dropout_op, [1]: param_input}
#  11: @↓dropout_1244:out{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1305, [2]: ValueNode<Int64Imm> 0}
#  12: @↓dropout_1244:CNode_1307{[0]: ValueNode<Primitive> Return, [1]: out}


subgraph attr:
training : 0
subgraph instance: 3↓mindspore_nn_layer_basic_Dense_construct_1247 : 0x56296f960ed0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @3↓mindspore_nn_layer_basic_Dense_construct_1247 parent: [subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890]() {
  %1(x_shape) = $(mindspore_nn_layer_basic_Dense_construct_597):S_Prim_Shape(%para99_x)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:623/        x_shape = self.shape_op(x)/
  %2(CNode_1308) = S_Prim_inner_len(%1)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
  %3(CNode_1309) = S_Prim_not_equal(%2, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
  %4(CNode_1310) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
  %5(CNode_1311) = Switch(%4, @✓3↓mindspore_nn_layer_basic_Dense_construct_1312, @✗3↓mindspore_nn_layer_basic_Dense_construct_1313)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
  %6(CNode_1314) = %5()
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
  %7(CNode_1316) = call @4↓mindspore_nn_layer_basic_Dense_construct_1315(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:164/        x = self.linear1(x)/
  Return(%7)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
}
# Order:
#   1: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1308{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: x_shape}
#   2: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1309{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: CNode_1308, [2]: ValueNode<Int64Imm> 2}
#   3: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1310{[0]: ValueNode<Primitive> Cond, [1]: CNode_1309, [2]: ValueNode<BoolImm> false}
#   4: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1311{[0]: ValueNode<Primitive> Switch, [1]: CNode_1310, [2]: ValueNode<FuncGraph> ✓3↓mindspore_nn_layer_basic_Dense_construct_1312, [3]: ValueNode<FuncGraph> ✗3↓mindspore_nn_layer_basic_Dense_construct_1313}
#   5: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1314{[0]: CNode_1311}
#   6: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1316{[0]: ValueNode<FuncGraph> 4↓mindspore_nn_layer_basic_Dense_construct_1315, [1]: CNode_1314}
#   7: @3↓mindspore_nn_layer_basic_Dense_construct_1247:CNode_1317{[0]: ValueNode<Primitive> Return, [1]: CNode_1316}


subgraph attr:
after_block : 1
subgraph instance: 6↓forward_fn_1256 : 0x562976104c10
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @6↓forward_fn_1256 parent: [subgraph @↓forward_fn_195](%para145_) {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w10) = $(forward_fn_63):S_Prim_getitem(%1, I64(9))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1318) = S_Prim_not_equal(%2, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
  %4(CNode_1319) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
  %5(CNode_1320) = Switch(%4, @✓6↓forward_fn_1321, @✗6↓forward_fn_1322)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
  %6(CNode_1323) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
}
# Order:
#   1: @6↓forward_fn_1256:output2{[0]: ValueNode<FuncGraph> models_mind_gcn_GCN_construct_197, [1]: ori_features, [2]: modified_adj}
#   2: @6↓forward_fn_1256:CNode_1318{[0]: ValueNode<DoSignaturePrimitive> S_Prim_not_equal, [1]: w10, [2]: ValueNode<Int64Imm> 0}
#   3: @6↓forward_fn_1256:CNode_1319{[0]: ValueNode<Primitive> Cond, [1]: CNode_1318, [2]: ValueNode<BoolImm> false}
#   4: @6↓forward_fn_1256:CNode_1320{[0]: ValueNode<Primitive> Switch, [1]: CNode_1319, [2]: ValueNode<FuncGraph> ✓6↓forward_fn_1321, [3]: ValueNode<FuncGraph> ✗6↓forward_fn_1322}
#   5: @6↓forward_fn_1256:CNode_1323{[0]: CNode_1320}
#   6: @6↓forward_fn_1256:CNode_1324{[0]: ValueNode<Primitive> Return, [1]: CNode_1323}


subgraph attr:
subgraph instance: ✓5↓forward_fn_1253 : 0x5629760e88b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓5↓forward_fn_1253 parent: [subgraph @5↓forward_fn_1169]() {
  %1(CNode_1326) = call @↵✓5↓forward_fn_1325(I64(0), %para142_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
}
# Order:
#   1: @✓5↓forward_fn_1253:CNode_1327{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: ValueNode<Int64Imm> 2, [2]: ValueNode<Int64Imm> 1}
#   2: @✓5↓forward_fn_1253:CNode_1328{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_range, [1]: CNode_1327, [2]: ValueNode<Int64Imm> 2}
#   3: @✓5↓forward_fn_1253:CNode_1329{[0]: ValueNode<DoSignaturePrimitive> S_Prim_inner_len, [1]: CNode_1328}
#   4: @✓5↓forward_fn_1253:CNode_1330{[0]: ValueNode<Primitive> Return, [1]: CNode_1326}
#   5: @✓5↓forward_fn_1253:CNode_1326{[0]: ValueNode<FuncGraph> ↵✓5↓forward_fn_1325, [1]: ValueNode<Int64Imm> 0, [2]: param_фloss}


subgraph attr:
subgraph instance: ✗5↓forward_fn_1254 : 0x562975fb0f90
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗5↓forward_fn_1254 parent: [subgraph @5↓forward_fn_1169]() {
  Return(%para142_фloss)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:188/        if w9 != 0:/
}
# Order:
#   1: @✗5↓forward_fn_1254:CNode_1331{[0]: ValueNode<Primitive> Return, [1]: param_фloss}


subgraph attr:
subgraph instance: ✓3↓clip_by_value_1271 : 0x562975ffe780
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓3↓clip_by_value_1271() {
  %1(CNode_1332) = raise[side_effect_io: Bool(1)]("TypeError", "For 'clip_by_value', the type of argument 'clip_value_max' must be not one of None, Tensor, float, int", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:207/        raise TypeError("For 'clip_by_value', the type of argument 'clip_value_max' must be "/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:207/        raise TypeError("For 'clip_by_value', the type of argument 'clip_value_max' must be "/
}
# Order:
#   1: @✓3↓clip_by_value_1271:CNode_1332{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: ValueNode<StringImm> For 'clip_by_value', the type of argument 'clip_value_max' must be not one of None, Tensor, float, int, [3]: ValueNode<StringImm> None}
#   2: @✓3↓clip_by_value_1271:CNode_1333{[0]: ValueNode<Primitive> Return, [1]: CNode_1332}


subgraph attr:
subgraph instance: ✗3↓clip_by_value_1272 : 0x562975fd80b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗3↓clip_by_value_1272 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_1335) = call @4↓clip_by_value_1334()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:206/    if not isinstance(clip_value_max, (type(None), Tensor, float, int)):/
}
# Order:
#   1: @✗3↓clip_by_value_1272:CNode_1335{[0]: ValueNode<FuncGraph> 4↓clip_by_value_1334}
#   2: @✗3↓clip_by_value_1272:CNode_1336{[0]: ValueNode<Primitive> Return, [1]: CNode_1335}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: ↓_add_mixed_precision_flag_1279 : 0x56297604b900
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↓_add_mixed_precision_flag_1279 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1337) = S_Prim_in("fp32", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %2(CNode_1338) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %3(CNode_1339) = Switch(%2, @↰↓_add_mixed_precision_flag_1340, @↱↓_add_mixed_precision_flag_1341)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %4(CNode_1342) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %5(CNode_1343) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %6(CNode_1344) = Switch(%5, @✓↓_add_mixed_precision_flag_1345, @✗↓_add_mixed_precision_flag_1346)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %7(CNode_1347) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
}
# Order:
#   1: @↓_add_mixed_precision_flag_1279:CNode_1337{[0]: ValueNode<DoSignaturePrimitive> S_Prim_in, [1]: ValueNode<StringImm> fp32, [2]: param_flags}
#   2: @↓_add_mixed_precision_flag_1279:CNode_1338{[0]: ValueNode<Primitive> Cond, [1]: CNode_1337, [2]: ValueNode<BoolImm> false}
#   3: @↓_add_mixed_precision_flag_1279:CNode_1339{[0]: ValueNode<Primitive> Switch, [1]: CNode_1338, [2]: ValueNode<FuncGraph> ↰↓_add_mixed_precision_flag_1340, [3]: ValueNode<FuncGraph> ↱↓_add_mixed_precision_flag_1341}
#   4: @↓_add_mixed_precision_flag_1279:CNode_1342{[0]: CNode_1339}
#   5: @↓_add_mixed_precision_flag_1279:CNode_1343{[0]: ValueNode<Primitive> Cond, [1]: CNode_1342, [2]: ValueNode<BoolImm> false}
#   6: @↓_add_mixed_precision_flag_1279:CNode_1344{[0]: ValueNode<Primitive> Switch, [1]: CNode_1343, [2]: ValueNode<FuncGraph> ✓↓_add_mixed_precision_flag_1345, [3]: ValueNode<FuncGraph> ✗↓_add_mixed_precision_flag_1346}
#   7: @↓_add_mixed_precision_flag_1279:CNode_1347{[0]: CNode_1344}
#   8: @↓_add_mixed_precision_flag_1279:CNode_1348{[0]: ValueNode<Primitive> Return, [1]: CNode_1347}


subgraph attr:
after_block : 1
training : 0
subgraph instance: 4↓mindspore_nn_layer_basic_Dense_construct_1315 : 0x56296f9e0130
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @4↓mindspore_nn_layer_basic_Dense_construct_1315(%para146_) {
  Return(%para146_фx)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:635/        return x/
}
# Order:
#   1: @4↓mindspore_nn_layer_basic_Dense_construct_1315:CNode_1349{[0]: ValueNode<Primitive> Return, [1]: param_фx}


subgraph attr:
training : 0
subgraph instance: ✓3↓mindspore_nn_layer_basic_Dense_construct_1312 : 0x56296f8391e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✓3↓mindspore_nn_layer_basic_Dense_construct_1312 parent: [subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890]() {
  %1(x) = $(↓mindspore_nn_layer_basic_Dense_construct_758):S_Prim_MatMul[output_names: ["output"], transpose_a: Bool(0), input_names: ["x1", "x2"], transpose_x2: Bool(1), transpose_x1: Bool(0), transpose_b: Bool(1)](%para115_фx, %para13_linear1.weight)
      : (<null>, <Ref[Tensor[Float32]], (7, 16), ref_key=:linear1.weight>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:627/        x = self.matmul(x, self.weight)/
  %2(x) = $(✓↓mindspore_nn_layer_basic_Dense_construct_890):S_Prim_BiasAdd[output_names: ["output"], format: "NCHW", input_names: ["x", "b"], data_format: "NCHW"](%1, %para12_linear1.bias)
      : (<null>, <Ref[Tensor[Float32]], (7), ref_key=:linear1.bias>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:629/            x = self.bias_add(x, self.bias)/
  %3(x_shape) = $(mindspore_nn_layer_basic_Dense_construct_597):S_Prim_Shape(%para99_x)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:623/        x_shape = self.shape_op(x)/
  %4(CNode_1350) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %5(CNode_1351) = S_Prim_make_slice(None, %4, None)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %6(CNode_1352) = S_Prim_getitem(%3, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %7(CNode_1354) = call @shape_1353(%2)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %8(CNode_1355) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %9(CNode_1356) = S_Prim_getitem(%7, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %10(CNode_1357) = S_Prim_MakeTuple(%9)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %11(out_shape) = S_Prim_add(%6, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
  %12(x) = S_Prim_Reshape[output_names: ["output"], input_names: ["tensor", "shape"]](%2, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:634/            x = self.reshape(x, out_shape)/
  Return(%12)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:633/            out_shape = x_shape[:-1] + (F.shape(x)[-1],)/
}
# Order:
#   1: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1350{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   2: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1351{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_slice, [1]: ValueNode<None> None, [2]: CNode_1350, [3]: ValueNode<None> None}
#   3: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1352{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: x_shape, [2]: CNode_1351}
#   4: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1354{[0]: ValueNode<FuncGraph> shape_1353, [1]: x}
#   5: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1355{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   6: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1356{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1354, [2]: CNode_1355}
#   7: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1357{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: CNode_1356}
#   8: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:out_shape{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: CNode_1352, [2]: CNode_1357}
#   9: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:x{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Reshape, [1]: x, [2]: out_shape}
#  10: @✓3↓mindspore_nn_layer_basic_Dense_construct_1312:CNode_1358{[0]: ValueNode<Primitive> Return, [1]: x}


subgraph attr:
training : 0
subgraph instance: ✗3↓mindspore_nn_layer_basic_Dense_construct_1313 : 0x56296fad39c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:622/    def construct(self, x):/
subgraph @✗3↓mindspore_nn_layer_basic_Dense_construct_1313 parent: [subgraph @✓↓mindspore_nn_layer_basic_Dense_construct_890]() {
  %1(x) = $(↓mindspore_nn_layer_basic_Dense_construct_758):S_Prim_MatMul[output_names: ["output"], transpose_a: Bool(0), input_names: ["x1", "x2"], transpose_x2: Bool(1), transpose_x1: Bool(0), transpose_b: Bool(1)](%para115_фx, %para13_linear1.weight)
      : (<null>, <Ref[Tensor[Float32]], (7, 16), ref_key=:linear1.weight>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:627/        x = self.matmul(x, self.weight)/
  %2(x) = $(✓↓mindspore_nn_layer_basic_Dense_construct_890):S_Prim_BiasAdd[output_names: ["output"], format: "NCHW", input_names: ["x", "b"], data_format: "NCHW"](%1, %para12_linear1.bias)
      : (<null>, <Ref[Tensor[Float32]], (7), ref_key=:linear1.bias>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:629/            x = self.bias_add(x, self.bias)/
  Return(%2)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/layer/basic.py:632/        if len(x_shape) != 2:/
}
# Order:
#   1: @✗3↓mindspore_nn_layer_basic_Dense_construct_1313:CNode_1359{[0]: ValueNode<Primitive> Return, [1]: x}


subgraph attr:
subgraph instance: ✓6↓forward_fn_1321 : 0x56297610b280
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓6↓forward_fn_1321 parent: [subgraph @6↓forward_fn_1256]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_1360) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
  %3(CNode_1361) = S_Prim_equal(%2, "KDE")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
  %4(CNode_1362) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
  %5(CNode_1363) = Switch(%4, @2✓6↓forward_fn_1364, @✗✓6↓forward_fn_1365)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
  %6(CNode_1366) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
  %7(CNode_1368) = call @↓✓6↓forward_fn_1367(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
}
# Order:
#   1: @✓6↓forward_fn_1321:CNode_1360{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✓6↓forward_fn_1321:CNode_1361{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1360, [2]: ValueNode<StringImm> KDE}
#   3: @✓6↓forward_fn_1321:CNode_1362{[0]: ValueNode<Primitive> Cond, [1]: CNode_1361, [2]: ValueNode<BoolImm> false}
#   4: @✓6↓forward_fn_1321:CNode_1363{[0]: ValueNode<Primitive> Switch, [1]: CNode_1362, [2]: ValueNode<FuncGraph> 2✓6↓forward_fn_1364, [3]: ValueNode<FuncGraph> ✗✓6↓forward_fn_1365}
#   5: @✓6↓forward_fn_1321:CNode_1366{[0]: CNode_1363}
#   6: @✓6↓forward_fn_1321:CNode_1368{[0]: ValueNode<FuncGraph> ↓✓6↓forward_fn_1367, [1]: CNode_1366}
#   7: @✓6↓forward_fn_1321:CNode_1369{[0]: ValueNode<Primitive> Return, [1]: CNode_1368}


subgraph attr:
subgraph instance: ✗6↓forward_fn_1322 : 0x562976108f40
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗6↓forward_fn_1322 parent: [subgraph @6↓forward_fn_1256]() {
  %1(CNode_1371) = call @7↓forward_fn_1370(%para145_фloss)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:211/        if w10 != 0:/
}
# Order:
#   1: @✗6↓forward_fn_1322:CNode_1372{[0]: ValueNode<Primitive> Return, [1]: CNode_1371}
#   2: @✗6↓forward_fn_1322:CNode_1371{[0]: ValueNode<FuncGraph> 7↓forward_fn_1370, [1]: param_фloss}


subgraph attr:
subgraph instance: ↵✓5↓forward_fn_1325 : 0x5629760eb530
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↵✓5↓forward_fn_1325 parent: [subgraph @✓5↓forward_fn_1253](%para147_, %para148_) {
  %1(CNode_1327) = $(✓5↓forward_fn_1253):S_Prim_sub(I64(2), I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %2(CNode_1328) = $(✓5↓forward_fn_1253):S_Prim_make_range(%1, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %3(CNode_1329) = $(✓5↓forward_fn_1253):S_Prim_inner_len(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %4(CNode_1373) = MultitypeFuncGraph_less{(List, List), (Tuple, Tuple), (String, String), (Number, Tensor), (Tensor, Tensor), (Number, Number), (Tensor, Number)}(%para147_@CNode_1374, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %5(CNode_1375) = Switch(%4, @↻✓5↓forward_fn_1376, @↓✓5↓forward_fn_1377)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %6(CNode_1378) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
}
# Order:
#   1: @↵✓5↓forward_fn_1325:CNode_1373{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-less.346, [1]: param_@CNode_1374, [2]: CNode_1329}
#   2: @↵✓5↓forward_fn_1325:CNode_1375{[0]: ValueNode<Primitive> Switch, [1]: CNode_1373, [2]: ValueNode<FuncGraph> ↻✓5↓forward_fn_1376, [3]: ValueNode<FuncGraph> ↓✓5↓forward_fn_1377}
#   3: @↵✓5↓forward_fn_1325:CNode_1378{[0]: CNode_1375}
#   4: @↵✓5↓forward_fn_1325:CNode_1379{[0]: ValueNode<Primitive> Return, [1]: CNode_1378}


subgraph attr:
after_block : 1
subgraph instance: 4↓clip_by_value_1334 : 0x562975fd9890
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @4↓clip_by_value_1334 parent: [subgraph @clip_by_value_371]() {
  %1(CNode_1380) = S_Prim_MakeTuple(ClassType, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
  %2(CNode_1381) = S_Prim_isinstance(%para83_clip_value_min, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
  %3(CNode_1382) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
  %4(CNode_1383) = Switch(%3, @✓4↓clip_by_value_1384, @✗4↓clip_by_value_1385)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
  %5(CNode_1386) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
  %6(CNode_1388) = call @5↓clip_by_value_1387(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
}
# Order:
#   1: @4↓clip_by_value_1334:CNode_1380{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<ClassType> class 'float', [2]: ValueNode<ClassType> class 'int'}
#   2: @4↓clip_by_value_1334:CNode_1381{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_clip_value_min, [2]: CNode_1380}
#   3: @4↓clip_by_value_1334:CNode_1382{[0]: ValueNode<Primitive> Cond, [1]: CNode_1381, [2]: ValueNode<BoolImm> false}
#   4: @4↓clip_by_value_1334:CNode_1383{[0]: ValueNode<Primitive> Switch, [1]: CNode_1382, [2]: ValueNode<FuncGraph> ✓4↓clip_by_value_1384, [3]: ValueNode<FuncGraph> ✗4↓clip_by_value_1385}
#   5: @4↓clip_by_value_1334:CNode_1386{[0]: CNode_1383}
#   6: @4↓clip_by_value_1334:CNode_1388{[0]: ValueNode<FuncGraph> 5↓clip_by_value_1387, [1]: CNode_1386}
#   7: @4↓clip_by_value_1334:CNode_1389{[0]: ValueNode<Primitive> Return, [1]: CNode_1388}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓↓_add_mixed_precision_flag_1345 : 0x56297605b640
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✓↓_add_mixed_precision_flag_1345 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1390) = getattr(ClassType, "set_mixed_precision_type")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1635/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP32)/
  %2(CNode_1391) = getattr(ClassType, "FP32")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1635/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP32)/
  %3(CNode_1392) = %1(ClassMember, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1635/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP32)/
  %4(CNode_1393) = StopGradient(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
  %5(CNode_1395) = call @2↓_add_mixed_precision_flag_1394()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  %6(CNode_1396) = Depend[side_effect_propagate: I64(1)](%5, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1635/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP32)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1635/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.FP32)/
}
# Order:
#   1: @✓↓_add_mixed_precision_flag_1345:CNode_1390{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.Cell_', [2]: ValueNode<StringImm> set_mixed_precision_type}
#   2: @✓↓_add_mixed_precision_flag_1345:CNode_1391{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.MixedPrecisionType', [2]: ValueNode<StringImm> FP32}
#   3: @✓↓_add_mixed_precision_flag_1345:CNode_1392{[0]: CNode_1390, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>', [2]: CNode_1391}
#   4: @✓↓_add_mixed_precision_flag_1345:CNode_1397{[0]: ValueNode<Primitive> Return, [1]: CNode_1396}
#   5: @✓↓_add_mixed_precision_flag_1345:CNode_1395{[0]: ValueNode<FuncGraph> 2↓_add_mixed_precision_flag_1394}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗↓_add_mixed_precision_flag_1346 : 0x5629760509e0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✗↓_add_mixed_precision_flag_1346 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1398) = call @2↓_add_mixed_precision_flag_1394()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1702/        self._add_mixed_precision_flag(**flags)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
}
# Order:
#   1: @✗↓_add_mixed_precision_flag_1346:CNode_1399{[0]: ValueNode<Primitive> Return, [1]: CNode_1398}
#   2: @✗↓_add_mixed_precision_flag_1346:CNode_1398{[0]: ValueNode<FuncGraph> 2↓_add_mixed_precision_flag_1394}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↰↓_add_mixed_precision_flag_1340 : 0x56297604f440
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↰↓_add_mixed_precision_flag_1340 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1400) = getattr(%para141_flags, "get")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  %2(CNode_1401) = %1("fp32", Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
}
# Order:
#   1: @↰↓_add_mixed_precision_flag_1340:CNode_1400{[0]: ValueNode<Primitive> getattr, [1]: param_flags, [2]: ValueNode<StringImm> get}
#   2: @↰↓_add_mixed_precision_flag_1340:CNode_1401{[0]: CNode_1400, [1]: ValueNode<StringImm> fp32, [2]: ValueNode<BoolImm> false}
#   3: @↰↓_add_mixed_precision_flag_1340:CNode_1402{[0]: ValueNode<Primitive> Return, [1]: CNode_1401}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↱↓_add_mixed_precision_flag_1341 : 0x56297604e5c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↱↓_add_mixed_precision_flag_1341 parent: [subgraph @↓_add_mixed_precision_flag_1279]() {
  %1(CNode_1337) = $(↓_add_mixed_precision_flag_1279):S_Prim_in("fp32", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1634/        if "fp32" in flags and flags.get("fp32", False):/
}
# Order:
#   1: @↱↓_add_mixed_precision_flag_1341:CNode_1403{[0]: ValueNode<Primitive> Return, [1]: CNode_1337}


subgraph attr:
subgraph instance: shape_1353 : 0x56296f979950
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1484/def shape(input_x):/
subgraph @shape_1353(%para149_input_x) {
  %1(CNode_1404) = S_Prim_Shape(%para149_input_x)
      : (<null>) -> (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1510/    return shape_(input_x)/
  Return(%1)
      : (<null>)
      #scope: (Default/linear1-Dense)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/array_func.py:1510/    return shape_(input_x)/
}
# Order:
#   1: @shape_1353:CNode_1404{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Shape, [1]: param_input_x}
#   2: @shape_1353:CNode_1405{[0]: ValueNode<Primitive> Return, [1]: CNode_1404}


subgraph attr:
after_block : 1
subgraph instance: ↓✓6↓forward_fn_1367 : 0x56297611ab60
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✓6↓forward_fn_1367 parent: [subgraph @6↓forward_fn_1256](%para150_) {
  %1(CNode_1406) = S_Prim_MakeTuple("loss", "c10")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:223/            loss += c10/
  %2(CNode_1407) = S_Prim_MakeTuple(%para145_фloss, %para150_фc10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:223/            loss += c10/
  %3(CNode_1408) = S_Prim_make_dict(%1, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:223/            loss += c10/
  %4(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c10'], InterpretedObject, %3)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:223/            loss += c10/
  %5(CNode_1409) = call @7↓forward_fn_1370(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:212/            if args.measure == "KDE":/
}
# Order:
#   1: @↓✓6↓forward_fn_1367:CNode_1406{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> loss, [2]: ValueNode<StringImm> c10}
#   2: @↓✓6↓forward_fn_1367:CNode_1407{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_фloss, [2]: param_фc10}
#   3: @↓✓6↓forward_fn_1367:CNode_1408{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1406, [2]: CNode_1407}
#   4: @↓✓6↓forward_fn_1367:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c10', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>, 'range': <class 'range'>}), [3]: CNode_1408}
#   5: @↓✓6↓forward_fn_1367:CNode_1410{[0]: ValueNode<Primitive> Return, [1]: CNode_1409}
#   6: @↓✓6↓forward_fn_1367:CNode_1409{[0]: ValueNode<FuncGraph> 7↓forward_fn_1370, [1]: loss}


subgraph attr:
subgraph instance: 2✓6↓forward_fn_1364 : 0x5629761168b0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✓6↓forward_fn_1364 parent: [subgraph @6↓forward_fn_1256]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w10) = $(forward_fn_63):S_Prim_getitem(%1, I64(9))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1411) = S_Prim_MakeTuple("sigma", "num_bins", "normalize")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:213/                calc2 = MutualInformation(/
  %4(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(Y_A) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%4, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:133/        Y_A = self.victim_model(ori_features, adj)/
  %7(CNode_1412) = getattr(%6, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:214/                    sigma=0.4, num_bins=Y_A.shape[1], normalize=True)/
  %8(CNode_1413) = S_Prim_getitem(%7, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:214/                    sigma=0.4, num_bins=Y_A.shape[1], normalize=True)/
  %9(CNode_1414) = S_Prim_MakeTuple(F32(0.4), %8, Bool(1))
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:213/                calc2 = MutualInformation(/
  %10(CNode_1415) = S_Prim_make_dict(%3, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:213/                calc2 = MutualInformation(/
  %11(calc2) = UnpackCall_unpack_call(ClassType, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:213/                calc2 = MutualInformation(/
  %12(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %13(CNode_1416) = S_Prim_getitem(%6, %12)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %14(CNode_1417) = S_Prim_MakeTuple("idx_attack", "output2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %15(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %16(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%15)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %17(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(CNode_80) = $(forward_fn_63):getattr(%17, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %19(modified_adj) = $(forward_fn_63):call @adding_noise_190(%16, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %20(output2) = $(6↓forward_fn_1256):call @models_mind_gcn_GCN_construct_197(%4, %19)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:210/        output2 = self.victim_model(ori_features, modified_adj)/
  %21(CNode_1418) = S_Prim_MakeTuple(%12, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %22(CNode_1419) = S_Prim_make_dict(%14, %21)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %23(CNode_1420) = PyInterpret[side_effect_io: Bool(1)](Script['torch.softmax(output2[idx_attack], dim=1)'], InterpretedObject, %22)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %24(CNode_1421) = %11(%13, %23)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %25(CNode_1422) = S_Prim_getitem(%24, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %26(CNode_1423) = S_Prim_mul(%2, %25)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  %27(CNode_1424) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c10")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:216/                    0]*Align_Parameter_Cora["c10"]/
  %28(c10) = S_Prim_mul(%26, %27)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:215/                c10 = w10 * calc2(Y_A[idx_attack], torch.softmax(output2[idx_attack], dim=1))[/
  Return(%28)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:213/                calc2 = MutualInformation(/
}
# Order:
#   1: @2✓6↓forward_fn_1364:CNode_1412{[0]: ValueNode<Primitive> getattr, [1]: Y_A, [2]: ValueNode<StringImm> shape}
#   2: @2✓6↓forward_fn_1364:CNode_1413{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1412, [2]: ValueNode<Int64Imm> 1}
#   3: @2✓6↓forward_fn_1364:CNode_1411{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> sigma, [2]: ValueNode<StringImm> num_bins, [3]: ValueNode<StringImm> normalize}
#   4: @2✓6↓forward_fn_1364:CNode_1414{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<FP32Imm> 0.4, [2]: CNode_1413, [3]: ValueNode<BoolImm> true}
#   5: @2✓6↓forward_fn_1364:CNode_1415{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1411, [2]: CNode_1414}
#   6: @2✓6↓forward_fn_1364:calc2{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.1425, [1]: ValueNode<ClassType> class 'utils.MutualInformation', [2]: CNode_1415}
#   7: @2✓6↓forward_fn_1364:CNode_1416{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: Y_A, [2]: idx_attack}
#   8: @2✓6↓forward_fn_1364:CNode_1417{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> idx_attack, [2]: ValueNode<StringImm> output2}
#   9: @2✓6↓forward_fn_1364:CNode_1418{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: idx_attack, [2]: output2}
#  10: @2✓6↓forward_fn_1364:CNode_1419{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1417, [2]: CNode_1418}
#  11: @2✓6↓forward_fn_1364:CNode_1420{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'torch.softmax(output2[idx_attack], dim=1)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>, 'range': <class 'range'>}), [3]: CNode_1419}
#  12: @2✓6↓forward_fn_1364:CNode_1421{[0]: calc2, [1]: CNode_1416, [2]: CNode_1420}
#  13: @2✓6↓forward_fn_1364:CNode_1422{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1421, [2]: ValueNode<Int64Imm> 0}
#  14: @2✓6↓forward_fn_1364:CNode_1423{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w10, [2]: CNode_1422}
#  15: @2✓6↓forward_fn_1364:CNode_1424{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c10}
#  16: @2✓6↓forward_fn_1364:c10{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1423, [2]: CNode_1424}
#  17: @2✓6↓forward_fn_1364:CNode_1426{[0]: ValueNode<Primitive> Return, [1]: c10}


subgraph attr:
subgraph instance: ✗✓6↓forward_fn_1365 : 0x56297610db10
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗✓6↓forward_fn_1365 parent: [subgraph @6↓forward_fn_1256]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_1427) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
  %3(CNode_1428) = S_Prim_equal(%2, "HSIC")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
  %4(CNode_1429) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
  %5(CNode_1430) = Switch(%4, @✓✗✓6↓forward_fn_1431, @2✗✓6↓forward_fn_1432)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
  %6(CNode_1433) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
  %7(CNode_1435) = call @↓✗✓6↓forward_fn_1434(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
}
# Order:
#   1: @✗✓6↓forward_fn_1365:CNode_1427{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✗✓6↓forward_fn_1365:CNode_1428{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1427, [2]: ValueNode<StringImm> HSIC}
#   3: @✗✓6↓forward_fn_1365:CNode_1429{[0]: ValueNode<Primitive> Cond, [1]: CNode_1428, [2]: ValueNode<BoolImm> false}
#   4: @✗✓6↓forward_fn_1365:CNode_1430{[0]: ValueNode<Primitive> Switch, [1]: CNode_1429, [2]: ValueNode<FuncGraph> ✓✗✓6↓forward_fn_1431, [3]: ValueNode<FuncGraph> 2✗✓6↓forward_fn_1432}
#   5: @✗✓6↓forward_fn_1365:CNode_1433{[0]: CNode_1430}
#   6: @✗✓6↓forward_fn_1365:CNode_1435{[0]: ValueNode<FuncGraph> ↓✗✓6↓forward_fn_1434, [1]: CNode_1433}
#   7: @✗✓6↓forward_fn_1365:CNode_1436{[0]: ValueNode<Primitive> Return, [1]: CNode_1435}


subgraph attr:
after_block : 1
subgraph instance: 7↓forward_fn_1370 : 0x562976109cd0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @7↓forward_fn_1370 parent: [subgraph @6↓forward_fn_1256](%para151_) {
  %1(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %4(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(CNode_80) = $(forward_fn_63):getattr(%4, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %6(modified_adj) = $(forward_fn_63):call @adding_noise_190(%3, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %7(output2) = $(6↓forward_fn_1256):call @models_mind_gcn_GCN_construct_197(%1, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:210/        output2 = self.victim_model(ori_features, modified_adj)/
  %8(CNode_1437) = S_Prim_MakeTuple(%para151_фloss, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:225/        return loss, output2/
  Return(%8)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:225/        return loss, output2/
}
# Order:
#   1: @7↓forward_fn_1370:CNode_1437{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_фloss, [2]: output2}
#   2: @7↓forward_fn_1370:CNode_1438{[0]: ValueNode<Primitive> Return, [1]: CNode_1437}


subgraph attr:
subgraph instance: ↻✓5↓forward_fn_1376 : 0x5629760eeb30
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↻✓5↓forward_fn_1376 parent: [subgraph @↵✓5↓forward_fn_1325]() {
  %1(CNode_1374) = MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para147_@CNode_1374, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %2(CNode_1327) = $(✓5↓forward_fn_1253):S_Prim_sub(I64(2), I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %3(CNode_1328) = $(✓5↓forward_fn_1253):S_Prim_make_range(%2, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %4(CNode_1439) = call @ms_iter_512(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %5(i) = S_Prim_getitem(%4, %para147_@CNode_1374)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %6(CNode_1440) = S_Prim_add(%5, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:191/                self.embedding.set_layers(i+1)/
  %7(CNode_1442) = call @set_layers_1441(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:191/                self.embedding.set_layers(i+1)/
  %8(CNode_1443) = MakeTuple(%1, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %9(CNode_1444) = StopGradient(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
  %10(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %11(CNode_1445) = getattr(%10, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
  %12(CNode_1446) = S_Prim_equal(%11, "KDE")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
  %13(CNode_1447) = Cond(%12, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
  %14(CNode_1448) = Switch(%13, @✓↻✓5↓forward_fn_1449, @✗↻✓5↓forward_fn_1450)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
  %15(CNode_1451) = %14()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
  %16(CNode_1453) = call @↓↻✓5↓forward_fn_1452(%15)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  %17(CNode_1454) = Depend[side_effect_propagate: I64(1)](%16, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%17)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:195/                if args.measure == "KDE":/
}
# Order:
#   1: @↻✓5↓forward_fn_1376:CNode_1439{[0]: ValueNode<FuncGraph> ms_iter_512, [1]: CNode_1328}
#   2: @↻✓5↓forward_fn_1376:i{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1439, [2]: param_@CNode_1374}
#   3: @↻✓5↓forward_fn_1376:CNode_1374{[0]: ValueNode<MultitypeFuncGraph> MetaFuncGraph-add.7, [1]: param_@CNode_1374, [2]: ValueNode<Int64Imm> 1}
#   4: @↻✓5↓forward_fn_1376:CNode_1440{[0]: ValueNode<DoSignaturePrimitive> S_Prim_add, [1]: i, [2]: ValueNode<Int64Imm> 1}
#   5: @↻✓5↓forward_fn_1376:CNode_1442{[0]: ValueNode<FuncGraph> set_layers_1441, [1]: CNode_1440}
#   6: @↻✓5↓forward_fn_1376:CNode_1455{[0]: ValueNode<DoSignaturePrimitive> S_Prim_sub, [1]: modified_adj, [2]: ori_adj}
#   7: @↻✓5↓forward_fn_1376:em_cur{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_191, [1]: ori_features, [2]: CNode_1455}
#   8: @↻✓5↓forward_fn_1376:H_A_cur{[0]: ValueNode<FuncGraph> models_mind_gcn_embedding_GCN_construct_191, [1]: ori_features, [2]: adj}
#   9: @↻✓5↓forward_fn_1376:CNode_1445{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#  10: @↻✓5↓forward_fn_1376:CNode_1446{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1445, [2]: ValueNode<StringImm> KDE}
#  11: @↻✓5↓forward_fn_1376:CNode_1447{[0]: ValueNode<Primitive> Cond, [1]: CNode_1446, [2]: ValueNode<BoolImm> false}
#  12: @↻✓5↓forward_fn_1376:CNode_1448{[0]: ValueNode<Primitive> Switch, [1]: CNode_1447, [2]: ValueNode<FuncGraph> ✓↻✓5↓forward_fn_1449, [3]: ValueNode<FuncGraph> ✗↻✓5↓forward_fn_1450}
#  13: @↻✓5↓forward_fn_1376:CNode_1451{[0]: CNode_1448}
#  14: @↻✓5↓forward_fn_1376:CNode_1453{[0]: ValueNode<FuncGraph> ↓↻✓5↓forward_fn_1452, [1]: CNode_1451}
#  15: @↻✓5↓forward_fn_1376:CNode_1454{[0]: ValueNode<Primitive> Depend, [1]: CNode_1453, [2]: CNode_1444}
#  16: @↻✓5↓forward_fn_1376:CNode_1456{[0]: ValueNode<Primitive> Return, [1]: CNode_1454}


subgraph attr:
subgraph instance: ↓✓5↓forward_fn_1377 : 0x5629760ee030
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✓5↓forward_fn_1377 parent: [subgraph @↵✓5↓forward_fn_1325]() {
  Return(%para148_фloss)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:189/            num_layers = self.embedding.nlayer/
}
# Order:
#   1: @↓✓5↓forward_fn_1377:CNode_1457{[0]: ValueNode<Primitive> Return, [1]: param_фloss}


subgraph attr:
after_block : 1
subgraph instance: 5↓clip_by_value_1387 : 0x562975fde070
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @5↓clip_by_value_1387 parent: [subgraph @clip_by_value_371](%para152_) {
  %1(CNode_1458) = S_Prim_MakeTuple(ClassType, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
  %2(CNode_1459) = S_Prim_isinstance(%para84_clip_value_max, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
  %3(CNode_1460) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
  %4(CNode_1461) = Switch(%3, @✓5↓clip_by_value_1462, @✗5↓clip_by_value_1463)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
  %5(CNode_1464) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
  %6(CNode_1466) = call @6↓clip_by_value_1465(%5)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
}
# Order:
#   1: @5↓clip_by_value_1387:CNode_1458{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<ClassType> class 'float', [2]: ValueNode<ClassType> class 'int'}
#   2: @5↓clip_by_value_1387:CNode_1459{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_clip_value_max, [2]: CNode_1458}
#   3: @5↓clip_by_value_1387:CNode_1460{[0]: ValueNode<Primitive> Cond, [1]: CNode_1459, [2]: ValueNode<BoolImm> false}
#   4: @5↓clip_by_value_1387:CNode_1461{[0]: ValueNode<Primitive> Switch, [1]: CNode_1460, [2]: ValueNode<FuncGraph> ✓5↓clip_by_value_1462, [3]: ValueNode<FuncGraph> ✗5↓clip_by_value_1463}
#   5: @5↓clip_by_value_1387:CNode_1464{[0]: CNode_1461}
#   6: @5↓clip_by_value_1387:CNode_1466{[0]: ValueNode<FuncGraph> 6↓clip_by_value_1465, [1]: CNode_1464}
#   7: @5↓clip_by_value_1387:CNode_1467{[0]: ValueNode<Primitive> Return, [1]: CNode_1466}


subgraph attr:
subgraph instance: ✓4↓clip_by_value_1384 : 0x562975fdcf50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓4↓clip_by_value_1384 parent: [subgraph @clip_by_value_371]() {
  %1(clip_value_min) = S_Prim_ScalarToTensor[output_names: ["output_data"], input_names: ["input_scalar", "dtype"]](%para83_clip_value_min)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:210/        clip_value_min = scalar2tensor_op(clip_value_min)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:210/        clip_value_min = scalar2tensor_op(clip_value_min)/
}
# Order:
#   1: @✓4↓clip_by_value_1384:clip_value_min{[0]: ValueNode<DoSignaturePrimitive> S_Prim_ScalarToTensor, [1]: param_clip_value_min}
#   2: @✓4↓clip_by_value_1384:CNode_1468{[0]: ValueNode<Primitive> Return, [1]: clip_value_min}


subgraph attr:
subgraph instance: ✗4↓clip_by_value_1385 : 0x562975fdc4d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗4↓clip_by_value_1385 parent: [subgraph @clip_by_value_371]() {
  Return(%para83_clip_value_min)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:209/    if isinstance(clip_value_min, (float, int)):/
}
# Order:
#   1: @✗4↓clip_by_value_1385:CNode_1469{[0]: ValueNode<Primitive> Return, [1]: param_clip_value_min}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: 2↓_add_mixed_precision_flag_1394 : 0x562976051f50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @2↓_add_mixed_precision_flag_1394 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1470) = S_Prim_in("bf16", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %2(CNode_1471) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %3(CNode_1472) = Switch(%2, @↰2↓_add_mixed_precision_flag_1473, @↱2↓_add_mixed_precision_flag_1474)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %4(CNode_1475) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %5(CNode_1476) = Cond(%4, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %6(CNode_1477) = Switch(%5, @✓2↓_add_mixed_precision_flag_1478, @✗2↓_add_mixed_precision_flag_1479)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %7(CNode_1480) = %6()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
}
# Order:
#   1: @2↓_add_mixed_precision_flag_1394:CNode_1470{[0]: ValueNode<DoSignaturePrimitive> S_Prim_in, [1]: ValueNode<StringImm> bf16, [2]: param_flags}
#   2: @2↓_add_mixed_precision_flag_1394:CNode_1471{[0]: ValueNode<Primitive> Cond, [1]: CNode_1470, [2]: ValueNode<BoolImm> false}
#   3: @2↓_add_mixed_precision_flag_1394:CNode_1472{[0]: ValueNode<Primitive> Switch, [1]: CNode_1471, [2]: ValueNode<FuncGraph> ↰2↓_add_mixed_precision_flag_1473, [3]: ValueNode<FuncGraph> ↱2↓_add_mixed_precision_flag_1474}
#   4: @2↓_add_mixed_precision_flag_1394:CNode_1475{[0]: CNode_1472}
#   5: @2↓_add_mixed_precision_flag_1394:CNode_1476{[0]: ValueNode<Primitive> Cond, [1]: CNode_1475, [2]: ValueNode<BoolImm> false}
#   6: @2↓_add_mixed_precision_flag_1394:CNode_1477{[0]: ValueNode<Primitive> Switch, [1]: CNode_1476, [2]: ValueNode<FuncGraph> ✓2↓_add_mixed_precision_flag_1478, [3]: ValueNode<FuncGraph> ✗2↓_add_mixed_precision_flag_1479}
#   7: @2↓_add_mixed_precision_flag_1394:CNode_1480{[0]: CNode_1477}
#   8: @2↓_add_mixed_precision_flag_1394:CNode_1481{[0]: ValueNode<Primitive> Return, [1]: CNode_1480}


subgraph attr:
after_block : 1
subgraph instance: ↓✗✓6↓forward_fn_1434 : 0x562976115770
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✗✓6↓forward_fn_1434(%para153_) {
  Return(%para153_фc10)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:217/            elif args.measure == "HSIC":/
}
# Order:
#   1: @↓✗✓6↓forward_fn_1434:CNode_1482{[0]: ValueNode<Primitive> Return, [1]: param_фc10}


subgraph attr:
subgraph instance: ✓✗✓6↓forward_fn_1431 : 0x562976112810
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓✗✓6↓forward_fn_1431 parent: [subgraph @6↓forward_fn_1256]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w10) = $(forward_fn_63):S_Prim_getitem(%1, I64(9))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1483) = S_Prim_negative(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %4(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(Y_A) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%4, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:133/        Y_A = self.victim_model(ori_features, adj)/
  %7(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %8(CNode_1484) = S_Prim_getitem(%6, %7)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %9(CNode_1485) = S_Prim_MakeTuple("idx_attack", "output2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %10(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %11(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %12(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %13(CNode_80) = $(forward_fn_63):getattr(%12, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %14(modified_adj) = $(forward_fn_63):call @adding_noise_190(%11, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %15(output2) = $(6↓forward_fn_1256):call @models_mind_gcn_GCN_construct_197(%4, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:210/        output2 = self.victim_model(ori_features, modified_adj)/
  %16(CNode_1486) = S_Prim_MakeTuple(%7, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %17(CNode_1487) = S_Prim_make_dict(%9, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %18(CNode_1488) = PyInterpret[side_effect_io: Bool(1)](Script['torch.softmax(
                output2[idx_attack], dim=1)'], InterpretedObject, %17)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %19(CNode_1489) = %para45_фcalc(%8, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %20(CNode_1490) = S_Prim_mul(%3, %19)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  %21(CNode_1491) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c10")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:219/                    output2[idx_attack], dim=1))*Align_Parameter_Cora["c10"]/
  %22(c10) = S_Prim_mul(%20, %21)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
  Return(%22)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:218/                c10 = -w10 * calc(Y_A[idx_attack], torch.softmax(/
}
# Order:
#   1: @✓✗✓6↓forward_fn_1431:CNode_1483{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: w10}
#   2: @✓✗✓6↓forward_fn_1431:CNode_1484{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: Y_A, [2]: idx_attack}
#   3: @✓✗✓6↓forward_fn_1431:CNode_1485{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> idx_attack, [2]: ValueNode<StringImm> output2}
#   4: @✓✗✓6↓forward_fn_1431:CNode_1486{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: idx_attack, [2]: output2}
#   5: @✓✗✓6↓forward_fn_1431:CNode_1487{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1485, [2]: CNode_1486}
#   6: @✓✗✓6↓forward_fn_1431:CNode_1488{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'torch.softmax(
                output2[idx_attack], dim=1)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>, 'range': <class 'range'>}), [3]: CNode_1487}
#   7: @✓✗✓6↓forward_fn_1431:CNode_1489{[0]: param_фcalc, [1]: CNode_1484, [2]: CNode_1488}
#   8: @✓✗✓6↓forward_fn_1431:CNode_1490{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1483, [2]: CNode_1489}
#   9: @✓✗✓6↓forward_fn_1431:CNode_1491{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c10}
#  10: @✓✗✓6↓forward_fn_1431:c10{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1490, [2]: CNode_1491}
#  11: @✓✗✓6↓forward_fn_1431:CNode_1492{[0]: ValueNode<Primitive> Return, [1]: c10}


subgraph attr:
subgraph instance: 2✗✓6↓forward_fn_1432 : 0x56297610fc90
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✗✓6↓forward_fn_1432 parent: [subgraph @6↓forward_fn_1256]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w10) = $(forward_fn_63):S_Prim_getitem(%1, I64(9))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %4(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(Y_A) = $(forward_fn_63):call @models_mind_gcn_GCN_construct_197(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:133/        Y_A = self.victim_model(ori_features, adj)/
  %6(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_1493) = S_Prim_getitem(%5, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %8(CNode_1494) = S_Prim_MakeTuple("idx_attack", "output2")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %9(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %10(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%9)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %11(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %12(CNode_80) = $(forward_fn_63):getattr(%11, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %13(modified_adj) = $(forward_fn_63):call @adding_noise_190(%10, %12)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %14(output2) = $(6↓forward_fn_1256):call @models_mind_gcn_GCN_construct_197(%3, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:210/        output2 = self.victim_model(ori_features, modified_adj)/
  %15(CNode_1495) = S_Prim_MakeTuple(%6, %14)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %16(CNode_1496) = S_Prim_make_dict(%8, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %17(CNode_1497) = PyInterpret[side_effect_io: Bool(1)](Script['torch.softmax(
                output2[idx_attack], dim=1)'], InterpretedObject, %16)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %18(CNode_1498) = %para45_фcalc(%7, %17)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %19(CNode_1499) = S_Prim_mul(%2, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  %20(CNode_1500) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c10")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:222/                    output2[idx_attack], dim=1))*Align_Parameter_Cora["c10"]/
  %21(c10) = S_Prim_mul(%19, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
  Return(%21)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:221/                c10 = w10 * calc(Y_A[idx_attack], torch.softmax(/
}
# Order:
#   1: @2✗✓6↓forward_fn_1432:CNode_1493{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: Y_A, [2]: idx_attack}
#   2: @2✗✓6↓forward_fn_1432:CNode_1494{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> idx_attack, [2]: ValueNode<StringImm> output2}
#   3: @2✗✓6↓forward_fn_1432:CNode_1495{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: idx_attack, [2]: output2}
#   4: @2✗✓6↓forward_fn_1432:CNode_1496{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1494, [2]: CNode_1495}
#   5: @2✗✓6↓forward_fn_1432:CNode_1497{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'torch.softmax(
                output2[idx_attack], dim=1)', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>, 'range': <class 'range'>}), [3]: CNode_1496}
#   6: @2✗✓6↓forward_fn_1432:CNode_1498{[0]: param_фcalc, [1]: CNode_1493, [2]: CNode_1497}
#   7: @2✗✓6↓forward_fn_1432:CNode_1499{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w10, [2]: CNode_1498}
#   8: @2✗✓6↓forward_fn_1432:CNode_1500{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c10}
#   9: @2✗✓6↓forward_fn_1432:c10{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1499, [2]: CNode_1500}
#  10: @2✗✓6↓forward_fn_1432:CNode_1501{[0]: ValueNode<Primitive> Return, [1]: c10}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: set_layers_1441 : 0x5629760f4590
# In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
subgraph @set_layers_1441(%para154_nlayer) {
  %1(CNode_1502) = setattr[side_effect_io: Bool(1)](InterpretedObject, "nlayer", %para154_nlayer)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:435/        self.nlayer = nlayer/
  %2(CNode_1503) = StopGradient(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  %3(CNode_1504) = Depend[side_effect_propagate: I64(1)](None, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/models/mind_gcn.py:434/    def set_layers(self, nlayer):/
}
# Order:
#   1: @set_layers_1441:CNode_1502{[0]: ValueNode<Primitive> setattr, [1]: ValueNode<InterpretedObject> PythonObject(type: <class 'models.mind_gcn.embedding_GCN'>, value: embedding_GCN<
  (emb_gc1): GraphConvolution (1433 -> 16)
  >), [2]: ValueNode<StringImm> nlayer, [3]: param_nlayer}
#   2: @set_layers_1441:CNode_1505{[0]: ValueNode<Primitive> Return, [1]: CNode_1504}


subgraph attr:
after_block : 1
subgraph instance: ↓↻✓5↓forward_fn_1452 : 0x5629761015c0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓↻✓5↓forward_fn_1452 parent: [subgraph @↻✓5↓forward_fn_1376](%para155_) {
  %1(CNode_1374) = $(↻✓5↓forward_fn_1376):MultitypeFuncGraph_add{(Dictionary, Dictionary), (Tensor, COOTensor), (CSRTensor, CSRTensor), (NoneType, NoneType), (Tuple, Tensor), (COOTensor, COOTensor), (Tensor, Tuple), (Tensor, Number), (Tuple, Tuple), (Number, Number), (Tensor, List), (Number, Tensor), (List, Tensor), (List, List), (COOTensor, Tensor), (String, String), (Tensor, Tensor), (RowTensor, Tensor)}(%para147_@CNode_1374, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
  %2(CNode_1506) = S_Prim_MakeTuple("c9", "loss")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:209/                loss += c9/
  %3(CNode_1507) = S_Prim_MakeTuple(%para155_фc9, %para148_фloss)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:209/                loss += c9/
  %4(CNode_1508) = S_Prim_make_dict(%2, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:209/                loss += c9/
  %5(loss) = PyInterpret[side_effect_io: Bool(1)](Script['loss+c9'], InterpretedObject, %4)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:209/                loss += c9/
  %6(CNode_1509) = call @↵✓5↓forward_fn_1325(%1, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:190/            for i in range(num_layers-1, num_layers):/
}
# Order:
#   1: @↓↻✓5↓forward_fn_1452:CNode_1506{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> c9, [2]: ValueNode<StringImm> loss}
#   2: @↓↻✓5↓forward_fn_1452:CNode_1507{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: param_фc9, [2]: param_фloss}
#   3: @↓↻✓5↓forward_fn_1452:CNode_1508{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1506, [2]: CNode_1507}
#   4: @↓↻✓5↓forward_fn_1452:loss{[0]: ValueNode<Primitive> PyInterpret, [1]: ValueNode<Script> 'loss+c9', [2]: ValueNode<InterpretedObject> PythonObject(type: <class 'dict'>, value: {'utils': <module 'utils' from '/root/MC-GRA_test/MC-GRA/utils.py'>, 'torch': <module 'torch' from '/root/miniconda3/lib/python3.8/site-packages/torch/__init__.py'>, 'MSELoss': <class 'mindspore.nn.loss.loss.MSELoss'>, 'Align_Parameter_Cora': {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, 'Info_entropy': <function Info_entropy at 0x7f72366f61f0>, 'range': <class 'range'>, 'MutualInformation': <class 'utils.MutualInformation'>}), [3]: CNode_1508}
#   5: @↓↻✓5↓forward_fn_1452:CNode_1510{[0]: ValueNode<Primitive> Return, [1]: CNode_1509}
#   6: @↓↻✓5↓forward_fn_1452:CNode_1509{[0]: ValueNode<FuncGraph> ↵✓5↓forward_fn_1325, [1]: CNode_1374, [2]: loss}


subgraph attr:
subgraph instance: ✓↻✓5↓forward_fn_1449 : 0x5629760fdcb0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓↻✓5↓forward_fn_1449 parent: [subgraph @↻✓5↓forward_fn_1376]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w9) = $(forward_fn_63):S_Prim_getitem(%1, I64(8))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(CNode_1511) = S_Prim_MakeTuple("sigma", "num_bins", "normalize")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:196/                    calc2 = MutualInformation(/
  %4(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(H_A1) = $(forward_fn_63):call @models_mind_gcn_embedding_GCN_construct_191(%4, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:129/        H_A1 = self.embedding(ori_features, adj)/
  %7(CNode_1512) = getattr(%6, "shape")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:197/                        sigma=0.4, num_bins=H_A1.shape[1], normalize=True)/
  %8(CNode_1513) = S_Prim_getitem(%7, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:197/                        sigma=0.4, num_bins=H_A1.shape[1], normalize=True)/
  %9(CNode_1514) = S_Prim_MakeTuple(F32(0.4), %8, Bool(1))
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:196/                    calc2 = MutualInformation(/
  %10(CNode_1515) = S_Prim_make_dict(%3, %9)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:196/                    calc2 = MutualInformation(/
  %11(calc2) = UnpackCall_unpack_call(ClassType, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:196/                    calc2 = MutualInformation(/
  %12(H_A_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%4, %5)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:194/                H_A_cur = self.embedding(ori_features, adj)/
  %13(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %14(CNode_1516) = S_Prim_getitem(%12, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:199/                        (calc2(H_A_cur[idx_attack], em_cur[idx_attack])[/
  %15(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %16(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%15)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %17(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %18(CNode_80) = $(forward_fn_63):getattr(%17, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %19(modified_adj) = $(forward_fn_63):call @adding_noise_190(%16, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %20(CNode_1455) = $(↻✓5↓forward_fn_1376):S_Prim_sub(%19, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:193/                    ori_features, modified_adj - ori_adj)/
  %21(em_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%4, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:192/                em_cur = self.embedding(/
  %22(CNode_1517) = S_Prim_getitem(%21, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:199/                        (calc2(H_A_cur[idx_attack], em_cur[idx_attack])[/
  %23(CNode_1518) = %11(%14, %22)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:199/                        (calc2(H_A_cur[idx_attack], em_cur[idx_attack])[/
  %24(CNode_1519) = S_Prim_getitem(%23, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:199/                        (calc2(H_A_cur[idx_attack], em_cur[idx_attack])[/
  %25(CNode_1520) = S_Prim_mul(%2, %24)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:198/                    c9 = w9 * \/
  %26(CNode_1521) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c9")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:200/                         0])*Align_Parameter_Cora["c9"]/
  %27(c9) = S_Prim_mul(%25, %26)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:198/                    c9 = w9 * \/
  Return(%27)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:196/                    calc2 = MutualInformation(/
}
# Order:
#   1: @✓↻✓5↓forward_fn_1449:CNode_1512{[0]: ValueNode<Primitive> getattr, [1]: H_A1, [2]: ValueNode<StringImm> shape}
#   2: @✓↻✓5↓forward_fn_1449:CNode_1513{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1512, [2]: ValueNode<Int64Imm> 1}
#   3: @✓↻✓5↓forward_fn_1449:CNode_1511{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<StringImm> sigma, [2]: ValueNode<StringImm> num_bins, [3]: ValueNode<StringImm> normalize}
#   4: @✓↻✓5↓forward_fn_1449:CNode_1514{[0]: ValueNode<DoSignaturePrimitive> S_Prim_MakeTuple, [1]: ValueNode<FP32Imm> 0.4, [2]: CNode_1513, [3]: ValueNode<BoolImm> true}
#   5: @✓↻✓5↓forward_fn_1449:CNode_1515{[0]: ValueNode<DoSignaturePrimitive> S_Prim_make_dict, [1]: CNode_1511, [2]: CNode_1514}
#   6: @✓↻✓5↓forward_fn_1449:calc2{[0]: ValueNode<UnpackCall> MetaFuncGraph-unpack_call.1522, [1]: ValueNode<ClassType> class 'utils.MutualInformation', [2]: CNode_1515}
#   7: @✓↻✓5↓forward_fn_1449:CNode_1516{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: H_A_cur, [2]: idx_attack}
#   8: @✓↻✓5↓forward_fn_1449:CNode_1517{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: em_cur, [2]: idx_attack}
#   9: @✓↻✓5↓forward_fn_1449:CNode_1518{[0]: calc2, [1]: CNode_1516, [2]: CNode_1517}
#  10: @✓↻✓5↓forward_fn_1449:CNode_1519{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: CNode_1518, [2]: ValueNode<Int64Imm> 0}
#  11: @✓↻✓5↓forward_fn_1449:CNode_1520{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w9, [2]: CNode_1519}
#  12: @✓↻✓5↓forward_fn_1449:CNode_1521{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c9}
#  13: @✓↻✓5↓forward_fn_1449:c9{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1520, [2]: CNode_1521}
#  14: @✓↻✓5↓forward_fn_1449:CNode_1523{[0]: ValueNode<Primitive> Return, [1]: c9}


subgraph attr:
subgraph instance: ✗↻✓5↓forward_fn_1450 : 0x5629760f5f70
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✗↻✓5↓forward_fn_1450 parent: [subgraph @↻✓5↓forward_fn_1376]() {
  %1(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(CNode_1524) = getattr(%1, "measure")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
  %3(CNode_1525) = S_Prim_equal(%2, "HSIC")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
  %4(CNode_1526) = Cond(%3, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
  %5(CNode_1527) = Switch(%4, @✓✗↻✓5↓forward_fn_1528, @2✗↻✓5↓forward_fn_1529)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
  %6(CNode_1530) = %5()
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
  %7(CNode_1532) = call @↓✗↻✓5↓forward_fn_1531(%6)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/composite/base.py:589/                        return grad_(fn, weights)(*args)/
  Return(%7)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
}
# Order:
#   1: @✗↻✓5↓forward_fn_1450:CNode_1524{[0]: ValueNode<Primitive> getattr, [1]: args, [2]: ValueNode<StringImm> measure}
#   2: @✗↻✓5↓forward_fn_1450:CNode_1525{[0]: ValueNode<DoSignaturePrimitive> S_Prim_equal, [1]: CNode_1524, [2]: ValueNode<StringImm> HSIC}
#   3: @✗↻✓5↓forward_fn_1450:CNode_1526{[0]: ValueNode<Primitive> Cond, [1]: CNode_1525, [2]: ValueNode<BoolImm> false}
#   4: @✗↻✓5↓forward_fn_1450:CNode_1527{[0]: ValueNode<Primitive> Switch, [1]: CNode_1526, [2]: ValueNode<FuncGraph> ✓✗↻✓5↓forward_fn_1528, [3]: ValueNode<FuncGraph> 2✗↻✓5↓forward_fn_1529}
#   5: @✗↻✓5↓forward_fn_1450:CNode_1530{[0]: CNode_1527}
#   6: @✗↻✓5↓forward_fn_1450:CNode_1532{[0]: ValueNode<FuncGraph> ↓✗↻✓5↓forward_fn_1531, [1]: CNode_1530}
#   7: @✗↻✓5↓forward_fn_1450:CNode_1533{[0]: ValueNode<Primitive> Return, [1]: CNode_1532}


subgraph attr:
after_block : 1
subgraph instance: 6↓clip_by_value_1465 : 0x562975fe2ee0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @6↓clip_by_value_1465 parent: [subgraph @5↓clip_by_value_1387](%para156_) {
  %1(CNode_1534) = S_Prim_isinstance(%para82_x, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
  %2(CNode_1535) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
  %3(CNode_1536) = Switch(%2, @✓6↓clip_by_value_1537, @✗6↓clip_by_value_1538)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
  %4(CNode_1539) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
  Return(%4)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
}
# Order:
#   1: @6↓clip_by_value_1465:CNode_1534{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_x, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @6↓clip_by_value_1465:CNode_1535{[0]: ValueNode<Primitive> Cond, [1]: CNode_1534, [2]: ValueNode<BoolImm> false}
#   3: @6↓clip_by_value_1465:CNode_1536{[0]: ValueNode<Primitive> Switch, [1]: CNode_1535, [2]: ValueNode<FuncGraph> ✓6↓clip_by_value_1537, [3]: ValueNode<FuncGraph> ✗6↓clip_by_value_1538}
#   4: @6↓clip_by_value_1465:CNode_1539{[0]: CNode_1536}
#   5: @6↓clip_by_value_1465:CNode_1540{[0]: ValueNode<Primitive> Return, [1]: CNode_1539}


subgraph attr:
subgraph instance: ✓5↓clip_by_value_1462 : 0x562975fe1e40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓5↓clip_by_value_1462 parent: [subgraph @clip_by_value_371]() {
  %1(clip_value_max) = S_Prim_ScalarToTensor[output_names: ["output_data"], input_names: ["input_scalar", "dtype"]](%para84_clip_value_max)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:212/        clip_value_max = scalar2tensor_op(clip_value_max)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:212/        clip_value_max = scalar2tensor_op(clip_value_max)/
}
# Order:
#   1: @✓5↓clip_by_value_1462:clip_value_max{[0]: ValueNode<DoSignaturePrimitive> S_Prim_ScalarToTensor, [1]: param_clip_value_max}
#   2: @✓5↓clip_by_value_1462:CNode_1541{[0]: ValueNode<Primitive> Return, [1]: clip_value_max}


subgraph attr:
subgraph instance: ✗5↓clip_by_value_1463 : 0x562975fe1110
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗5↓clip_by_value_1463 parent: [subgraph @clip_by_value_371]() {
  Return(%para84_clip_value_max)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:211/    if isinstance(clip_value_max, (float, int)):/
}
# Order:
#   1: @✗5↓clip_by_value_1463:CNode_1542{[0]: ValueNode<Primitive> Return, [1]: param_clip_value_max}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✓2↓_add_mixed_precision_flag_1478 : 0x562976059210
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✓2↓_add_mixed_precision_flag_1478() {
  %1(CNode_1543) = getattr(ClassType, "set_mixed_precision_type")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
  %2(CNode_1544) = getattr(ClassType, "BF16")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
  %3(CNode_1545) = %1(ClassMember, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
  %4(CNode_1546) = StopGradient(%3)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
  %5(CNode_1548) = call @3↓_add_mixed_precision_flag_1547()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
  %6(CNode_1549) = Depend[side_effect_propagate: I64(1)](%5, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
  Return(%6)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1637/            Cell_.set_mixed_precision_type(self, MixedPrecisionType.BF16)/
}
# Order:
#   1: @✓2↓_add_mixed_precision_flag_1478:CNode_1543{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.Cell_', [2]: ValueNode<StringImm> set_mixed_precision_type}
#   2: @✓2↓_add_mixed_precision_flag_1478:CNode_1544{[0]: ValueNode<Primitive> getattr, [1]: ValueNode<ClassType> class 'mindspore._c_expression.MixedPrecisionType', [2]: ValueNode<StringImm> BF16}
#   3: @✓2↓_add_mixed_precision_flag_1478:CNode_1545{[0]: CNode_1543, [1]: ValueNode<NameSpace> ClassMember: 'Namespace:models.mind_gcn..<GCN::140128514916816>', [2]: CNode_1544}
#   4: @✓2↓_add_mixed_precision_flag_1478:CNode_1548{[0]: ValueNode<FuncGraph> 3↓_add_mixed_precision_flag_1547}
#   5: @✓2↓_add_mixed_precision_flag_1478:CNode_1550{[0]: ValueNode<Primitive> Return, [1]: CNode_1549}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ✗2↓_add_mixed_precision_flag_1479 : 0x562976056d50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @✗2↓_add_mixed_precision_flag_1479() {
  %1(CNode_1551) = call @3↓_add_mixed_precision_flag_1547()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
}
# Order:
#   1: @✗2↓_add_mixed_precision_flag_1479:CNode_1551{[0]: ValueNode<FuncGraph> 3↓_add_mixed_precision_flag_1547}
#   2: @✗2↓_add_mixed_precision_flag_1479:CNode_1552{[0]: ValueNode<Primitive> Return, [1]: CNode_1551}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↰2↓_add_mixed_precision_flag_1473 : 0x5629760557b0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↰2↓_add_mixed_precision_flag_1473 parent: [subgraph @_add_mixed_precision_flag_1125]() {
  %1(CNode_1553) = getattr(%para141_flags, "get")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  %2(CNode_1554) = %1("bf16", Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
}
# Order:
#   1: @↰2↓_add_mixed_precision_flag_1473:CNode_1553{[0]: ValueNode<Primitive> getattr, [1]: param_flags, [2]: ValueNode<StringImm> get}
#   2: @↰2↓_add_mixed_precision_flag_1473:CNode_1554{[0]: CNode_1553, [1]: ValueNode<StringImm> bf16, [2]: ValueNode<BoolImm> false}
#   3: @↰2↓_add_mixed_precision_flag_1473:CNode_1555{[0]: ValueNode<Primitive> Return, [1]: CNode_1554}


subgraph attr:
training : 0
ge_sync_data : 0
subgraph instance: ↱2↓_add_mixed_precision_flag_1474 : 0x5629760548d0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @↱2↓_add_mixed_precision_flag_1474 parent: [subgraph @2↓_add_mixed_precision_flag_1394]() {
  %1(CNode_1470) = $(2↓_add_mixed_precision_flag_1394):S_Prim_in("bf16", %para141_flags)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1636/        if "bf16" in flags and flags.get("bf16", False):/
}
# Order:
#   1: @↱2↓_add_mixed_precision_flag_1474:CNode_1556{[0]: ValueNode<Primitive> Return, [1]: CNode_1470}


subgraph attr:
after_block : 1
subgraph instance: ↓✗↻✓5↓forward_fn_1531 : 0x5629760fcb70
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @↓✗↻✓5↓forward_fn_1531(%para157_) {
  Return(%para157_фc9)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:201/                elif args.measure == "HSIC":/
}
# Order:
#   1: @↓✗↻✓5↓forward_fn_1531:CNode_1557{[0]: ValueNode<Primitive> Return, [1]: param_фc9}


subgraph attr:
subgraph instance: ✓✗↻✓5↓forward_fn_1528 : 0x5629760fa280
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @✓✗↻✓5↓forward_fn_1528 parent: [subgraph @↻✓5↓forward_fn_1376]() {
  %1(CNode_1558) = S_Prim_negative(I64(1))
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:202/                    c9 = -1 * w9 * \/
  %2(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %3(w9) = $(forward_fn_63):S_Prim_getitem(%2, I64(8))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %4(CNode_1559) = S_Prim_mul(%1, %3)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:202/                    c9 = -1 * w9 * \/
  %5(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %6(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(H_A_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%5, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:194/                H_A_cur = self.embedding(ori_features, adj)/
  %8(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %9(CNode_1560) = S_Prim_getitem(%7, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:203/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %10(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %11(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%10)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %12(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %13(CNode_80) = $(forward_fn_63):getattr(%12, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %14(modified_adj) = $(forward_fn_63):call @adding_noise_190(%11, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %15(CNode_1455) = $(↻✓5↓forward_fn_1376):S_Prim_sub(%14, %10)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:193/                    ori_features, modified_adj - ori_adj)/
  %16(em_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%5, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:192/                em_cur = self.embedding(/
  %17(CNode_1561) = S_Prim_getitem(%16, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:203/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %18(CNode_1562) = %para45_фcalc(%9, %17)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:203/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %19(CNode_1563) = S_Prim_mul(%4, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:202/                    c9 = -1 * w9 * \/
  %20(CNode_1564) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c9")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:204/                         )*Align_Parameter_Cora["c9"]/
  %21(c9) = S_Prim_mul(%19, %20)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:202/                    c9 = -1 * w9 * \/
  Return(%21)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:202/                    c9 = -1 * w9 * \/
}
# Order:
#   1: @✓✗↻✓5↓forward_fn_1528:CNode_1558{[0]: ValueNode<DoSignaturePrimitive> S_Prim_negative, [1]: ValueNode<Int64Imm> 1}
#   2: @✓✗↻✓5↓forward_fn_1528:CNode_1559{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1558, [2]: w9}
#   3: @✓✗↻✓5↓forward_fn_1528:CNode_1560{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: H_A_cur, [2]: idx_attack}
#   4: @✓✗↻✓5↓forward_fn_1528:CNode_1561{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: em_cur, [2]: idx_attack}
#   5: @✓✗↻✓5↓forward_fn_1528:CNode_1562{[0]: param_фcalc, [1]: CNode_1560, [2]: CNode_1561}
#   6: @✓✗↻✓5↓forward_fn_1528:CNode_1563{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1559, [2]: CNode_1562}
#   7: @✓✗↻✓5↓forward_fn_1528:CNode_1564{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c9}
#   8: @✓✗↻✓5↓forward_fn_1528:c9{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1563, [2]: CNode_1564}
#   9: @✓✗↻✓5↓forward_fn_1528:CNode_1565{[0]: ValueNode<Primitive> Return, [1]: c9}


subgraph attr:
subgraph instance: 2✗↻✓5↓forward_fn_1529 : 0x5629760f80a0
# In file /root/MC-GRA_test/MC-GRA/topology_attack.py:104/    def forward_fn(self, data, label=None):/
subgraph @2✗↻✓5↓forward_fn_1529 parent: [subgraph @↻✓5↓forward_fn_1376]() {
  %1(weight_param) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(5))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %2(w9) = $(forward_fn_63):S_Prim_getitem(%1, I64(8))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:107/        w1, w2, _, _, _, w6, w7, w8, w9, w10 = weight_param/
  %3(ori_features) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(2))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %4(adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(1))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %5(H_A_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%3, %4)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:194/                H_A_cur = self.embedding(ori_features, adj)/
  %6(idx_attack) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(7))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %7(CNode_1566) = S_Prim_getitem(%5, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:207/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %8(ori_adj) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %9(modified_adj) = $(forward_fn_63):call @get_modified_adj_189(%8)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:109/        modified_adj = self.get_modified_adj(ori_adj)/
  %10(args) = $(forward_fn_63):S_Prim_getitem(%para27_data, I64(4))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:106/        ori_adj, adj, ori_features, feature_adj, args, weight_param, weight_supervised, idx_attack = data/
  %11(CNode_80) = $(forward_fn_63):getattr(%10, "eps")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %12(modified_adj) = $(forward_fn_63):call @adding_noise_190(%9, %11)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:110/        modified_adj = self.adding_noise(modified_adj, args.eps)/
  %13(CNode_1455) = $(↻✓5↓forward_fn_1376):S_Prim_sub(%12, %8)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:193/                    ori_features, modified_adj - ori_adj)/
  %14(em_cur) = $(↻✓5↓forward_fn_1376):call @models_mind_gcn_embedding_GCN_construct_191(%3, %13)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:192/                em_cur = self.embedding(/
  %15(CNode_1567) = S_Prim_getitem(%14, %6)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:207/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %16(CNode_1568) = %para45_фcalc(%7, %15)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:207/                        (calc(H_A_cur[idx_attack], em_cur[idx_attack])/
  %17(CNode_1569) = S_Prim_mul(%2, %16)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:206/                    c9 = w9 * \/
  %18(CNode_1570) = S_Prim_getitem({"c1": I64(100), "c2": I64(1000), "c3": I64(100), "c4": I64(10), "c5": I64(10), "c6": I64(10), "c7": I64(10), "c8": F32(0.01), "c9": I64(1), "c10": I64(1)}, "c9")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:208/                         )*Align_Parameter_Cora["c9"]/
  %19(c9) = S_Prim_mul(%17, %18)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:206/                    c9 = w9 * \/
  Return(%19)
      : (<null>)
      #scope: (Default)
      # In file /root/MC-GRA_test/MC-GRA/topology_attack.py:206/                    c9 = w9 * \/
}
# Order:
#   1: @2✗↻✓5↓forward_fn_1529:CNode_1566{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: H_A_cur, [2]: idx_attack}
#   2: @2✗↻✓5↓forward_fn_1529:CNode_1567{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: em_cur, [2]: idx_attack}
#   3: @2✗↻✓5↓forward_fn_1529:CNode_1568{[0]: param_фcalc, [1]: CNode_1566, [2]: CNode_1567}
#   4: @2✗↻✓5↓forward_fn_1529:CNode_1569{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: w9, [2]: CNode_1568}
#   5: @2✗↻✓5↓forward_fn_1529:CNode_1570{[0]: ValueNode<DoSignaturePrimitive> S_Prim_getitem, [1]: ValueNode<ValueDictionary> {'c1': 100, 'c2': 1000, 'c3': 100, 'c4': 10, 'c5': 10, 'c6': 10, 'c7': 10, 'c8': 0.01, 'c9': 1, 'c10': 1}, [2]: ValueNode<StringImm> c9}
#   6: @2✗↻✓5↓forward_fn_1529:c9{[0]: ValueNode<DoSignaturePrimitive> S_Prim_mul, [1]: CNode_1569, [2]: CNode_1570}
#   7: @2✗↻✓5↓forward_fn_1529:CNode_1571{[0]: ValueNode<Primitive> Return, [1]: c9}


subgraph attr:
subgraph instance: ✓6↓clip_by_value_1537 : 0x562975ffd060
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓6↓clip_by_value_1537 parent: [subgraph @6↓clip_by_value_1465]() {
  %1(CNode_1573) = call @_clip_by_value_1572(%para152_фclip_value_min, %para156_фclip_value_max, %para82_x)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:215/        return _clip_by_value(clip_value_min, clip_value_max, x)/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:215/        return _clip_by_value(clip_value_min, clip_value_max, x)/
}
# Order:
#   1: @✓6↓clip_by_value_1537:CNode_1573{[0]: ValueNode<FuncGraph> _clip_by_value_1572, [1]: param_фclip_value_min, [2]: param_фclip_value_max, [3]: param_x}
#   2: @✓6↓clip_by_value_1537:CNode_1574{[0]: ValueNode<Primitive> Return, [1]: CNode_1573}


subgraph attr:
subgraph instance: ✗6↓clip_by_value_1538 : 0x562975fe5710
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗6↓clip_by_value_1538 parent: [subgraph @6↓clip_by_value_1465]() {
  %1(CNode_1576) = call @7↓clip_by_value_1575()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:214/    if isinstance(x, Tensor):/
}
# Order:
#   1: @✗6↓clip_by_value_1538:CNode_1576{[0]: ValueNode<FuncGraph> 7↓clip_by_value_1575}
#   2: @✗6↓clip_by_value_1538:CNode_1577{[0]: ValueNode<Primitive> Return, [1]: CNode_1576}


subgraph attr:
after_block : 1
training : 0
ge_sync_data : 0
subgraph instance: 3↓_add_mixed_precision_flag_1547 : 0x562976058100
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
subgraph @3↓_add_mixed_precision_flag_1547() {
  Return(None)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/nn/cell.py:1630/    def _add_mixed_precision_flag(self, **flags):/
}
# Order:
#   1: @3↓_add_mixed_precision_flag_1547:CNode_1578{[0]: ValueNode<Primitive> Return, [1]: ValueNode<None> None}


subgraph attr:
subgraph instance: _clip_by_value_1572 : 0x562975febc30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @_clip_by_value_1572(%para158_clip_min, %para159_clip_max, %para160_x) {
  %1(CNode_1579) = S_Prim_isinstance(%para160_result, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  %2(CNode_1580) = S_Prim_logical_not(%1)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  %3(CNode_1581) = Cond(%2, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  %4(CNode_1582) = Switch(%3, @✓_clip_by_value_1583, @✗_clip_by_value_1584)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  %5(CNode_1585) = %4()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
}
# Order:
#   1: @_clip_by_value_1572:CNode_1579{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_result, [2]: ValueNode<ClassType> class 'mindspore.common.tensor.Tensor'}
#   2: @_clip_by_value_1572:CNode_1580{[0]: ValueNode<DoSignaturePrimitive> S_Prim_logical_not, [1]: CNode_1579}
#   3: @_clip_by_value_1572:CNode_1581{[0]: ValueNode<Primitive> Cond, [1]: CNode_1580, [2]: ValueNode<BoolImm> false}
#   4: @_clip_by_value_1572:CNode_1582{[0]: ValueNode<Primitive> Switch, [1]: CNode_1581, [2]: ValueNode<FuncGraph> ✓_clip_by_value_1583, [3]: ValueNode<FuncGraph> ✗_clip_by_value_1584}
#   5: @_clip_by_value_1572:CNode_1585{[0]: CNode_1582}
#   6: @_clip_by_value_1572:CNode_1586{[0]: ValueNode<Primitive> Return, [1]: CNode_1585}


subgraph attr:
after_block : 1
subgraph instance: 7↓clip_by_value_1575 : 0x562975fe6f90
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @7↓clip_by_value_1575 parent: [subgraph @6↓clip_by_value_1465]() {
  %1(CNode_1587) = S_Prim_isinstance(%para82_x, ClassType)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
  %2(CNode_1588) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
  %3(CNode_1589) = Switch(%2, @✓7↓clip_by_value_1590, @✗7↓clip_by_value_1591)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
  %4(CNode_1592) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
  %5(CNode_1594) = call @8↓clip_by_value_1593(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
}
# Order:
#   1: @7↓clip_by_value_1575:CNode_1595{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Partial, [1]: ValueNode<FuncGraph> _clip_by_value_1572, [2]: param_фclip_value_min, [3]: param_фclip_value_max}
#   2: @7↓clip_by_value_1575:results{[0]: ValueNode<DoSignaturePrimitive> S_Prim_hyper_map, [1]: CNode_1595, [2]: param_x}
#   3: @7↓clip_by_value_1575:CNode_1587{[0]: ValueNode<DoSignaturePrimitive> S_Prim_isinstance, [1]: param_x, [2]: ValueNode<ClassType> class 'tuple'}
#   4: @7↓clip_by_value_1575:CNode_1588{[0]: ValueNode<Primitive> Cond, [1]: CNode_1587, [2]: ValueNode<BoolImm> false}
#   5: @7↓clip_by_value_1575:CNode_1589{[0]: ValueNode<Primitive> Switch, [1]: CNode_1588, [2]: ValueNode<FuncGraph> ✓7↓clip_by_value_1590, [3]: ValueNode<FuncGraph> ✗7↓clip_by_value_1591}
#   6: @7↓clip_by_value_1575:CNode_1592{[0]: CNode_1589}
#   7: @7↓clip_by_value_1575:CNode_1594{[0]: ValueNode<FuncGraph> 8↓clip_by_value_1593, [1]: CNode_1592}
#   8: @7↓clip_by_value_1575:CNode_1596{[0]: ValueNode<Primitive> Return, [1]: CNode_1594}


subgraph attr:
subgraph instance: ✓_clip_by_value_1583 : 0x562975ffad50
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✓_clip_by_value_1583() {
  %1(CNode_1597) = raise[side_effect_io: Bool(1)]("TypeError", "For 'clip_by_value', the type of argument 'x' must be Tensor or tuple[Tensor] or list[Tensor]", "None")
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:188/            raise TypeError("For 'clip_by_value', the type of argument 'x' must be "/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:188/            raise TypeError("For 'clip_by_value', the type of argument 'x' must be "/
}
# Order:
#   1: @✓_clip_by_value_1583:CNode_1597{[0]: ValueNode<Primitive> raise, [1]: ValueNode<StringImm> TypeError, [2]: ValueNode<StringImm> For 'clip_by_value', the type of argument 'x' must be Tensor or tuple[Tensor] or list[Tensor], [3]: ValueNode<StringImm> None}
#   2: @✓_clip_by_value_1583:CNode_1598{[0]: ValueNode<Primitive> Return, [1]: CNode_1597}


subgraph attr:
subgraph instance: ✗_clip_by_value_1584 : 0x562975fee8c0
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✗_clip_by_value_1584 parent: [subgraph @_clip_by_value_1572]() {
  %1(CNode_1600) = call @↓_clip_by_value_1599()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
  Return(%1)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:187/        if not isinstance(x, Tensor):/
}
# Order:
#   1: @✗_clip_by_value_1584:CNode_1600{[0]: ValueNode<FuncGraph> ↓_clip_by_value_1599}
#   2: @✗_clip_by_value_1584:CNode_1601{[0]: ValueNode<Primitive> Return, [1]: CNode_1600}


subgraph attr:
after_block : 1
subgraph instance: 8↓clip_by_value_1593 : 0x562975ffbf20
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @8↓clip_by_value_1593(%para161_) {
  Return(%para161_фresults)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:219/    return results/
}
# Order:
#   1: @8↓clip_by_value_1593:CNode_1602{[0]: ValueNode<Primitive> Return, [1]: param_фresults}


subgraph attr:
subgraph instance: ✓7↓clip_by_value_1590 : 0x562975feab90
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✓7↓clip_by_value_1590 parent: [subgraph @7↓clip_by_value_1575]() {
  %1(CNode_1595) = $(7↓clip_by_value_1575):S_Prim_Partial[side_effect_propagate: I64(1)](@_clip_by_value_1572, %para152_фclip_value_min, %para156_фclip_value_max)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:216/    results = hyper_map(partial_op(_clip_by_value, clip_value_min, clip_value_max), x)/
  %2(results) = $(7↓clip_by_value_1575):S_Prim_hyper_map(%1, %para82_x)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:216/    results = hyper_map(partial_op(_clip_by_value, clip_value_min, clip_value_max), x)/
  %3(results) = ClassType(%2)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:218/        results = tuple(results)/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:218/        results = tuple(results)/
}
# Order:
#   1: @✓7↓clip_by_value_1590:results{[0]: ValueNode<ClassType> class 'tuple', [1]: results}
#   2: @✓7↓clip_by_value_1590:CNode_1603{[0]: ValueNode<Primitive> Return, [1]: results}


subgraph attr:
subgraph instance: ✗7↓clip_by_value_1591 : 0x562975fe9e70
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:114/def clip_by_value(x, clip_value_min=None, clip_value_max=None):/
subgraph @✗7↓clip_by_value_1591 parent: [subgraph @7↓clip_by_value_1575]() {
  %1(CNode_1595) = $(7↓clip_by_value_1575):S_Prim_Partial[side_effect_propagate: I64(1)](@_clip_by_value_1572, %para152_фclip_value_min, %para156_фclip_value_max)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:216/    results = hyper_map(partial_op(_clip_by_value, clip_value_min, clip_value_max), x)/
  %2(results) = $(7↓clip_by_value_1575):S_Prim_hyper_map(%1, %para82_x)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:216/    results = hyper_map(partial_op(_clip_by_value, clip_value_min, clip_value_max), x)/
  Return(%2)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:217/    if isinstance(x, tuple):/
}
# Order:
#   1: @✗7↓clip_by_value_1591:CNode_1604{[0]: ValueNode<Primitive> Return, [1]: results}


subgraph attr:
after_block : 1
subgraph instance: ↓_clip_by_value_1599 : 0x562975fefc00
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @↓_clip_by_value_1599 parent: [subgraph @_clip_by_value_1572]() {
  %1(CNode_1605) = S_Prim_is_not(%para158_clip_min, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
  %2(CNode_1606) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
  %3(CNode_1607) = Switch(%2, @✓↓_clip_by_value_1608, @✗↓_clip_by_value_1609)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
  %4(CNode_1610) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
  %5(CNode_1612) = call @2↓_clip_by_value_1611(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
}
# Order:
#   1: @↓_clip_by_value_1599:CNode_1605{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_clip_min, [2]: ValueNode<None> None}
#   2: @↓_clip_by_value_1599:CNode_1606{[0]: ValueNode<Primitive> Cond, [1]: CNode_1605, [2]: ValueNode<BoolImm> false}
#   3: @↓_clip_by_value_1599:CNode_1607{[0]: ValueNode<Primitive> Switch, [1]: CNode_1606, [2]: ValueNode<FuncGraph> ✓↓_clip_by_value_1608, [3]: ValueNode<FuncGraph> ✗↓_clip_by_value_1609}
#   4: @↓_clip_by_value_1599:CNode_1610{[0]: CNode_1607}
#   5: @↓_clip_by_value_1599:CNode_1612{[0]: ValueNode<FuncGraph> 2↓_clip_by_value_1611, [1]: CNode_1610}
#   6: @↓_clip_by_value_1599:CNode_1613{[0]: ValueNode<Primitive> Return, [1]: CNode_1612}


subgraph attr:
after_block : 1
subgraph instance: 2↓_clip_by_value_1611 : 0x562975ff4320
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @2↓_clip_by_value_1611 parent: [subgraph @_clip_by_value_1572](%para162_) {
  %1(CNode_1614) = S_Prim_is_not(%para159_clip_max, None)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
  %2(CNode_1615) = Cond(%1, Bool(0))
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
  %3(CNode_1616) = Switch(%2, @✓2↓_clip_by_value_1617, @✗2↓_clip_by_value_1618)
      : (<null>, <null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
  %4(CNode_1619) = %3()
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
  %5(CNode_1621) = call @3↓_clip_by_value_1620(%4)
      : (<null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:288/    return clip_by_value(input, min, max)/
  Return(%5)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
}
# Order:
#   1: @2↓_clip_by_value_1611:CNode_1614{[0]: ValueNode<DoSignaturePrimitive> S_Prim_is_not, [1]: param_clip_max, [2]: ValueNode<None> None}
#   2: @2↓_clip_by_value_1611:CNode_1615{[0]: ValueNode<Primitive> Cond, [1]: CNode_1614, [2]: ValueNode<BoolImm> false}
#   3: @2↓_clip_by_value_1611:CNode_1616{[0]: ValueNode<Primitive> Switch, [1]: CNode_1615, [2]: ValueNode<FuncGraph> ✓2↓_clip_by_value_1617, [3]: ValueNode<FuncGraph> ✗2↓_clip_by_value_1618}
#   4: @2↓_clip_by_value_1611:CNode_1619{[0]: CNode_1616}
#   5: @2↓_clip_by_value_1611:CNode_1621{[0]: ValueNode<FuncGraph> 3↓_clip_by_value_1620, [1]: CNode_1619}
#   6: @2↓_clip_by_value_1611:CNode_1622{[0]: ValueNode<Primitive> Return, [1]: CNode_1621}


subgraph attr:
subgraph instance: ✓↓_clip_by_value_1608 : 0x562975ff2b40
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✓↓_clip_by_value_1608 parent: [subgraph @_clip_by_value_1572]() {
  %1(CNode_1623) = getattr(%para160_result, "dtype")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:192/            result = max_op(result, cast_op(clip_min, x.dtype))/
  %2(CNode_1624) = S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]](%para158_clip_min, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:192/            result = max_op(result, cast_op(clip_min, x.dtype))/
  %3(result) = S_Prim_Maximum[output_names: ["output"], input_names: ["x", "y"]](%para160_result, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:192/            result = max_op(result, cast_op(clip_min, x.dtype))/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:192/            result = max_op(result, cast_op(clip_min, x.dtype))/
}
# Order:
#   1: @✓↓_clip_by_value_1608:CNode_1623{[0]: ValueNode<Primitive> getattr, [1]: param_result, [2]: ValueNode<StringImm> dtype}
#   2: @✓↓_clip_by_value_1608:CNode_1624{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Cast, [1]: param_clip_min, [2]: CNode_1623}
#   3: @✓↓_clip_by_value_1608:result{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Maximum, [1]: param_result, [2]: CNode_1624}
#   4: @✓↓_clip_by_value_1608:CNode_1625{[0]: ValueNode<Primitive> Return, [1]: result}


subgraph attr:
subgraph instance: ✗↓_clip_by_value_1609 : 0x562975ff1d30
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✗↓_clip_by_value_1609 parent: [subgraph @_clip_by_value_1572]() {
  Return(%para160_result)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:191/        if clip_min is not None:/
}
# Order:
#   1: @✗↓_clip_by_value_1609:CNode_1626{[0]: ValueNode<Primitive> Return, [1]: param_result}


subgraph attr:
after_block : 1
subgraph instance: 3↓_clip_by_value_1620 : 0x562975ff9c10
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @3↓_clip_by_value_1620(%para163_) {
  Return(%para163_фresult)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:195/        return result/
}
# Order:
#   1: @3↓_clip_by_value_1620:CNode_1627{[0]: ValueNode<Primitive> Return, [1]: param_фresult}


subgraph attr:
subgraph instance: ✓2↓_clip_by_value_1617 : 0x562975ff8430
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✓2↓_clip_by_value_1617 parent: [subgraph @2↓_clip_by_value_1611]() {
  %1(CNode_1628) = getattr(%para160_result, "dtype")
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:194/            result = min_op(result, cast_op(clip_max, x.dtype))/
  %2(CNode_1629) = S_Prim_Cast[output_names: ["output"], input_names: ["x", "dst_type"]](%para159_clip_max, %1)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:194/            result = min_op(result, cast_op(clip_max, x.dtype))/
  %3(result) = S_Prim_Minimum[output_names: ["output"], input_names: ["x", "y"]](%para162_фresult, %2)
      : (<null>, <null>) -> (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:194/            result = min_op(result, cast_op(clip_max, x.dtype))/
  Return(%3)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:194/            result = min_op(result, cast_op(clip_max, x.dtype))/
}
# Order:
#   1: @✓2↓_clip_by_value_1617:CNode_1628{[0]: ValueNode<Primitive> getattr, [1]: param_result, [2]: ValueNode<StringImm> dtype}
#   2: @✓2↓_clip_by_value_1617:CNode_1629{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Cast, [1]: param_clip_max, [2]: CNode_1628}
#   3: @✓2↓_clip_by_value_1617:result{[0]: ValueNode<DoSignaturePrimitive> S_Prim_Minimum, [1]: param_фresult, [2]: CNode_1629}
#   4: @✓2↓_clip_by_value_1617:CNode_1630{[0]: ValueNode<Primitive> Return, [1]: result}


subgraph attr:
subgraph instance: ✗2↓_clip_by_value_1618 : 0x56296f99ae90
# In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:186/    def _clip_by_value(clip_min, clip_max, x):/
subgraph @✗2↓_clip_by_value_1618 parent: [subgraph @2↓_clip_by_value_1611]() {
  Return(%para162_фresult)
      : (<null>)
      #scope: (Default)
      # In file /root/miniconda3/lib/python3.8/site-packages/mindspore/ops/function/clip_func.py:193/        if clip_max is not None:/
}
# Order:
#   1: @✗2↓_clip_by_value_1618:CNode_1631{[0]: ValueNode<Primitive> Return, [1]: param_фresult}


